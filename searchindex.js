Search.setIndex({"docnames": ["background", "configuration/config", "configuration/hydra", "configuration/index", "contributing", "index", "reference/api/cambrian/agents/agent/index", "reference/api/cambrian/agents/index", "reference/api/cambrian/agents/object/index", "reference/api/cambrian/agents/point/index", "reference/api/cambrian/envs/done_fns/index", "reference/api/cambrian/envs/index", "reference/api/cambrian/envs/reward_fns/index", "reference/api/cambrian/envs/step_fns/index", "reference/api/cambrian/eyes/eye/index", "reference/api/cambrian/eyes/index", "reference/api/cambrian/eyes/optics/index", "reference/api/cambrian/index", "reference/api/cambrian/ml/callbacks/index", "reference/api/cambrian/ml/constraint_fns/index", "reference/api/cambrian/ml/evo/index", "reference/api/cambrian/ml/features_extractors/index", "reference/api/cambrian/ml/fitness_fns/index", "reference/api/cambrian/ml/index", "reference/api/cambrian/ml/model/index", "reference/api/cambrian/ml/trainer/index", "reference/api/cambrian/renderer/index", "reference/api/cambrian/renderer/overlays/index", "reference/api/cambrian/renderer/render_utils/index", "reference/api/cambrian/renderer/renderer/index", "reference/api/cambrian/utils/cambrian_xml/index", "reference/api/cambrian/utils/config/index", "reference/api/cambrian/utils/index", "reference/api/cambrian/utils/logger/index", "reference/api/cambrian/utils/wrappers/index", "reference/index", "setup", "usage/index", "usage/training", "usage/visualizing"], "filenames": ["background.md", "configuration/config.md", "configuration/hydra.md", "configuration/index.md", "contributing.md", "index.md", "reference/api/cambrian/agents/agent/index.rst", "reference/api/cambrian/agents/index.rst", "reference/api/cambrian/agents/object/index.rst", "reference/api/cambrian/agents/point/index.rst", "reference/api/cambrian/envs/done_fns/index.rst", "reference/api/cambrian/envs/index.rst", "reference/api/cambrian/envs/reward_fns/index.rst", "reference/api/cambrian/envs/step_fns/index.rst", "reference/api/cambrian/eyes/eye/index.rst", "reference/api/cambrian/eyes/index.rst", "reference/api/cambrian/eyes/optics/index.rst", "reference/api/cambrian/index.rst", "reference/api/cambrian/ml/callbacks/index.rst", "reference/api/cambrian/ml/constraint_fns/index.rst", "reference/api/cambrian/ml/evo/index.rst", "reference/api/cambrian/ml/features_extractors/index.rst", "reference/api/cambrian/ml/fitness_fns/index.rst", "reference/api/cambrian/ml/index.rst", "reference/api/cambrian/ml/model/index.rst", "reference/api/cambrian/ml/trainer/index.rst", "reference/api/cambrian/renderer/index.rst", "reference/api/cambrian/renderer/overlays/index.rst", "reference/api/cambrian/renderer/render_utils/index.rst", "reference/api/cambrian/renderer/renderer/index.rst", "reference/api/cambrian/utils/cambrian_xml/index.rst", "reference/api/cambrian/utils/config/index.rst", "reference/api/cambrian/utils/index.rst", "reference/api/cambrian/utils/logger/index.rst", "reference/api/cambrian/utils/wrappers/index.rst", "reference/index.md", "setup.md", "usage/index.md", "usage/training.md", "usage/visualizing.md"], "titles": ["Background", "Config Composition", "Hydra", "Configuration", "Contributing", "Artificial Cambrian Intelligence (ACI)", "cambrian.agents.agent", "cambrian.agents", "cambrian.agents.object", "cambrian.agents.point", "cambrian.envs.done_fns", "cambrian.envs", "cambrian.envs.reward_fns", "cambrian.envs.step_fns", "cambrian.eyes.eye", "cambrian.eyes", "cambrian.eyes.optics", "cambrian", "cambrian.ml.callbacks", "cambrian.ml.constraint_fns", "cambrian.ml.evo", "cambrian.ml.features_extractors", "cambrian.ml.fitness_fns", "cambrian.ml", "cambrian.ml.model", "cambrian.ml.trainer", "cambrian.renderer", "cambrian.renderer.overlays", "cambrian.renderer.render_utils", "cambrian.renderer.renderer", "cambrian.utils.cambrian_xml", "cambrian.utils.config", "cambrian.utils", "cambrian.utils.logger", "cambrian.utils.wrappers", "API Reference", "Setup", "Usage", "Training", "Visualizing the Env"], "terms": {"thi": [1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39], "packag": [1, 2, 4, 36], "us": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 39], "hydra": [1, 3, 16, 18, 20, 30, 31, 36, 38], "extens": [1, 4, 21, 31], "configur": [1, 2, 4, 6, 7, 14, 15, 20, 22, 31, 38], "manag": [1, 2, 31], "all": [1, 4, 6, 7, 9, 11, 12, 16, 19, 20, 31, 34, 36, 38, 39], "file": [1, 2, 6, 7, 11, 16, 17, 18, 20, 22, 30, 31, 32, 33, 36], "ar": [1, 2, 4, 6, 7, 8, 9, 11, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 34, 36, 38, 39], "locat": [1, 4, 24, 38], "within": [1, 4, 32, 36, 38], "directori": [1, 2, 18, 30, 31, 33, 36, 38], "each": [1, 2, 4, 6, 7, 11, 15, 16, 18, 22, 24, 31, 32, 34, 36, 38], "i": [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39], "defin": [1, 2, 6, 7, 8, 9, 11, 14, 15, 16, 20, 22, 23, 26, 27, 30, 31, 32], "schema": 1, "which": [1, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 19, 20, 21, 24, 25, 30, 31, 32, 33, 36, 38], "valid": [1, 16, 20, 25, 26, 29, 31], "python": [2, 4, 26, 28, 30, 32, 36, 39], "design": [2, 5, 32], "simplifi": 2, "complex": [2, 30], "applic": [2, 18, 31], "It": [2, 4, 6, 7, 8, 11, 14, 15, 16, 19, 24, 25, 30, 31, 32, 36, 38], "enabl": [2, 5, 12, 16, 36, 38], "user": [2, 4], "compos": [2, 18, 31], "overrid": [2, 6, 7, 9, 14, 15, 18, 24, 30, 31, 38], "dynam": [2, 11, 21], "make": [2, 4, 6, 7, 11, 19, 27, 31, 32], "especi": 2, "need": [2, 4, 6, 7, 8, 9, 11, 14, 15, 21, 30, 36, 38, 39], "handl": [2, 24, 36, 38], "multipl": [2, 4, 10, 11, 12, 13, 26, 29, 31], "runtim": [2, 18], "scenario": 2, "machin": [2, 4, 18], "learn": [2, 4, 8, 24], "experi": [2, 4, 19, 25, 36, 38, 39], "distribut": [2, 6, 7], "system": [2, 5, 38], "provid": [2, 4, 5, 12, 14, 15, 30, 31, 32, 33, 34, 36, 38], "rang": [2, 6, 7, 19, 32], "streamlin": 2, "composit": [2, 3, 6, 7, 11], "combin": [2, 6, 7, 10, 12, 13, 14, 15, 30, 31], "object": [2, 6, 7, 11, 14, 15, 31, 32, 33], "behavior": [2, 6, 7], "modifi": [2, 13, 30, 33], "directli": [2, 4, 6, 7, 26, 29, 30, 31, 32], "from": [2, 4, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 24, 26, 28, 30, 31, 32, 33, 36, 38], "command": [2, 4, 36, 38], "line": [2, 19, 30, 36, 38], "programmat": [2, 30], "structur": [2, 6, 7, 30, 31], "config": [2, 3, 4, 6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 29, 30, 32, 34, 35, 38], "support": [2, 6, 7, 11, 18, 21, 30, 31, 34, 36, 38], "hierarch": 2, "type": [2, 6, 7, 11, 14, 15, 16, 20, 25, 26, 28, 29, 30, 31, 32], "safe": [2, 31, 32], "dataclass": [2, 31], "yaml": [2, 6, 7, 16, 20, 30, 31, 36, 38], "plugin": 2, "extend": [2, 15, 16], "": [2, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 24, 31, 32, 34, 36, 38], "function": [2, 4, 11, 24, 25, 36, 38], "rich": 2, "ecosystem": 2, "includ": [2, 6, 7, 22, 24, 30, 31, 32, 36, 38], "launch": [2, 36, 38], "job": [2, 18, 36, 38], "variou": [2, 36], "platform": 2, "track": [2, 24], "log": [2, 18, 24, 33, 36, 38], "organ": 2, "automat": [2, 4, 24, 36, 38], "we": [2, 4, 5, 6, 7, 9, 11, 14, 15, 18, 19, 24, 30, 31, 34, 36, 38, 39], "our": [2, 6, 7, 11], "The": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 38], "store": [2, 11, 16, 18, 20, 26, 29, 31, 32], "other": [2, 11, 21, 26, 27, 29, 30, 31], "via": [2, 36, 38], "default": [2, 4, 6, 7, 9, 11, 12, 15, 16, 18, 19, 21, 22, 24, 26, 28, 31, 32, 36, 38], "field": [2, 14, 15, 31], "see": [2, 4, 7, 9, 11, 14, 15, 18, 24, 26, 29, 30, 32, 36, 38, 39], "more": [2, 11, 14, 15, 18, 22, 30, 32, 36, 38], "inform": [2, 5, 6, 7, 8, 9, 11, 14, 15, 30, 32, 33, 36, 38], "how": [2, 4, 33], "project": [2, 4, 36], "repositori": 4, "fairli": [4, 31], "easi": [4, 31], "so": [4, 6, 7, 11, 16, 20, 21, 27, 30, 31, 32, 34, 36, 39], "pleas": [4, 36, 38], "below": [4, 36], "instruct": 4, "actual": [4, 6, 7, 14, 15, 24, 30, 31, 34], "There": [4, 16, 19, 20, 24, 31, 36, 39], "two": [4, 7, 9, 11, 19, 30, 31, 36, 38], "form": [4, 31], "simpl": [4, 31, 36, 38], "ad": [4, 11, 15, 16, 32], "content": 4, "doc": [4, 30], "folder": [4, 32], "written": [4, 33], "markdown": 4, "convert": [4, 26, 27, 28, 30, 31], "html": [4, 24, 30], "through": [4, 6, 7, 11, 15, 16, 30, 36, 38], "myst_pars": 4, "sphinx": 4, "To": [4, 6, 7, 36, 38], "well": [4, 31], "you": [4, 6, 7, 11, 16, 20, 31, 36, 38, 39], "want": [4, 11, 14, 15, 16, 19, 20, 31, 36, 38], "symlink": 4, "A": [4, 5, 11, 18, 24, 26, 29, 32, 33, 34], "conda": 4, "virtualenv": 4, "add": [4, 6, 7, 11, 13, 15, 16, 24, 26, 27, 28, 30, 31, 36, 38], "isol": [4, 36], "environ": [4, 5, 6, 7, 8, 9, 11, 14, 15, 18, 21, 24, 25, 30, 32, 34, 39], "reduc": [4, 11], "conflict": 4, "amongst": 4, "highli": 4, "recommend": [4, 25, 36, 38], "one": [4, 6, 7, 9, 12, 31, 34], "normal": [4, 6, 7, 24, 34], "git": [4, 36], "http": [4, 5, 24, 26, 28, 30, 36], "github": [4, 24, 26, 28, 36], "com": [4, 24, 26, 28, 30, 36], "camera": [4, 14, 15, 17, 26, 29, 32, 36, 39], "cultur": [4, 17, 36], "aci": [4, 36], "cd": 4, "refer": [4, 7, 9, 14, 15, 36, 38], "anoth": [4, 10, 12, 31, 36], "advantag": [4, 24], "can": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 24, 25, 26, 29, 30, 31, 32, 34, 36, 38, 39], "essenti": [4, 7, 8, 11, 14, 15, 21, 26, 29], "place": [4, 6, 7, 11, 14, 15, 19, 33, 36, 38], "separ": [4, 31, 36, 38], "In": [4, 6, 7, 9, 14, 15, 21, 30, 38], "creat": [4, 5, 6, 7, 9, 11, 14, 15, 26, 29, 30, 31, 32, 33, 34, 36], "becaus": [4, 24, 30, 31, 36], "when": [4, 6, 7, 11, 14, 15, 18, 21, 24, 31, 36, 38], "also": [4, 5, 11, 24, 31, 36, 38, 39], "reflect": [4, 6, 7], "pip": [4, 36], "e": [4, 6, 7, 9, 11, 12, 14, 15, 16, 20, 21, 24, 27, 31, 36, 38], "action": [4, 6, 7, 8, 9, 11, 24, 34], "site": [4, 11, 27], "page": [4, 36], "host": 4, "static": [4, 8, 30, 32], "updat": [4, 6, 7, 11, 24, 30, 31], "have": [4, 6, 7, 9, 24, 30, 34, 36, 38, 39], "push": 4, "main": [4, 6, 7, 11, 21, 26, 28, 31, 36, 39], "branch": 4, "onc": [4, 11], "rebuild": 4, "ensur": [4, 11, 36, 38], "error": [4, 31, 33, 36], "befor": [4, 6, 7, 11, 14, 15, 18, 27], "do": [4, 24, 30, 31, 33, 36], "mai": [4, 11, 33, 36, 38, 39], "get": [4, 6, 7, 8, 9, 12, 24, 25, 30, 31, 32, 36], "an": [4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 18, 20, 21, 22, 24, 25, 27, 30, 31, 32, 33, 36, 38, 39], "email": 4, "someth": [4, 36], "bad": 4, "happen": [4, 6, 7], "tag": [4, 14, 15, 30], "exampl": [4, 6, 7, 31, 32, 36, 38], "v3": 4, "0": [4, 7, 9, 12, 15, 16, 18, 19, 22, 24, 31, 32], "1": [4, 6, 7, 9, 12, 14, 15, 16, 18, 19, 24, 32, 34, 36, 38], "done": [4, 10, 24, 30, 36, 38], "setuptools_scm": 4, "new": [4, 5, 6, 7, 14, 15, 24, 26, 28, 30, 31, 36, 38], "pypi": 4, "attach": [4, 6, 7, 14, 15], "therefor": [4, 6, 7, 9], "must": [4, 6, 7, 9, 24, 26, 29, 30, 34, 36, 38], "after": [4, 6, 7, 11, 25, 27, 31], "previou": [4, 11, 12, 24, 36, 38], "seen": 4, "otherwis": [4, 15, 16, 32, 33], "noth": [4, 24], "lot": 4, "work": [4, 6, 7, 31, 32, 36, 39], "ha": [4, 6, 7, 8, 9, 10, 11, 12, 14, 15, 30, 33, 34], "gone": 4, "scalabl": 4, "consid": [4, 24, 36, 38], "follow": [4, 30, 31, 33, 36, 38], "them": [4, 6, 7, 31, 36], "persist": 4, "long": 4, "time": [4, 14, 15, 18, 24, 26, 29, 31], "cambrian": [4, 35, 36, 39], "contain": [4, 21, 22, 25, 31, 32], "model": [4, 6, 7, 9, 11, 14, 15, 21, 23, 25, 26, 28, 32], "mujoco": [4, 6, 7, 9, 11, 14, 15, 26, 27, 28, 29, 30, 31, 32], "script": [4, 11, 23, 36, 38], "run": [4, 18, 22, 24, 25, 31, 32, 39], "tool": [4, 5], "addit": [4, 11, 15, 16, 21, 24, 30, 31, 32], "process": [4, 5, 24, 25, 36, 38], "data": [4, 6, 7, 9, 11, 14, 15, 16, 20, 22, 24, 31, 32, 34], "licens": 4, "py": [4, 11, 26, 28, 36, 38, 39], "descript": 4, "If": [4, 6, 7, 11, 12, 14, 15, 16, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 38], "plan": [4, 36, 38], "visit": 4, "util": [4, 6, 7, 11, 14, 15, 16, 17, 18, 20, 25, 26, 27, 28, 29, 36, 38], "rest": [4, 26, 28], "relat": 4, "method": [4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 19, 20, 24, 25, 26, 28, 30, 31, 32, 34], "class": 4, "agent": [4, 10, 11, 12, 13, 14, 15, 17, 19, 22, 24, 25, 32, 34, 35, 36, 38], "env": [4, 6, 7, 8, 9, 17, 24, 32, 34, 35, 36, 37, 38], "ey": [4, 5, 6, 7, 17, 19, 22, 27, 35, 36, 39], "ml": [4, 6, 7, 17, 35], "render": [4, 11, 14, 15, 16, 17, 18, 32, 35, 36, 39], "__init__": [4, 31, 32], "initi": [4, 6, 7, 18, 30, 31], "googl": [4, 26, 28], "style": [4, 31], "These": [4, 10, 12, 13, 19, 22, 31, 36], "gener": [4, 5, 6, 7, 11, 14, 15, 18, 19, 22, 24, 32], "For": [4, 6, 7, 14, 15, 26, 29, 36, 38], "visual": [4, 5, 6, 7, 18, 37, 38], "studio": 4, "docstr": 4, "help": [4, 31, 36], "ani": [4, 6, 7, 11, 12, 16, 18, 20, 30, 31, 32, 36], "pars": [4, 22, 30, 31, 32, 36], "autosimpl": 4, "usag": [4, 18], "md": 4, "autoapi": 4, "mjcambrianenv": [4, 6, 7, 8, 9, 11, 32, 34], "restructuredtext": 4, "tutori": 4, "fix": [4, 21], "exist": [4, 6, 7, 16, 22, 33], "_static": 4, "css": 4, "custom": [4, 6, 7, 8, 9, 11, 15, 16, 20, 21, 24, 30, 31, 33], "differ": [4, 5, 7, 9, 11, 21, 24, 26, 29, 36, 38], "furo": 4, "theme": 4, "imag": [4, 6, 7, 11, 14, 15, 16, 18, 21, 24, 26, 27, 28, 29], "favicon": 4, "etc": [4, 11, 38], "guid": 4, "tab": [4, 36, 39], "conf": 4, "set": [4, 6, 7, 11, 14, 15, 24, 25, 26, 29, 31, 32, 33, 36, 38, 39], "index": [4, 6, 7, 15, 16, 32], "home": 4, "try": [4, 14, 15, 32], "maintain": [4, 26, 28], "describ": [4, 30], "abov": [4, 36, 38], "onli": [4, 6, 7, 9, 11, 12, 14, 15, 16, 18, 24, 26, 27, 29, 30, 31, 32, 34, 36], "singl": [4, 11, 26, 29, 31, 34, 38], "background": 4, "should": [4, 6, 7, 11, 12, 14, 15, 18, 19, 21, 22, 24, 25, 29, 31, 32, 33, 36, 38], "titl": [4, 5], "same": [4, 11, 16, 18, 26, 29, 34, 36, 38], "insert": 4, "name": [4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 30, 31, 32, 34, 36, 38], "without": [4, 24, 26, 29, 30, 31], "tabl": 4, "insid": [4, 30], "both": [4, 21, 24], "disadvantag": 4, "allow": [4, 6, 7, 11, 19, 30, 31, 32, 34], "u": [4, 31], "understand": 4, "languag": 4, "compil": 4, "down": [4, 30, 36, 38], "featur": [4, 21], "librari": [4, 14, 15, 30], "websit": [4, 5], "wai": [4, 26, 29, 30, 36, 38], "easiest": 4, "makefil": 4, "bat": 4, "necessari": 4, "depend": [4, 24, 36, 38], "r": [4, 36, 39], "requir": [4, 36, 38], "txt": 4, "clean": 4, "view": [4, 26, 29, 36, 39], "go": [4, 6, 7, 18, 19], "browser": 4, "open": 4, "autobuild": 4, "extrem": 4, "made": 4, "tl": [4, 6, 7], "dr": 4, "repo": [5, 36], "paper": [5, 24], "roadmap": 5, "kushagra": 5, "tiwari": 5, "tzofi": 5, "klinghoff": 5, "aaron": 5, "young": 5, "siddharth": 5, "somasundaram": 5, "nikhil": 5, "behari": 5, "akshat": 5, "dave": 5, "brian": 5, "cheung": 5, "dan": 5, "eric": 5, "nilsson": 5, "tomaso": 5, "poggio": 5, "ramesh": 5, "raskar": 5, "code": [5, 16, 18, 20, 24, 26, 28, 31, 32], "document": [5, 36, 38], "incred": 5, "divers": 5, "anim": 5, "kingdom": 5, "result": [5, 18, 22, 32, 36], "million": 5, "year": 5, "coevolut": 5, "between": [5, 6, 7, 9, 11, 21, 24, 34, 36, 38], "brain": 5, "adapt": 5, "effici": 5, "introduc": 5, "genvi": 5, "leverag": [5, 31], "comput": 5, "explor": [5, 24], "vast": 5, "space": [5, 6, 7, 9, 11, 14, 15, 19, 21, 34, 36, 39], "potenti": 5, "cognit": 5, "capabl": 5, "By": [5, 11, 24, 31, 36, 38], "co": 5, "sens": [5, 24, 31], "perceiv": 5, "interact": [5, 36], "studi": 5, "evolutionari": [5, 20, 24, 25, 36, 38], "progress": [5, 18, 24], "vision": 5, "natur": [5, 21], "develop": 5, "novel": 5, "anticip": 5, "power": 5, "scientist": 5, "test": [5, 24, 25, 32, 36], "hypothes": 5, "gain": 5, "insight": 5, "evolut": [5, 36], "while": [5, 26, 28], "engin": 5, "unconvent": 5, "task": 5, "specif": [5, 6, 7, 16, 20, 24, 31, 34, 36, 38], "rival": 5, "biolog": 5, "counterpart": 5, "term": 5, "perform": [5, 25], "articl": 5, "tiwary2024roadmap": 5, "author": 5, "journal": 5, "mit": [5, 17], "ai": 5, "2024": 5, "month": 5, "sep": 5, "18": 5, "note": [5, 6, 7, 11, 22, 24, 25, 30, 31, 36, 38], "genai": 5, "pubpub": 5, "org": [5, 24, 30], "pub": 5, "bcfcb6lu": 5, "publish": 5, "mjcambrianagentconfig": [6, 7, 11], "none": [6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 20, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34], "instanti": [6, 7, 11, 14, 15, 16, 20, 25, 26, 29, 31], "fals": [6, 7, 9, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 33], "sourc": [6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34], "base": [6, 7, 8, 9, 11, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 38], "mjcambrianbaseconfig": [6, 7, 11, 14, 15, 16, 20, 25, 26, 29, 31], "hint": [6, 7, 14, 15, 16, 20, 25, 26, 29, 31], "variabl": [6, 7, 11, 14, 15, 16, 20, 25, 26, 29, 31, 32, 36], "instanc": [6, 7, 11, 14, 15, 16, 20, 24, 31], "callabl": [6, 7, 11, 14, 15, 25, 31, 32], "self": [6, 7, 11, 14, 15, 30, 32], "str": [6, 7, 9, 11, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 29, 30, 31, 32], "int": [6, 7, 11, 14, 15, 16, 19, 25, 26, 28, 29, 31, 32], "mjcambrianag": [6, 7, 11], "take": [6, 7, 8, 9, 11, 14, 15, 18, 22, 31, 36], "argument": [6, 7, 9, 12, 14, 15, 19, 22, 24, 26, 28, 30, 31, 32, 34, 36], "trainabl": [6, 7, 8, 9, 34], "bool": [6, 7, 11, 14, 15, 16, 22, 25, 26, 29, 30, 31, 32], "whether": [6, 7, 11, 14, 15, 19, 24, 25, 26, 29, 31, 32], "observ": [6, 7, 8, 11, 13, 14, 15, 21, 24, 34], "output": [6, 7, 11, 24, 31, 33, 36, 38, 39], "appli": [6, 7, 9, 11, 15, 16, 27, 30, 34], "polici": [6, 7, 9, 18, 24, 32], "get_action_privileg": [6, 7, 8, 9], "use_privileged_act": [6, 7], "similar": [6, 7, 8, 9], "respect": [6, 7, 36], "some": [6, 7, 14, 15, 18, 25, 30, 31, 36], "special": [6, 7], "logic": [6, 7, 8, 9, 16, 20, 31, 36, 38], "implement": [6, 7, 8, 9, 16, 21, 24, 36, 38], "preced": [6, 7], "over": [6, 7, 12, 24, 31, 36, 39], "attribut": [6, 7, 31, 32, 33], "ignor": [6, 7, 11, 24, 25, 26, 29], "overlay_color": [6, 7], "tupl": [6, 7, 11, 14, 15, 16, 19, 22, 30, 32], "float": [6, 7, 8, 9, 11, 12, 14, 15, 16, 19, 22, 25, 32], "color": [6, 7], "overlay_s": [6, 7], "size": [6, 7, 14, 15, 16, 19, 21, 24, 27], "overlai": [6, 7, 11, 26, 38], "xml": [6, 7, 9, 11, 14, 15, 30, 31], "mjcambrianxmlconfig": [6, 7, 11, 30], "parent": [6, 7, 14, 15, 30, 31], "search": [6, 7, 14, 15, 19, 36, 38], "upward": [6, 7, 36], "find": [6, 7, 30, 31], "body_nam": [6, 7, 32], "bodi": [6, 7, 14, 15, 32], "geom_nam": [6, 7, 32], "geom": [6, 7, 14, 15], "placement": [6, 7, 14, 15], "check_contact": [6, 7], "check": [6, 7, 12, 13, 19, 25, 31, 32], "contact": [6, 7, 10, 12], "true": [6, 7, 9, 11, 16, 18, 22, 25, 26, 29, 30, 31, 32, 33], "init_po": [6, 7], "posit": [6, 7, 9, 11, 12, 13, 32], "indic": [6, 7, 12, 32, 34], "length": [6, 7, 14, 15, 19, 24, 31], "3": [6, 7, 9, 21, 24, 30, 32, 36, 38], "fill": [6, 7, 26, 28], "end": [6, 7, 12, 18, 30], "less": [6, 7, 19], "than": [6, 7, 9, 12, 19, 24, 31], "init_quat": [6, 7], "quaternion": [6, 7], "4": [6, 7, 9, 32, 36, 38], "perturb_init_pos": [6, 7], "perturb": [6, 7], "pose": [6, 7], "randomli": [6, 7], "adjust": [6, 7], "use_action_ob": [6, 7], "mjcambrianconstantactionwrapp": [6, 7, 34], "vari": [6, 7], "use_contact_ob": [6, 7], "eyes_lat_rang": [6, 7], "option": [6, 7, 11, 12, 16, 20, 22, 24, 25, 26, 29, 30, 31, 32, 38, 39], "x": [6, 7, 9, 14, 15], "determin": [6, 7, 9, 14, 15, 22, 25, 33], "specifi": [6, 7, 14, 15, 22, 24, 32, 33, 36, 38], "degre": [6, 7, 14, 15, 19], "latitudin": [6, 7], "vertic": [6, 7], "evenli": [6, 7], "about": [6, 7, 8, 9, 32], "bound": [6, 7, 32], "sphere": [6, 7, 32], "eyes_lon_rang": [6, 7], "y": [6, 7, 9, 14, 15], "longitudin": [6, 7], "horizont": [6, 7, 19], "num_eyes_to_gener": [6, 7, 19], "num": [6, 7, 32], "spheric": [6, 7], "grid": [6, 7, 36, 38], "first": [6, 7, 12, 14, 15, 18, 34, 36], "element": [6, 7, 9, 30, 32], "number": [6, 7, 11, 14, 15, 19, 22, 24, 25, 32, 34, 36], "second": [6, 7], "sequenti": [6, 7, 18], "start": [6, 7, 18], "eye_0": [6, 7], "eye_": [6, 7], "lat": [6, 7, 14, 15], "_": [6, 7, 19, 31, 32, 36, 38], "lon": [6, 7, 14, 15], "where": [6, 7, 9, 16, 18, 20, 22, 24, 27, 31, 34], "latitud": [6, 7], "longitud": [6, 7, 19], "dict": [6, 7, 11, 16, 20, 25, 26, 29, 30, 31, 32, 34], "mjcambrianeyeconfig": [6, 7, 14, 15, 16], "kei": [6, 7, 11, 30, 31, 34], "valu": [6, 7, 11, 22, 24, 26, 28, 30, 31, 32, 34, 36, 38], "coordin": [6, 7, 14, 15, 27], "physic": [6, 7], "serv": [6, 7], "multi": [6, 7, 11, 31, 34], "uniqu": [6, 7, 30], "identifi": [6, 7], "context": [6, 7, 26, 29, 31], "abstract": [6, 7, 11, 32], "awai": [6, 7], "inner": [6, 7], "itself": [6, 7, 9, 31], "load": [6, 7, 11, 22, 24, 30, 31, 32, 36, 38], "accumul": [6, 7, 31], "larg": [6, 7, 24, 36, 38], "subclass": [6, 7, 16, 20, 24, 31], "model_path": [6, 7], "num_joint": [6, 7], "paramet": [6, 7, 8, 9, 11, 14, 15, 16, 18, 19, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 34, 36, 38], "generate_xml": [6, 7, 11, 14, 15], "Will": [6, 7, 9, 11, 14, 15, 21, 30, 31, 34], "apply_act": [6, 7, 9], "probabl": [6, 7, 16, 36], "step": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 24, 25, 34], "state": [6, 7, 9, 11, 18, 24, 31, 36, 38], "assum": [6, 7, 11, 31, 32, 34], "deviat": [6, 7, 8, 9, 15, 16], "standard": [6, 7, 8, 9, 15, 16], "gym": [6, 7, 8, 9, 11, 24, 32, 34], "api": [6, 7, 8, 9, 11, 31], "privileg": [6, 7, 8, 9], "access": [6, 7, 8, 9, 32], "overridden": [6, 7, 8, 9, 11, 36], "return": [6, 7, 8, 9, 11, 12, 14, 15, 19, 22, 24, 25, 26, 28, 30, 31, 32, 33, 34], "list": [6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 24, 26, 29, 30, 31, 32, 36, 38], "reset": [6, 7, 9, 11, 14, 15, 24, 34, 36, 39], "up": [6, 7, 11, 14, 15, 24, 30], "dure": [6, 7, 9, 18, 30, 34], "simul": [6, 7, 9, 11, 36, 39], "create_composite_imag": [6, 7], "appear": [6, 7], "compound": [6, 7], "3x3": [6, 7], "t": [6, 7, 14, 15, 16, 19, 20, 24, 31, 33, 34, 36], "tr": [6, 7], "m": [6, 7, 36, 38], "mr": [6, 7], "bl": [6, 7], "b": [6, 7, 31], "br": [6, 7], "white": [6, 7, 28], "border": [6, 7, 26, 28], "around": [6, 7, 25, 26, 28, 29, 31, 32, 34, 36, 39], "properti": [6, 7, 9, 11, 14, 15, 30, 31, 32, 34], "has_contact": [6, 7], "walk": [6, 7, 30], "involv": [6, 7], "observation_spac": [6, 7, 11, 14, 15, 21, 34], "gymnasium": [6, 7, 9, 11, 14, 15, 34], "basi": [6, 7], "stable_baselines3": [6, 7, 18, 21, 24], "pettingzoo": [6, 7, 11], "three": [6, 7, 9, 38], "last": [6, 7, 14, 15, 24, 36, 38], "wa": [6, 7, 12], "action_spac": [6, 7, 9, 11, 34], "simpli": [6, 7, 8, 14, 15, 24, 31, 36, 38], "control": [6, 7, 32], "actuat": [6, 7, 9, 32], "numpi": [6, 7, 14, 15, 22], "ndarrai": [6, 7, 11, 12, 14, 15, 22, 26, 28, 32], "qpo": [6, 7, 13, 32], "joint": [6, 7, 9, 32], "mask": [6, 7, 16, 24], "arrai": [6, 7, 12, 14, 15, 16, 22, 32], "entri": [6, 7, 31], "adr": [6, 7, 32], "associ": [6, 7], "edit": [6, 7], "were": [6, 7], "full": [6, 7, 22, 36, 39], "po": [6, 7, 14, 15, 27, 32], "doesn": [6, 7, 24, 31, 33, 34, 36], "impact": [6, 7], "setter": [6, 7], "quat": [6, 7, 14, 15], "wxyz": [6, 7], "fmt": [6, 7, 14, 15], "assumpt": [6, 7, 21, 34], "fine": [6, 7], "tune": [6, 7], "mat": [6, 7], "rotat": [6, 7, 9], "matrix": [6, 7, 24], "speed": [6, 7, 9], "last_act": [6, 7], "mjcambriangeometri": [6, 7, 14, 15, 32], "mjcambrianagent2d": [6, 7, 8, 9], "move": [6, 7, 9, 14, 15], "2d": [6, 7, 16, 22], "plane": [6, 7, 15, 16], "yaw": [6, 7], "hing": [6, 7], "orient": [6, 7, 31], "modul": [7, 11, 15, 23, 26, 31, 32], "point": [7, 12, 31, 36, 38], "mjcambrianagentobject": [7, 8], "non": [7, 8, 9, 11, 12, 30, 36], "mjcambrianagentpoint": [7, 9], "hardcod": [7, 9], "forward": [7, 9], "veloc": [7, 9, 32], "best": [7, 9], "my": [7, 9], "knowledg": [7, 9, 14, 15], "translat": [7, 9], "_global_": [7, 9], "frame": [7, 9], "rather": [7, 9, 31], "local": [7, 9, 18, 36], "mean": [7, 9, 22, 24, 31], "along": [7, 9, 19, 22, 36], "axi": [7, 9, 19], "global": [7, 9], "perspect": [7, 9], "call": [7, 9, 11, 14, 15, 16, 18, 21, 24, 25, 26, 27, 29, 30, 31, 32], "calcul": [7, 9, 12, 14, 15, 16, 19, 21, 22, 24, 25], "issu": [7, 9, 16, 20, 24, 31, 36, 38], "possibl": [7, 9, 11, 24], "here": [7, 9, 19, 21, 26, 29, 30], "mjcambrianagentpointmazeoptim": [7, 9], "target": [7, 9], "75": [7, 9, 22], "distance_threshold": [7, 9, 10, 12, 13], "2": [7, 9, 14, 15, 19, 24, 32, 36, 38], "use_optimal_trajectori": [7, 9], "act": [7, 9, 34], "optim": [7, 9, 19, 22, 24, 25, 36, 38], "maze": [7, 9, 11], "attempt": [7, 9], "reach": [7, 9], "goal": [7, 9], "map": [7, 9, 11, 15, 16, 32], "trajectori": [7, 9], "bf": [7, 9], "optimal_trajectori": [7, 9], "mjcambrianagentpointmazerandom": [7, 9], "825": [7, 9], "mjcambrianagentpointprei": [7, 9], "predat": [7, 9], "8": [7, 9], "prei": [7, 9], "avoid": [7, 9], "maxim": [7, 9], "distanc": [7, 9, 12, 13], "keyword": [7, 9, 12, 13, 19, 22, 24, 26, 28, 30, 31, 32, 34], "queri": [7, 9], "constant": [7, 9, 34], "movement": [7, 9, 14, 15], "its": [7, 9, 11, 18, 26, 29], "doe": [8, 22, 31], "fn": [10, 11, 12, 13, 19], "either": [10, 36, 38], "termin": [10, 11, 12, 18], "truncat": [10, 11, 12], "done_nev": 10, "info": [10, 11, 12, 13, 18, 24, 33, 38], "never": [10, 11], "done_if_exceeds_max_episode_step": 10, "episod": [10, 11, 12, 24, 25], "exce": 10, "max": [10, 11, 32], "done_if_low_reward": 10, "threshold": [10, 12, 19], "low": [10, 32], "reward": [10, 11, 12, 22, 24], "done_if_has_contact": 10, "done_if_close_to_ag": 10, "to_ag": [10, 12, 13], "for_ag": [10, 12, 13], "close": [10, 11, 12, 36, 39], "done_combin": 10, "done_fn": 11, "reward_fn": 11, "step_fn": 11, "parallelenv": 11, "off": [11, 24], "version": [11, 24], "mujocoenv": 11, "own": [11, 26, 29], "temporari": 11, "had": 11, "copi": [11, 24, 31, 36, 38], "aforement": 11, "major": 11, "chang": [11, 12, 34, 36, 38], "mjcambrianenvconfig": 11, "seed": [11, 24, 31, 34], "underli": [11, 14, 15, 31], "compon": 11, "date": [11, 36, 38], "_step_mujoco_simul": 11, "np": [11, 12, 22, 26, 28, 32], "mode": [11, 18, 26, 29, 36, 39], "correspond": [11, 22, 24, 26, 29, 31], "cursor": [11, 27], "stuff": 11, "clearer": 11, "cambrian_xml": [11, 32], "mjcambrianxml": [11, 14, 15, 30], "mjcambrianrender": [11, 14, 15, 26, 29], "mjmodel": [11, 26, 28], "mjdata": 11, "episode_step": 11, "current": [11, 12, 24, 31], "num_timestep": 11, "timestep": [11, 12, 22, 25, 36], "max_episode_step": [11, 25], "cumulative_reward": 11, "cumul": [11, 22], "stashed_cumulative_reward": 11, "num_ag": 11, "part": [11, 36], "possible_ag": 11, "_all_": 11, "But": [11, 36, 38], "stabl": [11, 21, 24], "baselines3": 11, "nest": [11, 31, 34], "wrap": [11, 14, 15, 30, 31], "wrapper": [11, 24, 25, 26, 29, 31, 32], "mjcambriansingleagentenvwrapp": [11, 34], "given": [11, 13, 25, 31], "set_random_se": 11, "record": [11, 33, 36, 39], "save": [11, 18, 24, 26, 29, 31, 32, 36, 38, 39], "path": [11, 14, 15, 18, 22, 24, 30, 31, 32, 36, 38], "save_pkl": 11, "kwarg": [11, 18, 24, 30, 31, 33, 34], "scene": [11, 26, 27, 29], "mjcambrianstepfn": 11, "been": [11, 12], "termination_fn": 11, "mjcambrianterminationfn": 11, "truncation_fn": 11, "mjcambriantruncationfn": 11, "mjcambrianrewardfn": 11, "frame_skip": 11, "per": [11, 24, 25], "maximum": [11, 24, 25, 33], "n_eval_episod": [11, 18], "evalu": [11, 18, 22, 25, 30, 31, 32, 38], "add_overlai": 11, "add_debug_overlai": 11, "debug": [11, 24, 33, 36, 39], "draw": 11, "screen": 11, "clear_overlays_on_reset": 11, "clear": [11, 31], "consequ": 11, "drawn": 11, "top": [11, 16, 22], "desir": 11, "alwai": [11, 14, 15, 31, 36, 38], "render_agent_composite_onli": 11, "mjcambrianviewerconfig": 11, "viewer": [11, 26, 27, 29], "unset": [11, 14, 15, 31], "amount": 11, "vram": 11, "consum": 11, "save_filenam": 11, "filenam": [11, 33], "placehold": [11, 21, 32], "extern": 11, "unless": [11, 34], "explicitli": [11, 32, 36, 39], "mjcambrianmazeenv": 11, "mjcambrianmaz": 11, "maze_stor": 11, "mjcambrianmazestor": 11, "mjcambrianmazeenvconfig": 11, "maze_selection_fn": 11, "mjcambrianmazeselectionfn": 11, "select": [11, 24, 31, 32], "reward_for_termin": 12, "scale_by_quick": 12, "earli": 12, "success": [12, 24], "termination_reward": 12, "els": [12, 30], "reward_for_trunc": 12, "failur": 12, "truncation_reward": 12, "euclidean_delta_from_init": 12, "factor": [12, 19, 24], "scale": [12, 24], "reward_euclidean_delta_to_ag": 12, "convent": 12, "closer": [12, 22], "reward_if_agents_respawn": 12, "respawn": [12, 13], "reward_if_close_to_ag": 12, "from_ag": [12, 13], "give": 12, "penalize_if_has_contact": 12, "penalti": 12, "penal": 12, "ground": 12, "reward_combin": 12, "exclusive_fn": 12, "zero": 12, "As": [12, 31], "order": [12, 14, 15, 30], "calc_delta": 12, "delta": 12, "prev": 12, "check_if_larg": 12, "p1": 12, "p2": 12, "larger": 12, "calc_quick": 12, "quick": 12, "dictionari": [13, 30, 31, 32, 34], "respawn_ag": 13, "step_respawn_agents_if_close_to_ag": 13, "ob": 13, "arg": [13, 24, 26, 29, 30, 31, 32, 33, 34], "proxim": [13, 24], "step_add_agent_qpos_to_info": 13, "step_combin": 13, "mjcambrianey": [14, 15, 16], "fov": [14, 15, 22, 31], "independ": [14, 15, 31], "fovi": [14, 15], "mjcf": [14, 15], "sensors": [14, 15, 19], "mutual": [14, 15], "exclus": [14, 15], "focal": [14, 15], "fovx": [14, 15], "focal_x": [14, 15], "focal_i": [14, 15], "sensor": [14, 15, 32], "width": [14, 15, 19, 26, 28, 29], "height": [14, 15, 16, 26, 28, 29], "resolut": [14, 15, 16, 19, 31], "coord": [14, 15], "attr": [14, 15, 32], "isn": [14, 15, 31], "geometri": [14, 15, 32], "orthograph": [14, 15], "mjcambrianrendererconfig": [14, 15, 26, 29], "pad": [14, 15], "psf_filter_s": [14, 15], "helper": [14, 15, 30, 32], "parent_xml": [14, 15], "parent_body_nam": [14, 15], "replic": [14, 15], "worldbodi": [14, 15, 30], "torso": [14, 15], "kind": [14, 15], "difficult": [14, 15], "ll": [14, 15, 18, 19, 24, 30, 31, 34], "cambrianxml": [14, 15], "extract": [14, 15, 21], "rgb": [14, 15, 16], "box": [14, 15, 34], "construct": [14, 15, 30, 31], "shape": [14, 15, 24, 34], "num_pixel": [14, 15], "pixel": [14, 15, 19, 27], "prev_ob": [14, 15], "optic": [15, 36], "mjcambrianopticsey": [15, 16], "depth": [15, 16, 26, 28], "invari": [15, 16], "psf": [15, 16], "mjcambrianopticsconfig": [15, 16], "overwrit": [15, 16, 18, 21, 24], "mjcambrianopticseyeconfig": [15, 16], "pupil_resolut": [15, 16], "pupil": [15, 16], "noise_std": [15, 16], "gaussian": [15, 16], "nois": [15, 16, 24], "wavelength": [15, 16], "channel": [15, 16], "f_stop": [15, 16], "f": [15, 16], "stop": [15, 16], "len": [15, 16], "refractive_index": [15, 16], "refract": [15, 16], "materi": [15, 16], "height_map": [15, 16], "phase": [15, 16, 30], "shift": [15, 16], "light": [15, 16, 32], "pass": [15, 16, 18, 24, 26, 27, 29, 30, 31, 32, 36], "radial": [15, 16], "symmetr": [15, 16], "approxim": [15, 16, 19], "apertur": [15, 16], "mjcambrianapertureconfig": [15, 16], "circular": [15, 16], "empti": [15, 16, 22, 30], "precomput": [15, 16], "inherit": [16, 20, 21, 31], "mjcambriandictconfig": [16, 20, 31], "dictconfig": [16, 20, 31], "omegaconf": [16, 20, 30, 31], "to_object": [16, 20, 31], "aren": [16, 20, 31], "meant": [16, 20, 31], "necessarili": [16, 20, 31], "mjcambriancircularapertureconfig": 16, "radiu": [16, 19, 32], "mjcambrianmaskapertureconfig": 16, "binari": [16, 32], "let": 16, "block": [16, 38], "random": [16, 24], "random_prob": 16, "being": 16, "5": [16, 18, 22], "init": [17, 31], "__author__": 17, "a2cc": 17, "media": 17, "edu": 17, "__license__": 17, "bsd3": 17, "train": [18, 24, 25, 34, 37], "mjcambrianplotmonitorcallback": 18, "logdir": [18, 36, 38], "common": [18, 21], "basecallback": [18, 25], "evalcallback": 18, "plot": 18, "monitor": [18, 22, 38], "csv": [18, 22], "produc": 18, "vecmonitor": 18, "callback_after_ev": 18, "npz": [18, 22], "expect": [18, 25], "png": 18, "mjcambrianplotevaluationscallback": 18, "mjcambrianevalcallback": 18, "eval_env": 18, "callback_on_new_best": 18, "eval_freq": 18, "10000": 18, "log_path": 18, "best_model_save_path": 18, "determinist": [18, 24], "verbos": [18, 24, 30, 31], "warn": [18, 33, 36], "mjcambriangpuusagecallback": 18, "logfil": 18, "gpu_usag": 18, "gpu": [18, 24], "mjcambriansavepolicycallback": 18, "gif": 18, "mjcambrianprogressbarcallback": 18, "progressbarcallback": 18, "bar": 18, "flush": 18, "pbar": 18, "deconstruct": 18, "__del__": 18, "string": [18, 30, 31, 32], "restor": 18, "back": 18, "origin": [18, 21, 31, 34], "mjcambriancallbacklistwithsharedpar": 18, "callbacklist": 18, "chain": 18, "mjcambriansaveconfigcallback": 18, "experiment": 18, "resolv": [18, 30, 31], "on_run_start": 18, "popul": 18, "yet": 18, "core": 18, "run_job": 18, "on_multirun_start": 18, "multirun": [18, 36, 38], "launcher": [18, 31, 36, 38], "execut": [18, 32], "sweeper": [18, 19, 25, 31, 36, 38], "constraint": 19, "prune": [19, 25], "nevergrad_constraint_fn": 19, "parameter": 19, "nevergrad": [19, 25, 36, 38], "constrain_total_pixel": 19, "max_num_pixel": 19, "total": [19, 25, 36, 38], "certain": [19, 31, 32], "constrain_total_memory_throughput": 19, "stack_siz": 19, "max_pixels_in_memori": 19, "constrain_morphologically_feasible_ey": 19, "lon_rang": 19, "pixel_s": 19, "005": 19, "would": [19, 30], "morpholog": 19, "feasibl": 19, "case": [19, 21, 24, 30, 31, 38], "basic": [19, 36, 38], "fit": [19, 22, 25], "primari": 19, "sure": 19, "don": [19, 31, 36], "overlap": 19, "circl": 19, "equal": [19, 30], "Then": [19, 36], "01": 19, "constrain_total_num_ey": 19, "max_num_ey": 19, "algorithm": [20, 24], "mjcambrianevoconfig": 20, "extractor": 21, "is_image_spac": 21, "check_channel": 21, "normalized_imag": 21, "sb3": [21, 34], "regular": 21, "hxwxc": 21, "dimens": 21, "nxhxwxc": 21, "maybe_transpose_spac": 21, "3d": 21, "4d": 21, "maybe_transpose_ob": 21, "batch": 21, "5d": 21, "mjcambriancombinedextractor": 21, "image_extractor": 21, "share_image_extractor": 21, "torch_lay": 21, "basefeaturesextractor": 21, "baselin": [21, 24], "permutedflattenextractor": 21, "flattenextractor": 21, "flatten": [21, 31, 34], "input": [21, 24, 32], "mjcambrianimagefeaturesextractor": 21, "features_dim": 21, "activ": [21, 36], "queue": 21, "tempor": 21, "mjcambrianmlpextractor": 21, "architectur": 21, "mlp": 21, "small": 21, "naturecnn": 21, "mjcambriannaturecnnextractor": 21, "cnn": 21, "baseline3": 21, "stack": 21, "kernel": 21, "stride": 21, "restrict": 21, "36x36": 21, "bd": 21, "respons": 22, "parse_evaluations_npz": 22, "evaluations_npz": 22, "parse_monitor_csv": 22, "monitor_csv": 22, "top_n_perc": 22, "percent": 22, "use_outli": 22, "quartil": 22, "25": 22, "exclud": 22, "outlier": 22, "fitness_from_evalu": 22, "return_data": 22, "mjcambrianconfig": [22, 25, 31], "n": [22, 24, 36], "row": 22, "repres": [22, 31], "column": 22, "neg": 22, "infin": 22, "fitness_from_monitor": 22, "3rd": 22, "fitness_from_txt": 22, "txt_file": 22, "fitness_num_ey": 22, "pattern": [22, 31, 36, 38], "std": 22, "assume_on": [22, 31], "higher": 22, "fitness_num_eyes_and_fov": 22, "num_eyes_pattern": 22, "fov_pattern": 22, "optimal_fov": 22, "45": 22, "callback": [23, 25], "constraint_fn": 23, "evo": [23, 38], "features_extractor": 23, "fitness_fn": [23, 25], "trainer": 23, "ppo": 24, "weight": 24, "rollout": 24, "predict": 24, "overwritten": [24, 34], "next": 24, "loop": [24, 25, 38], "mjcambrianmodel": [24, 25, 32], "clip": 24, "arxiv": 24, "ab": [24, 31], "1707": 24, "06347": 24, "borrow": 24, "openai": 24, "spin": 24, "spinningup": 24, "ikostrikov": 24, "pytorch": [24, 36], "a2c": 24, "acktr": 24, "gail": 24, "ppo2": 24, "hill": 24, "introduct": 24, "en": 24, "latest": 24, "mlppolici": 24, "cnnpolici": 24, "regist": 24, "learning_r": 24, "rate": 24, "remain": 24, "n_step": 24, "buffer": 24, "n_env": [24, 25], "parallel": [24, 25, 36, 38], "greater": 24, "29372": 24, "batch_siz": 24, "minibatch": 24, "n_epoch": 24, "epoch": 24, "surrog": 24, "loss": 24, "gamma": 24, "discount": 24, "gae_lambda": 24, "trade": 24, "bia": 24, "v": 24, "varianc": 24, "estim": 24, "clip_rang": 24, "clip_range_vf": 24, "import": [24, 33], "normalize_advantag": 24, "ent_coef": 24, "entropi": 24, "coeffici": 24, "vf_coef": 24, "max_grad_norm": 24, "gradient": 24, "use_sd": 24, "gsde": 24, "instead": [24, 31], "sde_sample_freq": 24, "sampl": 24, "everi": 24, "begin": 24, "rollout_buffer_class": 24, "rollout_buffer_kwarg": 24, "creation": 24, "target_kl": 24, "limit": 24, "kl": 24, "diverg": 24, "enough": 24, "prevent": [24, 32], "213": 24, "cf": 24, "div": 24, "stats_window_s": 24, "window": [24, 26, 29, 36, 39], "averag": [24, 32], "report": 24, "tensorboard_log": 24, "tensorboard": 24, "policy_kwarg": 24, "level": [24, 33], "messag": [24, 33], "devic": 24, "pseudo": 24, "cpu": 24, "cuda": 24, "auto": 24, "_init_setup_model": 24, "build": [24, 30, 31], "network": 24, "save_polici": 24, "entir": [24, 36], "just": [24, 30, 31, 34, 36, 39], "load_polici": 24, "four": 24, "layer": 24, "ident": 24, "present": [24, 33], "delet": [24, 31], "strict": 24, "load_state_dict": 24, "load_rollout": 24, "loader": 24, "dumb": 24, "keep": [24, 31, 36, 38], "hidden": 24, "sugar": 24, "coat": 24, "g": [24, 36, 38], "recurr": 24, "episode_start": 24, "rnn": 24, "mjcambriantrainerconfig": 25, "total_timestep": 25, "vecenv": [25, 32], "prune_fn": 25, "prior": 25, "fact": 25, "invalid": 25, "wast": 25, "computation": [25, 26, 29], "inf": 25, "cheap_constraint": 25, "mjcambriantrain": 25, "consist": 25, "render_util": 26, "convert_depth_dist": [26, 28], "opengl": [26, 28, 36, 38], "metric": [26, 28], "mj": [26, 28, 29], "deepmind": [26, 28], "blob": [26, 28], "resize_with_aspect_fil": [26, 28], "border_typ": [26, 28], "cv2": [26, 28], "border_const": [26, 28], "interp": [26, 28], "inter_nearest": [26, 28], "resiz": [26, 28, 29], "aspect": [26, 28], "ratio": [26, 28], "black": [26, 28], "interpol": [26, 28, 30, 36, 38], "metadata": [26, 29], "like": [26, 29, 30, 31, 33], "offscreen": [26, 29], "rgb_arrai": [26, 29], "onscreen": [26, 29], "human": [26, 29, 31, 36, 38, 39], "render_mod": [26, 29, 36, 38, 39], "cannot": [26, 29, 32], "fullscreen": [26, 29], "mjvscene": [26, 29], "scene_opt": [26, 29], "mjvoption": [26, 29], "mjvcamera": [26, 29], "use_shared_context": [26, 29], "share": [26, 29, 36, 38], "expens": [26, 29], "mani": [26, 29], "save_mod": [26, 29], "mjcambrianrenderersavemod": [26, 29], "savemod": [26, 29], "kwd": [26, 29], "enum": [26, 29, 31], "flag": [26, 29, 31, 36, 38], "mjcambriancursor": 27, "mjcambrianvieweroverlai": 27, "obj": [27, 32], "ones": 27, "affect": 27, "draw_before_rend": 27, "draw_after_rend": 27, "mjr_context": 27, "viewport": 27, "mjcambriantextvieweroverlai": 27, "text": 27, "mjcambrianimagevieweroverlai": 27, "mjcambriansitevieweroverlai": 27, "rgba": 27, "add_white_bord": 28, "border_s": 28, "mjcambrianview": 29, "abc": 29, "mjcambrianoffscreenview": 29, "mjcambrianonscreenview": 29, "manipul": 30, "mjspec": 30, "sinc": [30, 31, 36, 38], "typealia": 30, "mjcambriancontainerconfig": [30, 31], "complain": 30, "built": [30, 31, 32, 36, 39], "parent_key1": 30, "child_key1": 30, "attr1": 30, "val1": 30, "attr2": 30, "val2": 30, "child_key2": 30, "child_key3": 30, "look": [30, 36, 38], "represent": [30, 31], "parser": [30, 31], "base_xml_path": 30, "write": [30, 33, 36, 38], "pretti": 30, "make_empti": 30, "from_str": 30, "xml_string": 30, "from_config": 30, "parent_kei": 30, "child_kei": 30, "attribute_kei": 30, "attribute_valu": 30, "subchild_kei": 30, "subsubchild_kei": 30, "though": 30, "xmlconfig": 30, "recurs": [30, 32], "tree": [30, 32], "et": 30, "subel": 30, "remov": 30, "_all": 30, "thei": [30, 36, 38], "filter": [30, 33], "iterfind": 30, "predic": 30, "etre": 30, "elementtre": 30, "xpath": 30, "syntax": [30, 32, 36, 38], "found": 30, "findal": 30, "alia": 30, "get_path": 30, "unfortun": 30, "iter": [30, 31, 36, 38], "root": 30, "_not_": 30, "prefer": 30, "oper": [30, 31, 32], "taken": 30, "stackoverflow": 30, "29896847": 30, "20125256": 30, "base_dir": 30, "pathlib": 30, "to_str": 30, "print": [30, 36], "toprettyxml": 30, "newlin": [30, 33], "convert_xml_to_yaml": 30, "listconfig": 31, "intern": [31, 32], "immut": 31, "program": 31, "_config": 31, "_content": 31, "uninstanti": 31, "strictli": 31, "export": 31, "readabl": 31, "format": [31, 32, 33], "classmethod": 31, "as_contain": 31, "throw_on_miss": 31, "is_struct": 31, "is_readonli": 31, "miss": 31, "rais": [31, 32], "instantiate_her": 31, "config_dir": 31, "config_nam": 31, "return_hydra_config": 31, "instantiate_kwarg": 31, "load_pickl": 31, "pickl": [31, 32, 36, 38], "merge_with": 31, "merg": 31, "merge_with_dotlist": 31, "dotlist": 31, "set_struct": 31, "struct": 31, "set_readonli": 31, "readonli": 31, "set_struct_temporarili": 31, "temporarili": [31, 32], "set_readonly_temporarili": 31, "use_instanti": 31, "get_typ": 31, "get_typenam": 31, "isinst": 31, "type_": 31, "to_contain": 31, "to_yaml": 31, "header": 31, "hydra_config": 31, "glob": 31, "effect": 31, "wildcard": 31, "subsequ": 31, "match": [31, 36, 38], "slow": [31, 36, 38], "sparingli": 31, "c": [31, 36], "d": 31, "leaf": 31, "globbed_ev": 31, "src": [31, 32], "item": 31, "mjcambriancontainrconfig": 31, "__contains__": 31, "__getattr__": 31, "__getitem__": 31, "__setattr__": 31, "__setitem__": 31, "__delattr__": 31, "__delitem__": 31, "__iter__": 31, "__len__": 31, "__getstate__": 31, "guarante": 31, "__setstate__": 31, "mjcambrianflagwrappermeta": 31, "enummeta": 31, "metaclass": 31, "put": [31, 36], "flag1": 31, "flag2": 31, "thereof": 31, "flag3": 31, "member": 31, "build_pattern": 31, "regex": 31, "dot": [31, 36], "training_config": 31, "env_config": 31, "agent_config": 31, "eye_config": 31, "config_wrapp": 31, "cl": 31, "decor": 31, "preprocess": 31, "subset": 31, "_sanitized_typ": 31, "hydra_zen": 31, "kw": 31, "repr": 31, "eq": 31, "slot": 31, "kw_onli": 31, "instance_flag_wrapp": 31, "flag_typ": 31, "eval_flag": 31, "oppos": 31, "instance_wrapp": 31, "particularli": 31, "intend": 31, "conjunct": 31, "super": 31, "ugli": 31, "obj_to_instanti": 31, "_target_": 31, "path_to": 31, "value1": 31, "value2": 31, "value3": 31, "partial": 31, "eval": [31, 36, 38], "slice": 31, "caution": 31, "constructor": 31, "postpon": 31, "until": [31, 38], "setattr": 31, "_args_": 31, "arg1": 31, "arg2": 31, "init_arg1": 31, "init_arg2": 31, "set_arg1": 31, "set_arg2": 31, "At": 31, "known": 31, "under": [31, 36, 39], "hood": 31, "partial_obj_to_instanti": 31, "_partial_": 31, "init_arg3": 31, "unknown": 31, "later": 31, "run_hydra": 31, "main_fn": 31, "lambda": [31, 32], "__": 31, "argpars": 31, "argumentpars": 31, "config_path": 31, "cwd": 31, "benefit": 31, "setup": [31, 38], "avail": 31, "concaten": 31, "sweep": 31, "def": [31, 32], "add_argu": 31, "absolut": 31, "logger": 32, "evaluate_polici": 32, "num_run": 32, "record_kwarg": 32, "step_callback": 32, "done_callback": 32, "record_path": 32, "video": [32, 36, 38], "detail": [32, 36, 38], "save_data": 32, "outdir": 32, "pickle_fil": 32, "try_load_pickl": 32, "generate_sequence_from_rang": 32, "endpoint": 32, "sequenc": 32, "linspac": 32, "setattrs_temporari": 32, "make_odd": 32, "odd": 32, "even": 32, "cast": 32, "safe_index": 32, "arr": 32, "get_body_id": 32, "id": 32, "get_body_nam": 32, "bodyadr": 32, "get_geom_id": 32, "get_geom_nam": 32, "geomadr": 32, "get_site_id": 32, "site_nam": 32, "get_site_nam": 32, "siteadr": 32, "get_joint_id": 32, "joint_nam": 32, "get_joint_nam": 32, "jointadr": 32, "get_camera_id": 32, "camera_nam": 32, "get_camera_nam": 32, "cameraadr": 32, "get_light_id": 32, "light_nam": 32, "get_light_nam": 32, "lightadr": 32, "get_sensor_id": 32, "sensor_nam": 32, "get_sensor_nam": 32, "sensoradr": 32, "mjcambrianactu": 32, "actuator_": 32, "trnadr": 32, "transmiss": 32, "lower": 32, "high": 32, "upper": 32, "mjcambrianjoint": 32, "jnt_": 32, "qposadr": 32, "numqpo": 32, "qveladr": 32, "qvel": 32, "numqvel": 32, "jntadr": 32, "geom_": 32, "rbound": 32, "rel": 32, "agent_select": 32, "format_string_with_obj_attribut": 32, "replac": [32, 34, 36, 38], "fetch": 32, "custompythonclass": 32, "literal_eval_with_cal": 32, "node_or_str": 32, "safe_cal": 32, "safe_method": 32, "_env": 32, "express": 32, "node": 32, "liter": 32, "unari": 32, "arbitrari": 32, "ast": 32, "permit": 32, "union": 32, "method_nam": 32, "manual": 32, "valueerror": 32, "unsupport": 32, "malform": 32, "tri": 32, "sqrt": 32, "math": 32, "safe_ev": 32, "additional_var": 32, "manner": 32, "unauthor": 32, "16": 32, "get_logg": 33, "fatal": 33, "mjcambrianfilehandl": 33, "filehandl": 33, "handler": 33, "mjcambriantqdmstreamhandl": 33, "stream": 33, "streamhandl": 33, "tqdm": 33, "emit": 33, "formatt": 33, "trail": 33, "except": 33, "traceback": 33, "print_except": 33, "append": 33, "encod": 33, "mjcambrianloggermaxlevelfilt": 33, "max_level": 33, "deem": 33, "appropri": 33, "agent_nam": 34, "mjcambrianpettingzooenvwrapp": 34, "howev": 34, "continu": [34, 36, 38], "constant_act": 34, "make_wrapped_env": 34, "11": 36, "docker": 36, "clone": 36, "12": 36, "poetri": 36, "alreadi": 36, "integ": 36, "run_render": [36, 39], "exp": [36, 38, 39], "100": 36, "On": 36, "mac": 36, "veri": [36, 38], "convolut": 36, "bewar": 36, "minut": 36, "runner": [36, 39], "few": [36, 39], "displai": 36, "bird": [36, 39], "pan": [36, 39], "mous": [36, 39], "glfw": [36, 39], "properli": [36, 39], "mujoco_gl": [36, 38, 39], "noninteract": 36, "headless": [36, 38], "optional_total_timestep": [36, 39], "scroll": [36, 39], "out": [36, 39], "run_mj_view": [36, 39], "h": [36, 38], "shortcut": 36, "switch": [36, 39], "paus": [36, 39], "exit": [36, 39], "hover": [36, 39], "left": [36, 39], "side": [36, 39], "right": [36, 39], "click": [36, 39], "show": [36, 39], "q": [36, 39], "frustum": [36, 39], "bash": [36, 38], "sh": [36, 38], "tip": 36, "egl": [36, 38], "caus": [36, 38], "significantli": [36, 38], "faster": [36, 38], "sai": 36, "No": 36, "parametr": 36, "chose": 36, "choos": 36, "still": 36, "slurm": [36, 38], "submit": [36, 38], "sbatch": [36, 38], "exactli": 36, "cluster": 36, "sweep_param": [36, 38], "aid": [36, 38], "And": [36, 38], "simplest": [36, 38], "param": [36, 38], "comma": [36, 38], "param1": [36, 38], "param2": [36, 38], "six": [36, 38], "permut": [36, 38], "prefix": [36, 38], "expnam": [36, 38], "differenti": [36, 38], "advanc": [36, 38], "rerun": [36, 38], "your": [36, 38], "load_if_exist": [36, 38], "checkpoint": [36, 38], "mind": [36, 38], "pkl": [36, 38], "re": [36, 38], "dai": [36, 38], "old": [36, 38], "correct": [36, 38], "parse_evo": [36, 38], "p": 36, "checkout": 36, "supercloud": 38, "openmind": 38, "euler": 38, "coupl": 38, "daemon": 38, "complet": 38, "aw": 38, "futur": 38, "rememb": 38, "min": 38, "num_work": 38, "array_parallel": 38, "evolution_nevergrad": 38, "altern": 38, "world": 39}, "objects": {"": [[17, 0, 0, "-", "cambrian"]], "cambrian": [[17, 1, 1, "", "__author__"], [17, 1, 1, "", "__license__"], [7, 0, 0, "-", "agents"], [11, 0, 0, "-", "envs"], [15, 0, 0, "-", "eyes"], [23, 0, 0, "-", "ml"], [26, 0, 0, "-", "renderer"], [32, 0, 0, "-", "utils"]], "cambrian.agents": [[7, 2, 1, "", "MjCambrianAgent"], [7, 2, 1, "", "MjCambrianAgent2D"], [7, 2, 1, "", "MjCambrianAgentConfig"], [7, 2, 1, "", "MjCambrianAgentObject"], [7, 2, 1, "", "MjCambrianAgentPoint"], [7, 2, 1, "", "MjCambrianAgentPointMazeOptimal"], [7, 2, 1, "", "MjCambrianAgentPointMazeRandom"], [7, 2, 1, "", "MjCambrianAgentPointPrey"], [6, 0, 0, "-", "agent"], [8, 0, 0, "-", "object"], [9, 0, 0, "-", "point"]], "cambrian.agents.MjCambrianAgent": [[7, 3, 1, "", "action_space"], [7, 4, 1, "", "apply_action"], [7, 4, 1, "", "create_composite_image"], [7, 4, 1, "", "generate_xml"], [7, 3, 1, "", "geom"], [7, 4, 1, "", "get_action_privileged"], [7, 3, 1, "", "has_contacts"], [7, 3, 1, "", "init_pos"], [7, 3, 1, "", "init_quat"], [7, 3, 1, "", "last_action"], [7, 3, 1, "", "mat"], [7, 3, 1, "", "observation_space"], [7, 4, 1, "", "perturb_init_pose"], [7, 3, 1, "", "pos"], [7, 3, 1, "", "qpos"], [7, 3, 1, "", "quat"], [7, 4, 1, "", "reset"], [7, 3, 1, "", "speed"], [7, 4, 1, "", "step"], [7, 3, 1, "", "trainable"]], "cambrian.agents.MjCambrianAgentObject": [[7, 4, 1, "", "get_action_privileged"]], "cambrian.agents.MjCambrianAgentPoint": [[7, 3, 1, "", "action_space"], [7, 4, 1, "", "apply_action"], [7, 3, 1, "", "speed"]], "cambrian.agents.MjCambrianAgentPointMazeOptimal": [[7, 4, 1, "", "get_action_privileged"], [7, 4, 1, "", "reset"]], "cambrian.agents.MjCambrianAgentPointMazeRandom": [[7, 4, 1, "", "get_action_privileged"], [7, 4, 1, "", "reset"]], "cambrian.agents.MjCambrianAgentPointPrey": [[7, 4, 1, "", "get_action_privileged"]], "cambrian.agents.agent": [[6, 2, 1, "", "MjCambrianAgent"], [6, 2, 1, "", "MjCambrianAgent2D"], [6, 2, 1, "", "MjCambrianAgentConfig"]], "cambrian.agents.agent.MjCambrianAgent": [[6, 3, 1, "", "action_space"], [6, 4, 1, "", "apply_action"], [6, 4, 1, "", "create_composite_image"], [6, 4, 1, "", "generate_xml"], [6, 3, 1, "", "geom"], [6, 4, 1, "", "get_action_privileged"], [6, 3, 1, "", "has_contacts"], [6, 3, 1, "", "init_pos"], [6, 3, 1, "", "init_quat"], [6, 3, 1, "", "last_action"], [6, 3, 1, "", "mat"], [6, 3, 1, "", "observation_space"], [6, 4, 1, "", "perturb_init_pose"], [6, 3, 1, "", "pos"], [6, 3, 1, "", "qpos"], [6, 3, 1, "", "quat"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "speed"], [6, 4, 1, "", "step"], [6, 3, 1, "", "trainable"]], "cambrian.agents.object": [[8, 2, 1, "", "MjCambrianAgentObject"]], "cambrian.agents.object.MjCambrianAgentObject": [[8, 4, 1, "", "get_action_privileged"]], "cambrian.agents.point": [[9, 2, 1, "", "MjCambrianAgentPoint"], [9, 2, 1, "", "MjCambrianAgentPointMazeOptimal"], [9, 2, 1, "", "MjCambrianAgentPointMazeRandom"], [9, 2, 1, "", "MjCambrianAgentPointPrey"]], "cambrian.agents.point.MjCambrianAgentPoint": [[9, 3, 1, "", "action_space"], [9, 4, 1, "", "apply_action"], [9, 3, 1, "", "speed"]], "cambrian.agents.point.MjCambrianAgentPointMazeOptimal": [[9, 4, 1, "", "get_action_privileged"], [9, 4, 1, "", "reset"]], "cambrian.agents.point.MjCambrianAgentPointMazeRandom": [[9, 4, 1, "", "get_action_privileged"], [9, 4, 1, "", "reset"]], "cambrian.agents.point.MjCambrianAgentPointPrey": [[9, 4, 1, "", "get_action_privileged"]], "cambrian.envs": [[11, 2, 1, "", "MjCambrianEnv"], [11, 2, 1, "", "MjCambrianEnvConfig"], [11, 2, 1, "", "MjCambrianMazeEnv"], [11, 2, 1, "", "MjCambrianMazeEnvConfig"], [10, 0, 0, "-", "done_fns"], [12, 0, 0, "-", "reward_fns"], [13, 0, 0, "-", "step_fns"]], "cambrian.envs.MjCambrianEnv": [[11, 4, 1, "", "action_space"], [11, 3, 1, "", "action_spaces"], [11, 3, 1, "", "agents"], [11, 4, 1, "", "close"], [11, 3, 1, "", "cumulative_reward"], [11, 3, 1, "", "data"], [11, 3, 1, "", "episode_step"], [11, 4, 1, "", "generate_xml"], [11, 3, 1, "", "max_episode_steps"], [11, 3, 1, "", "model"], [11, 3, 1, "", "name"], [11, 3, 1, "", "num_agents"], [11, 3, 1, "", "num_timesteps"], [11, 4, 1, "", "observation_space"], [11, 3, 1, "", "observation_spaces"], [11, 3, 1, "", "overlays"], [11, 3, 1, "", "possible_agents"], [11, 3, 1, "", "record"], [11, 4, 1, "", "render"], [11, 3, 1, "", "renderer"], [11, 4, 1, "", "reset"], [11, 4, 1, "", "save"], [11, 4, 1, "", "set_random_seed"], [11, 3, 1, "", "stashed_cumulative_reward"], [11, 4, 1, "", "state"], [11, 4, 1, "", "step"], [11, 3, 1, "", "xml"]], "cambrian.envs.MjCambrianMazeEnv": [[11, 4, 1, "", "generate_xml"], [11, 3, 1, "", "maze"], [11, 3, 1, "", "maze_store"], [11, 4, 1, "", "reset"]], "cambrian.envs.done_fns": [[10, 5, 1, "", "done_combined"], [10, 5, 1, "", "done_if_close_to_agents"], [10, 5, 1, "", "done_if_exceeds_max_episode_steps"], [10, 5, 1, "", "done_if_has_contacts"], [10, 5, 1, "", "done_if_low_reward"], [10, 5, 1, "", "done_never"]], "cambrian.envs.reward_fns": [[12, 5, 1, "", "calc_delta"], [12, 5, 1, "", "calc_quickness"], [12, 5, 1, "", "check_if_larger"], [12, 5, 1, "", "euclidean_delta_from_init"], [12, 5, 1, "", "penalize_if_has_contacts"], [12, 5, 1, "", "reward_combined"], [12, 5, 1, "", "reward_euclidean_delta_to_agents"], [12, 5, 1, "", "reward_for_termination"], [12, 5, 1, "", "reward_for_truncation"], [12, 5, 1, "", "reward_if_agents_respawned"], [12, 5, 1, "", "reward_if_close_to_agents"]], "cambrian.envs.step_fns": [[13, 5, 1, "", "respawn_agent"], [13, 5, 1, "", "step_add_agent_qpos_to_info"], [13, 5, 1, "", "step_combined"], [13, 5, 1, "", "step_respawn_agents_if_close_to_agents"]], "cambrian.eyes": [[15, 2, 1, "", "MjCambrianEye"], [15, 2, 1, "", "MjCambrianEyeConfig"], [15, 2, 1, "", "MjCambrianOpticsEye"], [15, 2, 1, "", "MjCambrianOpticsEyeConfig"], [14, 0, 0, "-", "eye"], [16, 0, 0, "-", "optics"]], "cambrian.eyes.MjCambrianEye": [[15, 3, 1, "", "config"], [15, 4, 1, "", "generate_xml"], [15, 3, 1, "", "name"], [15, 3, 1, "", "num_pixels"], [15, 3, 1, "", "observation_space"], [15, 3, 1, "", "prev_obs"], [15, 4, 1, "", "render"], [15, 3, 1, "", "renderer"], [15, 4, 1, "", "reset"], [15, 4, 1, "", "step"]], "cambrian.eyes.MjCambrianOpticsEye": [[15, 4, 1, "", "render"]], "cambrian.eyes.eye": [[14, 2, 1, "", "MjCambrianEye"], [14, 2, 1, "", "MjCambrianEyeConfig"]], "cambrian.eyes.eye.MjCambrianEye": [[14, 3, 1, "", "config"], [14, 4, 1, "", "generate_xml"], [14, 3, 1, "", "name"], [14, 3, 1, "", "num_pixels"], [14, 3, 1, "", "observation_space"], [14, 3, 1, "", "prev_obs"], [14, 4, 1, "", "render"], [14, 3, 1, "", "renderer"], [14, 4, 1, "", "reset"], [14, 4, 1, "", "step"]], "cambrian.eyes.optics": [[16, 2, 1, "", "MjCambrianApertureConfig"], [16, 2, 1, "", "MjCambrianCircularApertureConfig"], [16, 2, 1, "", "MjCambrianMaskApertureConfig"], [16, 2, 1, "", "MjCambrianOpticsEye"], [16, 2, 1, "", "MjCambrianOpticsEyeConfig"]], "cambrian.eyes.optics.MjCambrianOpticsEye": [[16, 4, 1, "", "render"]], "cambrian.ml": [[18, 0, 0, "-", "callbacks"], [19, 0, 0, "-", "constraint_fns"], [20, 0, 0, "-", "evo"], [21, 0, 0, "-", "features_extractors"], [22, 0, 0, "-", "fitness_fns"], [24, 0, 0, "-", "model"], [25, 0, 0, "-", "trainer"]], "cambrian.ml.callbacks": [[18, 2, 1, "", "MjCambrianCallbackListWithSharedParent"], [18, 2, 1, "", "MjCambrianEvalCallback"], [18, 2, 1, "", "MjCambrianGPUUsageCallback"], [18, 2, 1, "", "MjCambrianPlotEvaluationsCallback"], [18, 2, 1, "", "MjCambrianPlotMonitorCallback"], [18, 2, 1, "", "MjCambrianProgressBarCallback"], [18, 2, 1, "", "MjCambrianSaveConfigCallback"], [18, 2, 1, "", "MjCambrianSavePolicyCallback"]], "cambrian.ml.callbacks.MjCambrianProgressBarCallback": [[18, 4, 1, "", "__del__"]], "cambrian.ml.callbacks.MjCambrianSaveConfigCallback": [[18, 4, 1, "", "on_multirun_start"], [18, 4, 1, "", "on_run_start"]], "cambrian.ml.constraint_fns": [[19, 5, 1, "", "constrain_morphologically_feasible_eyes"], [19, 5, 1, "", "constrain_total_memory_throughput"], [19, 5, 1, "", "constrain_total_num_eyes"], [19, 5, 1, "", "constrain_total_pixels"], [19, 5, 1, "", "nevergrad_constraint_fn"]], "cambrian.ml.evo": [[20, 2, 1, "", "MjCambrianEvoConfig"]], "cambrian.ml.features_extractors": [[21, 2, 1, "", "MjCambrianCombinedExtractor"], [21, 2, 1, "", "MjCambrianImageFeaturesExtractor"], [21, 2, 1, "", "MjCambrianMLPExtractor"], [21, 2, 1, "", "MjCambrianNatureCNNExtractor"], [21, 2, 1, "", "PermutedFlattenExtractor"], [21, 5, 1, "", "is_image_space"], [21, 5, 1, "", "maybe_transpose_obs"], [21, 5, 1, "", "maybe_transpose_space"]], "cambrian.ml.fitness_fns": [[22, 5, 1, "", "fitness_from_evaluations"], [22, 5, 1, "", "fitness_from_monitor"], [22, 5, 1, "", "fitness_from_txt"], [22, 5, 1, "", "fitness_num_eyes"], [22, 5, 1, "", "fitness_num_eyes_and_fov"], [22, 5, 1, "", "parse_evaluations_npz"], [22, 5, 1, "", "parse_monitor_csv"], [22, 5, 1, "", "top_n_percent"]], "cambrian.ml.model": [[24, 2, 1, "", "MjCambrianModel"]], "cambrian.ml.model.MjCambrianModel": [[24, 4, 1, "", "load_policy"], [24, 4, 1, "", "load_rollout"], [24, 4, 1, "", "predict"], [24, 4, 1, "", "save_policy"]], "cambrian.ml.trainer": [[25, 2, 1, "", "MjCambrianTrainer"], [25, 2, 1, "", "MjCambrianTrainerConfig"]], "cambrian.ml.trainer.MjCambrianTrainer": [[25, 4, 1, "", "test"], [25, 4, 1, "", "train"]], "cambrian.renderer": [[26, 2, 1, "", "MjCambrianRenderer"], [26, 2, 1, "", "MjCambrianRendererConfig"], [26, 2, 1, "", "MjCambrianRendererSaveMode"], [26, 5, 1, "", "convert_depth_distances"], [27, 0, 0, "-", "overlays"], [28, 0, 0, "-", "render_utils"], [29, 0, 0, "-", "renderer"], [26, 5, 1, "", "resize_with_aspect_fill"]], "cambrian.renderer.overlays": [[27, 2, 1, "", "MjCambrianCursor"], [27, 2, 1, "", "MjCambrianImageViewerOverlay"], [27, 2, 1, "", "MjCambrianSiteViewerOverlay"], [27, 2, 1, "", "MjCambrianTextViewerOverlay"], [27, 2, 1, "", "MjCambrianViewerOverlay"]], "cambrian.renderer.overlays.MjCambrianImageViewerOverlay": [[27, 4, 1, "", "draw_after_render"]], "cambrian.renderer.overlays.MjCambrianSiteViewerOverlay": [[27, 4, 1, "", "draw_before_render"]], "cambrian.renderer.overlays.MjCambrianTextViewerOverlay": [[27, 4, 1, "", "draw_after_render"]], "cambrian.renderer.overlays.MjCambrianViewerOverlay": [[27, 4, 1, "", "draw_after_render"], [27, 4, 1, "", "draw_before_render"]], "cambrian.renderer.render_utils": [[28, 5, 1, "", "add_white_border"], [28, 5, 1, "", "convert_depth_distances"], [28, 5, 1, "", "resize_with_aspect_fill"]], "cambrian.renderer.renderer": [[29, 2, 1, "", "MjCambrianOffscreenViewer"], [29, 2, 1, "", "MjCambrianOnscreenViewer"], [29, 2, 1, "", "MjCambrianRenderer"], [29, 2, 1, "", "MjCambrianRendererConfig"], [29, 2, 1, "", "MjCambrianRendererSaveMode"], [29, 2, 1, "", "MjCambrianViewer"]], "cambrian.utils": [[32, 2, 1, "", "MjCambrianActuator"], [32, 2, 1, "", "MjCambrianGeometry"], [32, 2, 1, "", "MjCambrianJoint"], [32, 5, 1, "", "agent_selected"], [30, 0, 0, "-", "cambrian_xml"], [31, 0, 0, "-", "config"], [32, 5, 1, "", "evaluate_policy"], [32, 5, 1, "", "format_string_with_obj_attributes"], [32, 5, 1, "", "generate_sequence_from_range"], [32, 5, 1, "", "get_body_id"], [32, 5, 1, "", "get_body_name"], [32, 5, 1, "", "get_camera_id"], [32, 5, 1, "", "get_camera_name"], [32, 5, 1, "", "get_geom_id"], [32, 5, 1, "", "get_geom_name"], [32, 5, 1, "", "get_joint_id"], [32, 5, 1, "", "get_joint_name"], [32, 5, 1, "", "get_light_id"], [32, 5, 1, "", "get_light_name"], [32, 5, 1, "", "get_sensor_id"], [32, 5, 1, "", "get_sensor_name"], [32, 5, 1, "", "get_site_id"], [32, 5, 1, "", "get_site_name"], [32, 5, 1, "", "literal_eval_with_callables"], [33, 0, 0, "-", "logger"], [32, 5, 1, "", "make_odd"], [32, 5, 1, "", "safe_eval"], [32, 5, 1, "", "safe_index"], [32, 5, 1, "", "save_data"], [32, 5, 1, "", "setattrs_temporary"], [32, 5, 1, "", "try_load_pickle"], [34, 0, 0, "-", "wrappers"]], "cambrian.utils.MjCambrianJoint": [[32, 4, 1, "", "create"], [32, 3, 1, "", "qposadrs"], [32, 3, 1, "", "qveladrs"]], "cambrian.utils.cambrian_xml": [[30, 2, 1, "", "MjCambrianXML"], [30, 1, 1, "", "MjCambrianXMLConfig"], [30, 5, 1, "", "convert_xml_to_yaml"]], "cambrian.utils.cambrian_xml.MjCambrianXML": [[30, 4, 1, "", "add"], [30, 3, 1, "", "base_dir"], [30, 4, 1, "", "combine"], [30, 4, 1, "", "find"], [30, 4, 1, "", "findall"], [30, 4, 1, "", "from_config"], [30, 4, 1, "", "from_string"], [30, 4, 1, "", "get_path"], [30, 4, 1, "", "load"], [30, 4, 1, "", "make_empty"], [30, 4, 1, "", "parse"], [30, 4, 1, "", "remove"], [30, 3, 1, "", "root"], [30, 4, 1, "", "to_string"], [30, 4, 1, "", "write"]], "cambrian.utils.config": [[31, 2, 1, "", "MjCambrianBaseConfig"], [31, 2, 1, "", "MjCambrianContainerConfig"], [31, 2, 1, "", "MjCambrianFlagWrapperMeta"], [31, 5, 1, "", "build_pattern"], [31, 5, 1, "", "config_wrapper"], [31, 5, 1, "", "instance_flag_wrapper"], [31, 5, 1, "", "instance_wrapper"], [31, 5, 1, "", "run_hydra"]], "cambrian.utils.config.MjCambrianContainerConfig": [[31, 4, 1, "", "__contains__"], [31, 4, 1, "", "__delattr__"], [31, 4, 1, "", "__delitem__"], [31, 4, 1, "", "__getattr__"], [31, 4, 1, "", "__getitem__"], [31, 4, 1, "", "__getstate__"], [31, 4, 1, "", "__iter__"], [31, 4, 1, "", "__len__"], [31, 4, 1, "", "__setattr__"], [31, 4, 1, "", "__setitem__"], [31, 4, 1, "", "__setstate__"], [31, 4, 1, "", "clear"], [31, 4, 1, "", "compose"], [31, 3, 1, "", "content"], [31, 4, 1, "", "copy"], [31, 4, 1, "", "create"], [31, 4, 1, "", "get_type"], [31, 4, 1, "", "get_typename"], [31, 4, 1, "", "glob"], [31, 4, 1, "", "globbed_eval"], [31, 4, 1, "", "instantiate"], [31, 4, 1, "", "instantiate_here"], [31, 4, 1, "", "isinstance"], [31, 4, 1, "", "items"], [31, 4, 1, "", "keys"], [31, 4, 1, "", "load"], [31, 4, 1, "", "load_pickle"], [31, 4, 1, "", "merge_with"], [31, 4, 1, "", "merge_with_dotlist"], [31, 4, 1, "", "pickle"], [31, 4, 1, "", "resolve"], [31, 4, 1, "", "save"], [31, 4, 1, "", "select"], [31, 4, 1, "", "set_readonly"], [31, 4, 1, "", "set_readonly_temporarily"], [31, 4, 1, "", "set_struct"], [31, 4, 1, "", "set_struct_temporarily"], [31, 4, 1, "", "to_container"], [31, 4, 1, "", "to_yaml"], [31, 4, 1, "", "update"], [31, 4, 1, "", "values"]], "cambrian.utils.config.MjCambrianFlagWrapperMeta": [[31, 4, 1, "", "__getitem__"]], "cambrian.utils.logger": [[33, 2, 1, "", "MjCambrianFileHandler"], [33, 2, 1, "", "MjCambrianLoggerMaxLevelFilter"], [33, 2, 1, "", "MjCambrianTqdmStreamHandler"]], "cambrian.utils.logger.MjCambrianLoggerMaxLevelFilter": [[33, 4, 1, "", "filter"]], "cambrian.utils.logger.MjCambrianTqdmStreamHandler": [[33, 4, 1, "", "emit"]], "cambrian.utils.wrappers": [[34, 2, 1, "", "MjCambrianConstantActionWrapper"], [34, 2, 1, "", "MjCambrianPettingZooEnvWrapper"], [34, 2, 1, "", "MjCambrianSingleAgentEnvWrapper"], [34, 5, 1, "", "make_wrapped_env"]], "cambrian.utils.wrappers.MjCambrianConstantActionWrapper": [[34, 4, 1, "", "step"]], "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper": [[34, 3, 1, "", "action_space"], [34, 3, 1, "", "observation_space"], [34, 4, 1, "", "reset"], [34, 4, 1, "", "step"]], "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper": [[34, 6, 1, "", "action_space"], [34, 6, 1, "", "observation_space"], [34, 4, 1, "", "reset"], [34, 4, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"background": 0, "config": [1, 31, 36], "composit": 1, "hydra": 2, "featur": 2, "usag": [2, 37], "configur": 3, "tabl": 3, "content": [3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "contribut": 4, "setup": [4, 36], "clone": 4, "repo": 4, "instal": [4, 36], "symbol": 4, "link": 4, "version": 4, "test": 4, "deploi": 4, "your": 4, "chang": 4, "guidelin": 4, "file": 4, "structur": 4, "edit": 4, "sourc": 4, "code": 4, "comment": 4, "document": 4, "build": 4, "artifici": 5, "cambrian": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "intellig": 5, "aci": 5, "abstract": 5, "citat": 5, "agent": [6, 7, 8, 9], "class": [6, 7, 8, 9, 11, 14, 15, 16, 18, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34], "modul": [6, 8, 9, 10, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 33, 34], "submodul": [7, 11, 15, 17, 23, 26, 32, 35], "packag": [7, 11, 15, 17, 26, 31, 32], "todo": [7, 9, 11, 27, 31, 38], "object": 8, "point": 9, "env": [10, 11, 12, 13, 39], "done_fn": 10, "function": [10, 12, 13, 19, 21, 22, 26, 28, 30, 31, 32, 34], "reward_fn": 12, "step_fn": 13, "ey": [14, 15, 16], "optic": 16, "attribut": [17, 30], "ml": [18, 19, 20, 21, 22, 23, 24, 25], "callback": 18, "constraint_fn": 19, "evo": [20, 36], "features_extractor": 21, "fitness_fn": 22, "model": 24, "trainer": 25, "render": [26, 27, 28, 29], "overlai": 27, "render_util": 28, "util": [30, 31, 32, 33, 34, 35], "cambrian_xml": 30, "logger": 33, "wrapper": 34, "api": 35, "refer": 35, "core": 35, "prerequisit": 36, "option": 36, "conda": 36, "environ": 36, "tl": 36, "dr": 36, "visual": [36, 39], "world": 36, "custom": [36, 39], "viewer": [36, 39], "mujoco": [36, 39], "run": [36, 38], "train": [36, 38], "supercloud": 36, "evalu": 36, "openmind": 36, "sweep": [36, 38], "resum": [36, 38], "fail": [36, 38], "other": 36, "thing": 36, "introspect": 36, "overrid": 36, "local": 38, "cluster": 38, "evolut": 38, "displai": 39, "method": 39, "interact": 39, "non": 39, "headless": 39, "shortcut": 39}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Background": [[0, "background"]], "Config Composition": [[1, "config-composition"]], "Hydra": [[2, "hydra"]], "Features": [[2, "features"]], "Usage": [[2, "usage"], [37, "usage"]], "Configuration": [[3, "configuration"]], "Table of Contents": [[3, "table-of-contents"]], "Contributing": [[4, "contributing"]], "Setup": [[4, "setup"], [36, "setup"]], "Cloning the Repo": [[4, "cloning-the-repo"]], "Installing a Symbolic Linked Version for Testing": [[4, "installing-a-symbolic-linked-version-for-testing"]], "Deploy your Changes": [[4, "deploy-your-changes"]], "Versioning": [[4, "versioning"]], "Guidelines": [[4, "guidelines"]], "File Structure": [[4, "file-structure"]], "Editing the Source Code": [[4, "editing-the-source-code"]], "Commenting": [[4, "commenting"]], "Editing the Documentation": [[4, "editing-the-documentation"]], "Building the Documentation": [[4, "building-the-documentation"]], "Artificial Cambrian Intelligence (ACI)": [[5, "artificial-cambrian-intelligence-aci"]], "Abstract": [[5, "abstract"]], "Citation": [[5, "citation"]], "cambrian.agents.agent": [[6, "module-cambrian.agents.agent"]], "Classes": [[6, "classes"], [7, "classes"], [8, "classes"], [9, "classes"], [11, "classes"], [14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [20, "classes"], [21, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"]], "Module Contents": [[6, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [16, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [24, "module-contents"], [25, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"], [33, "module-contents"], [34, "module-contents"]], "cambrian.agents": [[7, "module-cambrian.agents"]], "Submodules": [[7, "submodules"], [11, "submodules"], [15, "submodules"], [17, "submodules"], [23, "submodules"], [26, "submodules"], [32, "submodules"]], "Package Contents": [[7, "package-contents"], [11, "package-contents"], [15, "package-contents"], [17, "package-contents"], [26, "package-contents"], [31, "package-contents"], [32, "package-contents"]], "Todo": [[7, "id1"], [7, "id2"], [9, "id1"], [9, "id2"], [11, "id1"], [27, "id1"], [31, "id1"], [38, "id1"]], "cambrian.agents.object": [[8, "module-cambrian.agents.object"]], "cambrian.agents.point": [[9, "module-cambrian.agents.point"]], "cambrian.envs.done_fns": [[10, "module-cambrian.envs.done_fns"]], "Functions": [[10, "functions"], [12, "functions"], [13, "functions"], [19, "functions"], [21, "functions"], [22, "functions"], [26, "functions"], [28, "functions"], [30, "functions"], [31, "functions"], [32, "functions"], [34, "functions"]], "cambrian.envs": [[11, "module-cambrian.envs"]], "cambrian.envs.reward_fns": [[12, "module-cambrian.envs.reward_fns"]], "cambrian.envs.step_fns": [[13, "module-cambrian.envs.step_fns"]], "cambrian.eyes.eye": [[14, "module-cambrian.eyes.eye"]], "cambrian.eyes": [[15, "module-cambrian.eyes"]], "cambrian.eyes.optics": [[16, "module-cambrian.eyes.optics"]], "cambrian": [[17, "module-cambrian"]], "Attributes": [[17, "attributes"], [30, "attributes"]], "cambrian.ml.callbacks": [[18, "module-cambrian.ml.callbacks"]], "cambrian.ml.constraint_fns": [[19, "module-cambrian.ml.constraint_fns"]], "cambrian.ml.evo": [[20, "module-cambrian.ml.evo"]], "cambrian.ml.features_extractors": [[21, "module-cambrian.ml.features_extractors"]], "cambrian.ml.fitness_fns": [[22, "module-cambrian.ml.fitness_fns"]], "cambrian.ml": [[23, "module-cambrian.ml"]], "cambrian.ml.model": [[24, "module-cambrian.ml.model"]], "cambrian.ml.trainer": [[25, "module-cambrian.ml.trainer"]], "cambrian.renderer": [[26, "module-cambrian.renderer"]], "cambrian.renderer.overlays": [[27, "module-cambrian.renderer.overlays"]], "cambrian.renderer.render_utils": [[28, "module-cambrian.renderer.render_utils"]], "cambrian.renderer.renderer": [[29, "module-cambrian.renderer.renderer"]], "cambrian.utils.cambrian_xml": [[30, "module-cambrian.utils.cambrian_xml"]], "cambrian.utils.config": [[31, "module-cambrian.utils.config"]], "cambrian.utils": [[32, "module-cambrian.utils"]], "cambrian.utils.logger": [[33, "module-cambrian.utils.logger"]], "cambrian.utils.wrappers": [[34, "module-cambrian.utils.wrappers"]], "API Reference": [[35, "api-reference"]], "Core Submodules": [[35, "core-submodules"]], "Utilities": [[35, "utilities"]], "Prerequisites": [[36, "prerequisites"]], "Optional Prerequisites": [[36, "optional-prerequisites"]], "Conda Environment": [[36, "conda-environment"]], "Installation": [[36, "installation"]], "TL;DR": [[36, "tl-dr"]], "Visualizing the world/environment": [[36, "visualizing-the-world-environment"]], "Custom Viewer": [[36, "custom-viewer"], [39, "custom-viewer"]], "Mujoco Viewer": [[36, "mujoco-viewer"], [39, "mujoco-viewer"]], "Running training": [[36, "running-training"]], "Running evo": [[36, "running-evo"]], "Running on Supercloud": [[36, "running-on-supercloud"]], "Training": [[36, "training"], [38, "training"]], "Evaluation": [[36, "evaluation"]], "Evo": [[36, "evo"]], "Running on Openmind": [[36, "running-on-openmind"]], "Running a Training Sweep": [[36, "running-a-training-sweep"]], "Resuming a Failed Sweep": [[36, "resuming-a-failed-sweep"]], "Other things": [[36, "other-things"]], "Introspection into the Configs": [[36, "introspection-into-the-configs"]], "Configs/Overrides": [[36, "configs-overrides"]], "Local": [[38, "local"]], "Running on a cluster": [[38, "running-on-a-cluster"]], "Running evolution": [[38, "running-evolution"]], "Resuming a failed evolution": [[38, "resuming-a-failed-evolution"]], "Running a training sweep": [[38, "running-a-training-sweep"]], "Visualizing the Env": [[39, "visualizing-the-env"]], "Display Methods": [[39, "display-methods"]], "Interactive + Display": [[39, "interactive-display"], [39, "id1"]], "Non-interactive + Headless": [[39, "non-interactive-headless"]], "Viewer Shortcuts": [[39, "viewer-shortcuts"]]}, "indexentries": {"mjcambrianagent (class in cambrian.agents.agent)": [[6, "cambrian.agents.agent.MjCambrianAgent"]], "mjcambrianagent2d (class in cambrian.agents.agent)": [[6, "cambrian.agents.agent.MjCambrianAgent2D"]], "mjcambrianagentconfig (class in cambrian.agents.agent)": [[6, "cambrian.agents.agent.MjCambrianAgentConfig"]], "action_space (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.action_space"], [7, "cambrian.agents.MjCambrianAgent.action_space"]], "apply_action() (mjcambrianagent method)": [[6, "cambrian.agents.agent.MjCambrianAgent.apply_action"], [7, "cambrian.agents.MjCambrianAgent.apply_action"]], "cambrian.agents.agent": [[6, "module-cambrian.agents.agent"]], "create_composite_image() (mjcambrianagent method)": [[6, "cambrian.agents.agent.MjCambrianAgent.create_composite_image"], [7, "cambrian.agents.MjCambrianAgent.create_composite_image"]], "generate_xml() (mjcambrianagent method)": [[6, "cambrian.agents.agent.MjCambrianAgent.generate_xml"], [7, "cambrian.agents.MjCambrianAgent.generate_xml"]], "geom (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.geom"], [7, "cambrian.agents.MjCambrianAgent.geom"]], "get_action_privileged() (mjcambrianagent method)": [[6, "cambrian.agents.agent.MjCambrianAgent.get_action_privileged"], [7, "cambrian.agents.MjCambrianAgent.get_action_privileged"]], "has_contacts (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.has_contacts"], [7, "cambrian.agents.MjCambrianAgent.has_contacts"]], "init_pos (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.init_pos"], [7, "cambrian.agents.MjCambrianAgent.init_pos"]], "init_quat (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.init_quat"], [7, "cambrian.agents.MjCambrianAgent.init_quat"]], "last_action (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.last_action"], [7, "cambrian.agents.MjCambrianAgent.last_action"]], "mat (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.mat"], [7, "cambrian.agents.MjCambrianAgent.mat"]], "module": [[6, "module-cambrian.agents.agent"], [7, "module-cambrian.agents"], [8, "module-cambrian.agents.object"], [9, "module-cambrian.agents.point"], [10, "module-cambrian.envs.done_fns"], [11, "module-cambrian.envs"], [12, "module-cambrian.envs.reward_fns"], [13, "module-cambrian.envs.step_fns"], [14, "module-cambrian.eyes.eye"], [15, "module-cambrian.eyes"], [16, "module-cambrian.eyes.optics"], [17, "module-cambrian"], [18, "module-cambrian.ml.callbacks"], [19, "module-cambrian.ml.constraint_fns"], [20, "module-cambrian.ml.evo"], [21, "module-cambrian.ml.features_extractors"], [22, "module-cambrian.ml.fitness_fns"], [23, "module-cambrian.ml"], [24, "module-cambrian.ml.model"], [25, "module-cambrian.ml.trainer"], [26, "module-cambrian.renderer"], [27, "module-cambrian.renderer.overlays"], [28, "module-cambrian.renderer.render_utils"], [29, "module-cambrian.renderer.renderer"], [30, "module-cambrian.utils.cambrian_xml"], [31, "module-cambrian.utils.config"], [32, "module-cambrian.utils"], [33, "module-cambrian.utils.logger"], [34, "module-cambrian.utils.wrappers"]], "observation_space (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.observation_space"], [7, "cambrian.agents.MjCambrianAgent.observation_space"]], "perturb_init_pose() (mjcambrianagent method)": [[6, "cambrian.agents.agent.MjCambrianAgent.perturb_init_pose"], [7, "cambrian.agents.MjCambrianAgent.perturb_init_pose"]], "pos (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.pos"], [7, "cambrian.agents.MjCambrianAgent.pos"]], "qpos (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.qpos"], [7, "cambrian.agents.MjCambrianAgent.qpos"]], "quat (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.quat"], [7, "cambrian.agents.MjCambrianAgent.quat"]], "reset() (mjcambrianagent method)": [[6, "cambrian.agents.agent.MjCambrianAgent.reset"], [7, "cambrian.agents.MjCambrianAgent.reset"]], "speed (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.speed"], [7, "cambrian.agents.MjCambrianAgent.speed"]], "step() (mjcambrianagent method)": [[6, "cambrian.agents.agent.MjCambrianAgent.step"], [7, "cambrian.agents.MjCambrianAgent.step"]], "trainable (mjcambrianagent property)": [[6, "cambrian.agents.agent.MjCambrianAgent.trainable"], [7, "cambrian.agents.MjCambrianAgent.trainable"]], "mjcambrianagent (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgent"]], "mjcambrianagent2d (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgent2D"]], "mjcambrianagentconfig (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgentConfig"]], "mjcambrianagentobject (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgentObject"]], "mjcambrianagentpoint (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgentPoint"]], "mjcambrianagentpointmazeoptimal (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgentPointMazeOptimal"]], "mjcambrianagentpointmazerandom (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgentPointMazeRandom"]], "mjcambrianagentpointprey (class in cambrian.agents)": [[7, "cambrian.agents.MjCambrianAgentPointPrey"]], "action_space (mjcambrianagentpoint property)": [[7, "cambrian.agents.MjCambrianAgentPoint.action_space"], [9, "cambrian.agents.point.MjCambrianAgentPoint.action_space"]], "apply_action() (mjcambrianagentpoint method)": [[7, "cambrian.agents.MjCambrianAgentPoint.apply_action"], [9, "cambrian.agents.point.MjCambrianAgentPoint.apply_action"]], "cambrian.agents": [[7, "module-cambrian.agents"]], "get_action_privileged() (mjcambrianagentobject method)": [[7, "cambrian.agents.MjCambrianAgentObject.get_action_privileged"], [8, "cambrian.agents.object.MjCambrianAgentObject.get_action_privileged"]], "get_action_privileged() (mjcambrianagentpointmazeoptimal method)": [[7, "cambrian.agents.MjCambrianAgentPointMazeOptimal.get_action_privileged"], [9, "cambrian.agents.point.MjCambrianAgentPointMazeOptimal.get_action_privileged"]], "get_action_privileged() (mjcambrianagentpointmazerandom method)": [[7, "cambrian.agents.MjCambrianAgentPointMazeRandom.get_action_privileged"], [9, "cambrian.agents.point.MjCambrianAgentPointMazeRandom.get_action_privileged"]], "get_action_privileged() (mjcambrianagentpointprey method)": [[7, "cambrian.agents.MjCambrianAgentPointPrey.get_action_privileged"], [9, "cambrian.agents.point.MjCambrianAgentPointPrey.get_action_privileged"]], "reset() (mjcambrianagentpointmazeoptimal method)": [[7, "cambrian.agents.MjCambrianAgentPointMazeOptimal.reset"], [9, "cambrian.agents.point.MjCambrianAgentPointMazeOptimal.reset"]], "reset() (mjcambrianagentpointmazerandom method)": [[7, "cambrian.agents.MjCambrianAgentPointMazeRandom.reset"], [9, "cambrian.agents.point.MjCambrianAgentPointMazeRandom.reset"]], "speed (mjcambrianagentpoint property)": [[7, "cambrian.agents.MjCambrianAgentPoint.speed"], [9, "cambrian.agents.point.MjCambrianAgentPoint.speed"]], "mjcambrianagentobject (class in cambrian.agents.object)": [[8, "cambrian.agents.object.MjCambrianAgentObject"]], "cambrian.agents.object": [[8, "module-cambrian.agents.object"]], "mjcambrianagentpoint (class in cambrian.agents.point)": [[9, "cambrian.agents.point.MjCambrianAgentPoint"]], "mjcambrianagentpointmazeoptimal (class in cambrian.agents.point)": [[9, "cambrian.agents.point.MjCambrianAgentPointMazeOptimal"]], "mjcambrianagentpointmazerandom (class in cambrian.agents.point)": [[9, "cambrian.agents.point.MjCambrianAgentPointMazeRandom"]], "mjcambrianagentpointprey (class in cambrian.agents.point)": [[9, "cambrian.agents.point.MjCambrianAgentPointPrey"]], "cambrian.agents.point": [[9, "module-cambrian.agents.point"]], "cambrian.envs.done_fns": [[10, "module-cambrian.envs.done_fns"]], "done_combined() (in module cambrian.envs.done_fns)": [[10, "cambrian.envs.done_fns.done_combined"]], "done_if_close_to_agents() (in module cambrian.envs.done_fns)": [[10, "cambrian.envs.done_fns.done_if_close_to_agents"]], "done_if_exceeds_max_episode_steps() (in module cambrian.envs.done_fns)": [[10, "cambrian.envs.done_fns.done_if_exceeds_max_episode_steps"]], "done_if_has_contacts() (in module cambrian.envs.done_fns)": [[10, "cambrian.envs.done_fns.done_if_has_contacts"]], "done_if_low_reward() (in module cambrian.envs.done_fns)": [[10, "cambrian.envs.done_fns.done_if_low_reward"]], "done_never() (in module cambrian.envs.done_fns)": [[10, "cambrian.envs.done_fns.done_never"]], "mjcambrianenv (class in cambrian.envs)": [[11, "cambrian.envs.MjCambrianEnv"]], "mjcambrianenvconfig (class in cambrian.envs)": [[11, "cambrian.envs.MjCambrianEnvConfig"]], "mjcambrianmazeenv (class in cambrian.envs)": [[11, "cambrian.envs.MjCambrianMazeEnv"]], "mjcambrianmazeenvconfig (class in cambrian.envs)": [[11, "cambrian.envs.MjCambrianMazeEnvConfig"]], "action_space() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.action_space"]], "action_spaces (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.action_spaces"]], "agents (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.agents"]], "cambrian.envs": [[11, "module-cambrian.envs"]], "close() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.close"]], "cumulative_reward (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.cumulative_reward"]], "data (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.data"]], "episode_step (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.episode_step"]], "generate_xml() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.generate_xml"]], "generate_xml() (mjcambrianmazeenv method)": [[11, "cambrian.envs.MjCambrianMazeEnv.generate_xml"]], "max_episode_steps (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.max_episode_steps"]], "maze (mjcambrianmazeenv property)": [[11, "cambrian.envs.MjCambrianMazeEnv.maze"]], "maze_store (mjcambrianmazeenv property)": [[11, "cambrian.envs.MjCambrianMazeEnv.maze_store"]], "model (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.model"]], "name (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.name"]], "num_agents (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.num_agents"]], "num_timesteps (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.num_timesteps"]], "observation_space() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.observation_space"]], "observation_spaces (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.observation_spaces"]], "overlays (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.overlays"]], "possible_agents (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.possible_agents"]], "record (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.record"]], "render() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.render"]], "renderer (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.renderer"]], "reset() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.reset"]], "reset() (mjcambrianmazeenv method)": [[11, "cambrian.envs.MjCambrianMazeEnv.reset"]], "save() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.save"]], "set_random_seed() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.set_random_seed"]], "stashed_cumulative_reward (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.stashed_cumulative_reward"]], "state() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.state"]], "step() (mjcambrianenv method)": [[11, "cambrian.envs.MjCambrianEnv.step"]], "xml (mjcambrianenv property)": [[11, "cambrian.envs.MjCambrianEnv.xml"]], "calc_delta() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.calc_delta"]], "calc_quickness() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.calc_quickness"]], "cambrian.envs.reward_fns": [[12, "module-cambrian.envs.reward_fns"]], "check_if_larger() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.check_if_larger"]], "euclidean_delta_from_init() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.euclidean_delta_from_init"]], "penalize_if_has_contacts() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.penalize_if_has_contacts"]], "reward_combined() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.reward_combined"]], "reward_euclidean_delta_to_agents() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.reward_euclidean_delta_to_agents"]], "reward_for_termination() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.reward_for_termination"]], "reward_for_truncation() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.reward_for_truncation"]], "reward_if_agents_respawned() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.reward_if_agents_respawned"]], "reward_if_close_to_agents() (in module cambrian.envs.reward_fns)": [[12, "cambrian.envs.reward_fns.reward_if_close_to_agents"]], "cambrian.envs.step_fns": [[13, "module-cambrian.envs.step_fns"]], "respawn_agent() (in module cambrian.envs.step_fns)": [[13, "cambrian.envs.step_fns.respawn_agent"]], "step_add_agent_qpos_to_info() (in module cambrian.envs.step_fns)": [[13, "cambrian.envs.step_fns.step_add_agent_qpos_to_info"]], "step_combined() (in module cambrian.envs.step_fns)": [[13, "cambrian.envs.step_fns.step_combined"]], "step_respawn_agents_if_close_to_agents() (in module cambrian.envs.step_fns)": [[13, "cambrian.envs.step_fns.step_respawn_agents_if_close_to_agents"]], "mjcambrianeye (class in cambrian.eyes.eye)": [[14, "cambrian.eyes.eye.MjCambrianEye"]], "mjcambrianeyeconfig (class in cambrian.eyes.eye)": [[14, "cambrian.eyes.eye.MjCambrianEyeConfig"]], "cambrian.eyes.eye": [[14, "module-cambrian.eyes.eye"]], "config (mjcambrianeye property)": [[14, "cambrian.eyes.eye.MjCambrianEye.config"], [15, "cambrian.eyes.MjCambrianEye.config"]], "generate_xml() (mjcambrianeye method)": [[14, "cambrian.eyes.eye.MjCambrianEye.generate_xml"], [15, "cambrian.eyes.MjCambrianEye.generate_xml"]], "name (mjcambrianeye property)": [[14, "cambrian.eyes.eye.MjCambrianEye.name"], [15, "cambrian.eyes.MjCambrianEye.name"]], "num_pixels (mjcambrianeye property)": [[14, "cambrian.eyes.eye.MjCambrianEye.num_pixels"], [15, "cambrian.eyes.MjCambrianEye.num_pixels"]], "observation_space (mjcambrianeye property)": [[14, "cambrian.eyes.eye.MjCambrianEye.observation_space"], [15, "cambrian.eyes.MjCambrianEye.observation_space"]], "prev_obs (mjcambrianeye property)": [[14, "cambrian.eyes.eye.MjCambrianEye.prev_obs"], [15, "cambrian.eyes.MjCambrianEye.prev_obs"]], "render() (mjcambrianeye method)": [[14, "cambrian.eyes.eye.MjCambrianEye.render"], [15, "cambrian.eyes.MjCambrianEye.render"]], "renderer (mjcambrianeye property)": [[14, "cambrian.eyes.eye.MjCambrianEye.renderer"], [15, "cambrian.eyes.MjCambrianEye.renderer"]], "reset() (mjcambrianeye method)": [[14, "cambrian.eyes.eye.MjCambrianEye.reset"], [15, "cambrian.eyes.MjCambrianEye.reset"]], "step() (mjcambrianeye method)": [[14, "cambrian.eyes.eye.MjCambrianEye.step"], [15, "cambrian.eyes.MjCambrianEye.step"]], "mjcambrianeye (class in cambrian.eyes)": [[15, "cambrian.eyes.MjCambrianEye"]], "mjcambrianeyeconfig (class in cambrian.eyes)": [[15, "cambrian.eyes.MjCambrianEyeConfig"]], "mjcambrianopticseye (class in cambrian.eyes)": [[15, "cambrian.eyes.MjCambrianOpticsEye"]], "mjcambrianopticseyeconfig (class in cambrian.eyes)": [[15, "cambrian.eyes.MjCambrianOpticsEyeConfig"]], "cambrian.eyes": [[15, "module-cambrian.eyes"]], "render() (mjcambrianopticseye method)": [[15, "cambrian.eyes.MjCambrianOpticsEye.render"], [16, "cambrian.eyes.optics.MjCambrianOpticsEye.render"]], "mjcambrianapertureconfig (class in cambrian.eyes.optics)": [[16, "cambrian.eyes.optics.MjCambrianApertureConfig"]], "mjcambriancircularapertureconfig (class in cambrian.eyes.optics)": [[16, "cambrian.eyes.optics.MjCambrianCircularApertureConfig"]], "mjcambrianmaskapertureconfig (class in cambrian.eyes.optics)": [[16, "cambrian.eyes.optics.MjCambrianMaskApertureConfig"]], "mjcambrianopticseye (class in cambrian.eyes.optics)": [[16, "cambrian.eyes.optics.MjCambrianOpticsEye"]], "mjcambrianopticseyeconfig (class in cambrian.eyes.optics)": [[16, "cambrian.eyes.optics.MjCambrianOpticsEyeConfig"]], "cambrian.eyes.optics": [[16, "module-cambrian.eyes.optics"]], "__author__ (in module cambrian)": [[17, "cambrian.__author__"]], "__license__ (in module cambrian)": [[17, "cambrian.__license__"]], "cambrian": [[17, "module-cambrian"]], "mjcambriancallbacklistwithsharedparent (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianCallbackListWithSharedParent"]], "mjcambrianevalcallback (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianEvalCallback"]], "mjcambriangpuusagecallback (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianGPUUsageCallback"]], "mjcambrianplotevaluationscallback (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianPlotEvaluationsCallback"]], "mjcambrianplotmonitorcallback (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianPlotMonitorCallback"]], "mjcambrianprogressbarcallback (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianProgressBarCallback"]], "mjcambriansaveconfigcallback (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianSaveConfigCallback"]], "mjcambriansavepolicycallback (class in cambrian.ml.callbacks)": [[18, "cambrian.ml.callbacks.MjCambrianSavePolicyCallback"]], "__del__() (mjcambrianprogressbarcallback method)": [[18, "cambrian.ml.callbacks.MjCambrianProgressBarCallback.__del__"]], "cambrian.ml.callbacks": [[18, "module-cambrian.ml.callbacks"]], "on_multirun_start() (mjcambriansaveconfigcallback method)": [[18, "cambrian.ml.callbacks.MjCambrianSaveConfigCallback.on_multirun_start"]], "on_run_start() (mjcambriansaveconfigcallback method)": [[18, "cambrian.ml.callbacks.MjCambrianSaveConfigCallback.on_run_start"]], "cambrian.ml.constraint_fns": [[19, "module-cambrian.ml.constraint_fns"]], "constrain_morphologically_feasible_eyes() (in module cambrian.ml.constraint_fns)": [[19, "cambrian.ml.constraint_fns.constrain_morphologically_feasible_eyes"]], "constrain_total_memory_throughput() (in module cambrian.ml.constraint_fns)": [[19, "cambrian.ml.constraint_fns.constrain_total_memory_throughput"]], "constrain_total_num_eyes() (in module cambrian.ml.constraint_fns)": [[19, "cambrian.ml.constraint_fns.constrain_total_num_eyes"]], "constrain_total_pixels() (in module cambrian.ml.constraint_fns)": [[19, "cambrian.ml.constraint_fns.constrain_total_pixels"]], "nevergrad_constraint_fn() (in module cambrian.ml.constraint_fns)": [[19, "cambrian.ml.constraint_fns.nevergrad_constraint_fn"]], "mjcambrianevoconfig (class in cambrian.ml.evo)": [[20, "cambrian.ml.evo.MjCambrianEvoConfig"]], "cambrian.ml.evo": [[20, "module-cambrian.ml.evo"]], "mjcambriancombinedextractor (class in cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.MjCambrianCombinedExtractor"]], "mjcambrianimagefeaturesextractor (class in cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.MjCambrianImageFeaturesExtractor"]], "mjcambrianmlpextractor (class in cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.MjCambrianMLPExtractor"]], "mjcambriannaturecnnextractor (class in cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.MjCambrianNatureCNNExtractor"]], "permutedflattenextractor (class in cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.PermutedFlattenExtractor"]], "cambrian.ml.features_extractors": [[21, "module-cambrian.ml.features_extractors"]], "is_image_space() (in module cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.is_image_space"]], "maybe_transpose_obs() (in module cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.maybe_transpose_obs"]], "maybe_transpose_space() (in module cambrian.ml.features_extractors)": [[21, "cambrian.ml.features_extractors.maybe_transpose_space"]], "cambrian.ml.fitness_fns": [[22, "module-cambrian.ml.fitness_fns"]], "fitness_from_evaluations() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.fitness_from_evaluations"]], "fitness_from_monitor() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.fitness_from_monitor"]], "fitness_from_txt() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.fitness_from_txt"]], "fitness_num_eyes() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.fitness_num_eyes"]], "fitness_num_eyes_and_fov() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.fitness_num_eyes_and_fov"]], "parse_evaluations_npz() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.parse_evaluations_npz"]], "parse_monitor_csv() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.parse_monitor_csv"]], "top_n_percent() (in module cambrian.ml.fitness_fns)": [[22, "cambrian.ml.fitness_fns.top_n_percent"]], "cambrian.ml": [[23, "module-cambrian.ml"]], "mjcambrianmodel (class in cambrian.ml.model)": [[24, "cambrian.ml.model.MjCambrianModel"]], "cambrian.ml.model": [[24, "module-cambrian.ml.model"]], "load_policy() (mjcambrianmodel method)": [[24, "cambrian.ml.model.MjCambrianModel.load_policy"]], "load_rollout() (mjcambrianmodel method)": [[24, "cambrian.ml.model.MjCambrianModel.load_rollout"]], "predict() (mjcambrianmodel method)": [[24, "cambrian.ml.model.MjCambrianModel.predict"]], "save_policy() (mjcambrianmodel method)": [[24, "cambrian.ml.model.MjCambrianModel.save_policy"]], "mjcambriantrainer (class in cambrian.ml.trainer)": [[25, "cambrian.ml.trainer.MjCambrianTrainer"]], "mjcambriantrainerconfig (class in cambrian.ml.trainer)": [[25, "cambrian.ml.trainer.MjCambrianTrainerConfig"]], "cambrian.ml.trainer": [[25, "module-cambrian.ml.trainer"]], "test() (mjcambriantrainer method)": [[25, "cambrian.ml.trainer.MjCambrianTrainer.test"]], "train() (mjcambriantrainer method)": [[25, "cambrian.ml.trainer.MjCambrianTrainer.train"]], "mjcambrianrenderer (class in cambrian.renderer)": [[26, "cambrian.renderer.MjCambrianRenderer"]], "mjcambrianrendererconfig (class in cambrian.renderer)": [[26, "cambrian.renderer.MjCambrianRendererConfig"]], "mjcambrianrenderersavemode (class in cambrian.renderer)": [[26, "cambrian.renderer.MjCambrianRendererSaveMode"]], "cambrian.renderer": [[26, "module-cambrian.renderer"]], "convert_depth_distances() (in module cambrian.renderer)": [[26, "cambrian.renderer.convert_depth_distances"]], "resize_with_aspect_fill() (in module cambrian.renderer)": [[26, "cambrian.renderer.resize_with_aspect_fill"]], "mjcambriancursor (class in cambrian.renderer.overlays)": [[27, "cambrian.renderer.overlays.MjCambrianCursor"]], "mjcambrianimagevieweroverlay (class in cambrian.renderer.overlays)": [[27, "cambrian.renderer.overlays.MjCambrianImageViewerOverlay"]], "mjcambriansitevieweroverlay (class in cambrian.renderer.overlays)": [[27, "cambrian.renderer.overlays.MjCambrianSiteViewerOverlay"]], "mjcambriantextvieweroverlay (class in cambrian.renderer.overlays)": [[27, "cambrian.renderer.overlays.MjCambrianTextViewerOverlay"]], "mjcambrianvieweroverlay (class in cambrian.renderer.overlays)": [[27, "cambrian.renderer.overlays.MjCambrianViewerOverlay"]], "cambrian.renderer.overlays": [[27, "module-cambrian.renderer.overlays"]], "draw_after_render() (mjcambrianimagevieweroverlay method)": [[27, "cambrian.renderer.overlays.MjCambrianImageViewerOverlay.draw_after_render"]], "draw_after_render() (mjcambriantextvieweroverlay method)": [[27, "cambrian.renderer.overlays.MjCambrianTextViewerOverlay.draw_after_render"]], "draw_after_render() (mjcambrianvieweroverlay method)": [[27, "cambrian.renderer.overlays.MjCambrianViewerOverlay.draw_after_render"]], "draw_before_render() (mjcambriansitevieweroverlay method)": [[27, "cambrian.renderer.overlays.MjCambrianSiteViewerOverlay.draw_before_render"]], "draw_before_render() (mjcambrianvieweroverlay method)": [[27, "cambrian.renderer.overlays.MjCambrianViewerOverlay.draw_before_render"]], "add_white_border() (in module cambrian.renderer.render_utils)": [[28, "cambrian.renderer.render_utils.add_white_border"]], "cambrian.renderer.render_utils": [[28, "module-cambrian.renderer.render_utils"]], "convert_depth_distances() (in module cambrian.renderer.render_utils)": [[28, "cambrian.renderer.render_utils.convert_depth_distances"]], "resize_with_aspect_fill() (in module cambrian.renderer.render_utils)": [[28, "cambrian.renderer.render_utils.resize_with_aspect_fill"]], "mjcambrianoffscreenviewer (class in cambrian.renderer.renderer)": [[29, "cambrian.renderer.renderer.MjCambrianOffscreenViewer"]], "mjcambrianonscreenviewer (class in cambrian.renderer.renderer)": [[29, "cambrian.renderer.renderer.MjCambrianOnscreenViewer"]], "mjcambrianrenderer (class in cambrian.renderer.renderer)": [[29, "cambrian.renderer.renderer.MjCambrianRenderer"]], "mjcambrianrendererconfig (class in cambrian.renderer.renderer)": [[29, "cambrian.renderer.renderer.MjCambrianRendererConfig"]], "mjcambrianrenderersavemode (class in cambrian.renderer.renderer)": [[29, "cambrian.renderer.renderer.MjCambrianRendererSaveMode"]], "mjcambrianviewer (class in cambrian.renderer.renderer)": [[29, "cambrian.renderer.renderer.MjCambrianViewer"]], "cambrian.renderer.renderer": [[29, "module-cambrian.renderer.renderer"]], "mjcambrianxml (class in cambrian.utils.cambrian_xml)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML"]], "mjcambrianxmlconfig (in module cambrian.utils.cambrian_xml)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXMLConfig"]], "add() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.add"]], "base_dir (mjcambrianxml property)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.base_dir"]], "cambrian.utils.cambrian_xml": [[30, "module-cambrian.utils.cambrian_xml"]], "combine() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.combine"]], "convert_xml_to_yaml() (in module cambrian.utils.cambrian_xml)": [[30, "cambrian.utils.cambrian_xml.convert_xml_to_yaml"]], "find() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.find"]], "findall() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.findall"]], "from_config() (mjcambrianxml static method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.from_config"]], "from_string() (mjcambrianxml static method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.from_string"]], "get_path() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.get_path"]], "load() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.load"]], "make_empty() (mjcambrianxml static method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.make_empty"]], "parse() (mjcambrianxml static method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.parse"]], "remove() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.remove"]], "root (mjcambrianxml property)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.root"]], "to_string() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.to_string"]], "write() (mjcambrianxml method)": [[30, "cambrian.utils.cambrian_xml.MjCambrianXML.write"]], "mjcambrianbaseconfig (class in cambrian.utils.config)": [[31, "cambrian.utils.config.MjCambrianBaseConfig"]], "mjcambriancontainerconfig (class in cambrian.utils.config)": [[31, "cambrian.utils.config.MjCambrianContainerConfig"]], "mjcambrianflagwrappermeta (class in cambrian.utils.config)": [[31, "cambrian.utils.config.MjCambrianFlagWrapperMeta"]], "__contains__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__contains__"]], "__delattr__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__delattr__"]], "__delitem__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__delitem__"]], "__getattr__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__getattr__"]], "__getitem__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__getitem__"]], "__getitem__() (mjcambrianflagwrappermeta method)": [[31, "cambrian.utils.config.MjCambrianFlagWrapperMeta.__getitem__"]], "__getstate__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__getstate__"]], "__iter__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__iter__"]], "__len__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__len__"]], "__setattr__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__setattr__"]], "__setitem__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__setitem__"]], "__setstate__() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.__setstate__"]], "build_pattern() (in module cambrian.utils.config)": [[31, "cambrian.utils.config.build_pattern"]], "cambrian.utils.config": [[31, "module-cambrian.utils.config"]], "clear() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.clear"]], "compose() (mjcambriancontainerconfig class method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.compose"]], "config_wrapper() (in module cambrian.utils.config)": [[31, "cambrian.utils.config.config_wrapper"]], "content (mjcambriancontainerconfig property)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.content"]], "copy() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.copy"]], "create() (mjcambriancontainerconfig class method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.create"]], "get_type() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.get_type"]], "get_typename() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.get_typename"]], "glob() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.glob"]], "globbed_eval() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.globbed_eval"]], "instance_flag_wrapper() (in module cambrian.utils.config)": [[31, "cambrian.utils.config.instance_flag_wrapper"]], "instance_wrapper() (in module cambrian.utils.config)": [[31, "cambrian.utils.config.instance_wrapper"]], "instantiate() (mjcambriancontainerconfig class method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.instantiate"]], "instantiate_here() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.instantiate_here"]], "isinstance() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.isinstance"]], "items() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.items"]], "keys() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.keys"]], "load() (mjcambriancontainerconfig class method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.load"]], "load_pickle() (mjcambriancontainerconfig class method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.load_pickle"]], "merge_with() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.merge_with"]], "merge_with_dotlist() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.merge_with_dotlist"]], "pickle() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.pickle"]], "resolve() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.resolve"]], "run_hydra() (in module cambrian.utils.config)": [[31, "cambrian.utils.config.run_hydra"]], "save() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.save"]], "select() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.select"]], "set_readonly() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.set_readonly"]], "set_readonly_temporarily() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.set_readonly_temporarily"]], "set_struct() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.set_struct"]], "set_struct_temporarily() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.set_struct_temporarily"]], "to_container() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.to_container"]], "to_yaml() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.to_yaml"]], "update() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.update"]], "values() (mjcambriancontainerconfig method)": [[31, "cambrian.utils.config.MjCambrianContainerConfig.values"]], "mjcambrianactuator (class in cambrian.utils)": [[32, "cambrian.utils.MjCambrianActuator"]], "mjcambriangeometry (class in cambrian.utils)": [[32, "cambrian.utils.MjCambrianGeometry"]], "mjcambrianjoint (class in cambrian.utils)": [[32, "cambrian.utils.MjCambrianJoint"]], "agent_selected() (in module cambrian.utils)": [[32, "cambrian.utils.agent_selected"]], "cambrian.utils": [[32, "module-cambrian.utils"]], "create() (mjcambrianjoint static method)": [[32, "cambrian.utils.MjCambrianJoint.create"]], "evaluate_policy() (in module cambrian.utils)": [[32, "cambrian.utils.evaluate_policy"]], "format_string_with_obj_attributes() (in module cambrian.utils)": [[32, "cambrian.utils.format_string_with_obj_attributes"]], "generate_sequence_from_range() (in module cambrian.utils)": [[32, "cambrian.utils.generate_sequence_from_range"]], "get_body_id() (in module cambrian.utils)": [[32, "cambrian.utils.get_body_id"]], "get_body_name() (in module cambrian.utils)": [[32, "cambrian.utils.get_body_name"]], "get_camera_id() (in module cambrian.utils)": [[32, "cambrian.utils.get_camera_id"]], "get_camera_name() (in module cambrian.utils)": [[32, "cambrian.utils.get_camera_name"]], "get_geom_id() (in module cambrian.utils)": [[32, "cambrian.utils.get_geom_id"]], "get_geom_name() (in module cambrian.utils)": [[32, "cambrian.utils.get_geom_name"]], "get_joint_id() (in module cambrian.utils)": [[32, "cambrian.utils.get_joint_id"]], "get_joint_name() (in module cambrian.utils)": [[32, "cambrian.utils.get_joint_name"]], "get_light_id() (in module cambrian.utils)": [[32, "cambrian.utils.get_light_id"]], "get_light_name() (in module cambrian.utils)": [[32, "cambrian.utils.get_light_name"]], "get_sensor_id() (in module cambrian.utils)": [[32, "cambrian.utils.get_sensor_id"]], "get_sensor_name() (in module cambrian.utils)": [[32, "cambrian.utils.get_sensor_name"]], "get_site_id() (in module cambrian.utils)": [[32, "cambrian.utils.get_site_id"]], "get_site_name() (in module cambrian.utils)": [[32, "cambrian.utils.get_site_name"]], "literal_eval_with_callables() (in module cambrian.utils)": [[32, "cambrian.utils.literal_eval_with_callables"]], "make_odd() (in module cambrian.utils)": [[32, "cambrian.utils.make_odd"]], "qposadrs (mjcambrianjoint property)": [[32, "cambrian.utils.MjCambrianJoint.qposadrs"]], "qveladrs (mjcambrianjoint property)": [[32, "cambrian.utils.MjCambrianJoint.qveladrs"]], "safe_eval() (in module cambrian.utils)": [[32, "cambrian.utils.safe_eval"]], "safe_index() (in module cambrian.utils)": [[32, "cambrian.utils.safe_index"]], "save_data() (in module cambrian.utils)": [[32, "cambrian.utils.save_data"]], "setattrs_temporary() (in module cambrian.utils)": [[32, "cambrian.utils.setattrs_temporary"]], "try_load_pickle() (in module cambrian.utils)": [[32, "cambrian.utils.try_load_pickle"]], "mjcambrianfilehandler (class in cambrian.utils.logger)": [[33, "cambrian.utils.logger.MjCambrianFileHandler"]], "mjcambrianloggermaxlevelfilter (class in cambrian.utils.logger)": [[33, "cambrian.utils.logger.MjCambrianLoggerMaxLevelFilter"]], "mjcambriantqdmstreamhandler (class in cambrian.utils.logger)": [[33, "cambrian.utils.logger.MjCambrianTqdmStreamHandler"]], "cambrian.utils.logger": [[33, "module-cambrian.utils.logger"]], "emit() (mjcambriantqdmstreamhandler method)": [[33, "cambrian.utils.logger.MjCambrianTqdmStreamHandler.emit"]], "filter() (mjcambrianloggermaxlevelfilter method)": [[33, "cambrian.utils.logger.MjCambrianLoggerMaxLevelFilter.filter"]], "mjcambrianconstantactionwrapper (class in cambrian.utils.wrappers)": [[34, "cambrian.utils.wrappers.MjCambrianConstantActionWrapper"]], "mjcambrianpettingzooenvwrapper (class in cambrian.utils.wrappers)": [[34, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper"]], "mjcambriansingleagentenvwrapper (class in cambrian.utils.wrappers)": [[34, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper"]], "action_space (mjcambrianpettingzooenvwrapper property)": [[34, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.action_space"]], "action_space (mjcambriansingleagentenvwrapper attribute)": [[34, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.action_space"]], "cambrian.utils.wrappers": [[34, "module-cambrian.utils.wrappers"]], "make_wrapped_env() (in module cambrian.utils.wrappers)": [[34, "cambrian.utils.wrappers.make_wrapped_env"]], "observation_space (mjcambrianpettingzooenvwrapper property)": [[34, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.observation_space"]], "observation_space (mjcambriansingleagentenvwrapper attribute)": [[34, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.observation_space"]], "reset() (mjcambrianpettingzooenvwrapper method)": [[34, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.reset"]], "reset() (mjcambriansingleagentenvwrapper method)": [[34, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.reset"]], "step() (mjcambrianconstantactionwrapper method)": [[34, "cambrian.utils.wrappers.MjCambrianConstantActionWrapper.step"]], "step() (mjcambrianpettingzooenvwrapper method)": [[34, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.step"]], "step() (mjcambriansingleagentenvwrapper method)": [[34, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.step"]]}})