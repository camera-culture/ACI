Search.setIndex({"docnames": ["contributing", "examples/detection", "examples/index", "examples/multi_agent", "index", "reference/api/cambrian/agents/agent/index", "reference/api/cambrian/agents/index", "reference/api/cambrian/agents/object/index", "reference/api/cambrian/agents/point/index", "reference/api/cambrian/envs/done_fns/index", "reference/api/cambrian/envs/index", "reference/api/cambrian/envs/reward_fns/index", "reference/api/cambrian/envs/step_fns/index", "reference/api/cambrian/eyes/eye/index", "reference/api/cambrian/eyes/index", "reference/api/cambrian/eyes/optics/index", "reference/api/cambrian/index", "reference/api/cambrian/ml/callbacks/index", "reference/api/cambrian/ml/constraint_fns/index", "reference/api/cambrian/ml/evo/index", "reference/api/cambrian/ml/features_extractors/index", "reference/api/cambrian/ml/fitness_fns/index", "reference/api/cambrian/ml/index", "reference/api/cambrian/ml/model/index", "reference/api/cambrian/ml/trainer/index", "reference/api/cambrian/renderer/index", "reference/api/cambrian/renderer/overlays/index", "reference/api/cambrian/renderer/render_utils/index", "reference/api/cambrian/renderer/renderer/index", "reference/api/cambrian/utils/cambrian_xml/index", "reference/api/cambrian/utils/config/index", "reference/api/cambrian/utils/index", "reference/api/cambrian/utils/logger/index", "reference/api/cambrian/utils/wrappers/index", "reference/index", "usage/configuration", "usage/index", "usage/training", "usage/visualizing"], "filenames": ["contributing.md", "examples/detection.md", "examples/index.md", "examples/multi_agent.md", "index.md", "reference/api/cambrian/agents/agent/index.rst", "reference/api/cambrian/agents/index.rst", "reference/api/cambrian/agents/object/index.rst", "reference/api/cambrian/agents/point/index.rst", "reference/api/cambrian/envs/done_fns/index.rst", "reference/api/cambrian/envs/index.rst", "reference/api/cambrian/envs/reward_fns/index.rst", "reference/api/cambrian/envs/step_fns/index.rst", "reference/api/cambrian/eyes/eye/index.rst", "reference/api/cambrian/eyes/index.rst", "reference/api/cambrian/eyes/optics/index.rst", "reference/api/cambrian/index.rst", "reference/api/cambrian/ml/callbacks/index.rst", "reference/api/cambrian/ml/constraint_fns/index.rst", "reference/api/cambrian/ml/evo/index.rst", "reference/api/cambrian/ml/features_extractors/index.rst", "reference/api/cambrian/ml/fitness_fns/index.rst", "reference/api/cambrian/ml/index.rst", "reference/api/cambrian/ml/model/index.rst", "reference/api/cambrian/ml/trainer/index.rst", "reference/api/cambrian/renderer/index.rst", "reference/api/cambrian/renderer/overlays/index.rst", "reference/api/cambrian/renderer/render_utils/index.rst", "reference/api/cambrian/renderer/renderer/index.rst", "reference/api/cambrian/utils/cambrian_xml/index.rst", "reference/api/cambrian/utils/config/index.rst", "reference/api/cambrian/utils/index.rst", "reference/api/cambrian/utils/logger/index.rst", "reference/api/cambrian/utils/wrappers/index.rst", "reference/index.md", "usage/configuration.md", "usage/index.md", "usage/training.md", "usage/visualizing.md"], "titles": ["Contributing", "Detection Task", "Examples", "Implementing a Multi-Agent Task", "Artificial Cambrian Intelligence (ACI)", "cambrian.agents.agent", "cambrian.agents", "cambrian.agents.object", "cambrian.agents.point", "cambrian.envs.done_fns", "cambrian.envs", "cambrian.envs.reward_fns", "cambrian.envs.step_fns", "cambrian.eyes.eye", "cambrian.eyes", "cambrian.eyes.optics", "cambrian", "cambrian.ml.callbacks", "cambrian.ml.constraint_fns", "cambrian.ml.evo", "cambrian.ml.features_extractors", "cambrian.ml.fitness_fns", "cambrian.ml", "cambrian.ml.model", "cambrian.ml.trainer", "cambrian.renderer", "cambrian.renderer.overlays", "cambrian.renderer.render_utils", "cambrian.renderer.renderer", "cambrian.utils.cambrian_xml", "cambrian.utils.config", "cambrian.utils", "cambrian.utils.logger", "cambrian.utils.wrappers", "API Reference", "Configuring an Experiment", "Usage", "Training an Agent", "Visualizing the Env"], "terms": {"repositori": 0, "i": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38], "fairli": [0, 30], "easi": [0, 30], "so": [0, 3, 5, 6, 10, 15, 19, 20, 26, 29, 30, 33, 37, 38], "pleas": [0, 2, 36, 37], "see": [0, 4, 6, 8, 10, 13, 14, 17, 23, 25, 28, 29, 35, 37, 38], "below": [0, 3], "instruct": 0, "how": [0, 2, 3, 4, 32, 35, 36, 37], "actual": [0, 4, 5, 6, 13, 14, 23, 29, 30, 33, 37], "make": [0, 5, 6, 10, 18, 26, 30, 31, 35], "thi": [0, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "project": [0, 4, 27, 35], "There": [0, 15, 18, 19, 23, 30, 38], "ar": [0, 3, 5, 6, 7, 8, 10, 14, 15, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 31, 33, 35, 37, 38], "two": [0, 3, 6, 8, 10, 18, 29, 30], "form": [0, 30], "simpl": [0, 30, 37], "ad": [0, 10, 14, 15, 31, 35], "content": 0, "within": [0, 31, 35, 37], "doc": [0, 29, 37], "folder": [0, 31], "all": [0, 3, 5, 6, 8, 10, 11, 14, 15, 18, 19, 30, 33, 35, 37, 38], "written": [0, 32], "markdown": 0, "convert": [0, 25, 26, 27, 29, 30], "html": [0, 23, 29], "through": [0, 5, 6, 10, 14, 15, 29, 37], "myst_pars": 0, "sphinx": 0, "To": [0, 4, 5, 6, 35, 37], "well": [0, 30], "you": [0, 3, 4, 5, 6, 10, 15, 19, 30, 35, 37, 38], "want": [0, 3, 10, 13, 14, 15, 18, 19, 30, 37], "packag": [0, 2, 3, 4, 35, 36], "symlink": 0, "A": [0, 3, 4, 10, 17, 23, 25, 28, 31, 32, 33], "conda": 0, "virtualenv": 0, "add": [0, 3, 5, 6, 10, 12, 14, 15, 23, 25, 26, 27, 29, 30, 35, 37], "isol": 0, "python": [0, 4, 25, 27, 29, 31, 35, 37, 38], "environ": [0, 4, 5, 6, 7, 8, 10, 13, 14, 17, 20, 23, 24, 29, 31, 33, 37, 38], "reduc": [0, 10, 35], "conflict": 0, "amongst": 0, "It": [0, 5, 6, 7, 10, 13, 14, 15, 18, 23, 24, 29, 30, 31, 35, 37], "highli": 0, "recommend": [0, 24, 37], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38], "one": [0, 3, 5, 6, 8, 11, 30, 33], "normal": [0, 5, 6, 23, 33], "git": [0, 4], "http": [0, 4, 23, 25, 27, 29], "github": [0, 4, 23, 25, 27], "com": [0, 4, 23, 25, 27, 29], "camera": [0, 4, 13, 14, 16, 25, 27, 28, 31, 38], "cultur": [0, 4, 16], "aci": [0, 3], "cd": 0, "refer": [0, 2, 6, 8, 13, 14, 36, 37], "anoth": [0, 3, 9, 11, 30], "The": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 37], "advantag": [0, 23], "can": [0, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 23, 24, 25, 28, 29, 30, 31, 33, 35, 37, 38], "essenti": [0, 6, 7, 10, 13, 14, 20, 25, 28], "place": [0, 5, 6, 10, 13, 14, 18, 32], "separ": [0, 30, 35, 37], "locat": [0, 23, 35, 37], "In": [0, 5, 6, 8, 13, 14, 20, 29, 37], "we": [0, 3, 4, 5, 6, 8, 10, 13, 14, 17, 18, 23, 27, 29, 30, 33, 35, 37, 38], "creat": [0, 4, 5, 6, 8, 10, 13, 14, 25, 27, 28, 29, 30, 31, 32, 33], "becaus": [0, 23, 29, 30], "when": [0, 4, 5, 6, 10, 13, 14, 17, 20, 23, 30, 31, 37], "also": [0, 3, 4, 10, 23, 30, 37, 38], "reflect": [0, 5, 6], "need": [0, 3, 5, 6, 7, 8, 10, 13, 14, 20, 29, 35, 37, 38], "dev": [0, 37], "requir": [0, 4, 37], "pip": [0, 4], "poetri": [0, 4], "action": [0, 3, 5, 6, 7, 8, 10, 23, 33], "automat": [0, 23, 35, 37], "site": [0, 10, 26], "page": [0, 2, 4], "host": 0, "static": [0, 7, 29, 31], "updat": [0, 5, 6, 10, 23, 29, 30, 37], "have": [0, 5, 6, 8, 14, 23, 27, 29, 33, 37, 38], "push": 0, "main": [0, 5, 6, 10, 20, 25, 27, 30, 38], "branch": 0, "onc": [0, 10], "rebuild": 0, "ensur": [0, 10, 37], "error": [0, 30, 32, 37], "befor": [0, 5, 6, 10, 13, 14, 17, 26, 37], "do": [0, 4, 23, 29, 30, 32, 37], "mai": [0, 3, 10, 32, 37, 38], "get": [0, 5, 6, 7, 8, 11, 23, 24, 29, 30, 31], "an": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 17, 19, 20, 21, 23, 24, 26, 29, 30, 31, 32, 36, 38], "email": 0, "from": [0, 5, 6, 7, 8, 11, 12, 13, 14, 15, 18, 19, 23, 25, 27, 29, 30, 31, 32, 35], "someth": 0, "bad": 0, "happen": [0, 5, 6], "tag": [0, 13, 14, 29], "exampl": [0, 14, 27, 30, 31, 37], "v3": 0, "0": [0, 6, 8, 10, 11, 14, 15, 17, 18, 21, 23, 27, 30, 31, 37], "1": [0, 5, 6, 8, 11, 13, 14, 15, 17, 18, 23, 31, 33, 37], "done": [0, 3, 9, 23, 29, 31, 37], "setuptools_scm": 0, "new": [0, 4, 5, 6, 13, 14, 23, 25, 27, 29, 30, 37], "pypi": 0, "attach": [0, 5, 6, 13, 14], "therefor": [0, 5, 6, 8], "must": [0, 5, 6, 8, 14, 23, 25, 28, 29, 33, 37], "after": [0, 5, 6, 10, 24, 26, 30], "previou": [0, 10, 11, 23, 37], "seen": 0, "otherwis": [0, 14, 15, 31, 32], "noth": [0, 23], "lot": 0, "work": [0, 3, 5, 6, 30, 31, 38], "ha": [0, 3, 5, 6, 7, 8, 9, 10, 11, 13, 14, 27, 29, 32, 33, 37], "gone": 0, "function": [0, 3, 10, 23, 24, 35, 37], "scalabl": 0, "consid": [0, 23, 37], "follow": [0, 2, 3, 4, 29, 30, 32, 35, 36, 37], "them": [0, 5, 6, 14, 30], "persist": 0, "long": 0, "time": [0, 13, 14, 17, 23, 25, 28, 30, 37], "cambrian": [0, 2, 34, 36, 37, 38], "contain": [0, 20, 21, 24, 30, 31], "config": [0, 3, 5, 6, 7, 8, 10, 13, 14, 15, 17, 18, 19, 21, 24, 25, 28, 29, 31, 33, 34, 37], "configur": [0, 5, 6, 13, 14, 19, 21, 30, 36, 37], "experi": [0, 4, 18, 24, 36, 37, 38], "model": [0, 5, 6, 8, 10, 13, 14, 20, 22, 24, 25, 27, 31, 37], "mujoco": [0, 5, 6, 8, 10, 13, 14, 25, 26, 27, 28, 29, 30, 31], "script": [0, 3, 4, 10, 22, 35, 37], "run": [0, 3, 4, 17, 21, 23, 24, 30, 31, 35, 38], "tool": [0, 4], "addit": [0, 10, 14, 15, 20, 23, 29, 30, 31, 37], "process": [0, 4, 23, 24, 37], "data": [0, 5, 6, 8, 10, 13, 14, 15, 19, 21, 23, 30, 31, 33], "licens": 0, "py": [0, 10, 25, 27, 35, 37, 38], "descript": 0, "If": [0, 3, 5, 6, 10, 11, 13, 14, 15, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 37], "plan": [0, 37], "visit": 0, "util": [0, 5, 6, 10, 13, 14, 15, 16, 17, 19, 24, 25, 26, 27, 28, 37], "rest": [0, 25, 27], "relat": 0, "method": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 18, 19, 23, 24, 25, 27, 29, 30, 31, 33, 37], "class": 0, "agent": [0, 2, 4, 9, 10, 11, 12, 13, 14, 16, 18, 21, 23, 24, 31, 33, 34, 36], "env": [0, 3, 5, 6, 7, 8, 16, 23, 31, 33, 34, 35, 36, 37], "ey": [0, 3, 4, 5, 6, 16, 18, 21, 26, 27, 34, 37, 38], "ml": [0, 14, 16, 27, 34, 37], "machin": [0, 17, 35], "learn": [0, 7, 23, 35], "render": [0, 5, 6, 10, 13, 14, 15, 16, 17, 34, 38], "__init__": [0, 30, 31], "initi": [0, 5, 6, 17, 29, 30], "googl": [0, 25, 27], "": [0, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 23, 30, 31, 33, 35, 37], "style": [0, 4, 30], "These": [0, 9, 11, 12, 18, 21, 30, 35], "gener": [0, 4, 5, 6, 10, 13, 14, 17, 18, 21, 23, 31], "For": [0, 2, 4, 5, 6, 13, 14, 25, 27, 28, 35, 37], "visual": [0, 4, 5, 6, 13, 14, 17, 36, 37], "studio": 0, "user": [0, 35], "docstr": 0, "help": [0, 30, 35, 37], "ani": [0, 5, 6, 10, 11, 15, 17, 19, 29, 30, 31, 35], "pars": [0, 21, 29, 30, 31, 35], "autosimpl": 0, "usag": [0, 2, 17], "autoapi": 0, "mjcambrianenv": [0, 5, 6, 7, 8, 10, 31, 33], "restructuredtext": 0, "e": [0, 4, 5, 6, 8, 10, 11, 13, 14, 15, 19, 20, 23, 26, 30, 37], "tutori": 0, "fix": [0, 20], "exist": [0, 5, 6, 15, 21, 32, 37], "_static": 0, "css": 0, "custom": [0, 5, 6, 7, 8, 10, 14, 15, 19, 20, 23, 29, 30, 32, 37], "differ": [0, 4, 6, 8, 10, 13, 14, 20, 23, 25, 28, 37], "default": [0, 3, 6, 8, 10, 11, 13, 14, 15, 17, 18, 20, 21, 23, 25, 27, 30, 31, 35, 37], "furo": 0, "theme": 0, "imag": [0, 5, 6, 10, 13, 14, 15, 17, 20, 23, 25, 26, 27, 28], "favicon": 0, "etc": [0, 10], "guid": 0, "md": 0, "tab": [0, 38], "conf": 0, "set": [0, 5, 6, 10, 13, 14, 23, 24, 25, 28, 30, 31, 32, 37, 38], "extens": [0, 20, 30, 35], "index": [0, 5, 6, 14, 15, 31], "home": 0, "try": [0, 3, 13, 14, 31], "maintain": [0, 25, 27], "describ": [0, 3, 29], "abov": [0, 37], "onli": [0, 3, 5, 6, 8, 10, 11, 13, 14, 15, 17, 23, 25, 26, 28, 29, 30, 31, 33, 37], "singl": [0, 3, 4, 10, 14, 25, 28, 30, 33], "background": 0, "should": [0, 5, 6, 10, 11, 13, 14, 17, 18, 20, 21, 23, 24, 28, 30, 31, 32, 35, 37], "multipl": [0, 3, 9, 10, 11, 12, 14, 25, 27, 28, 30, 35], "titl": [0, 4], "same": [0, 10, 15, 17, 25, 28, 33, 35, 37], "insert": 0, "name": [0, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 29, 30, 31, 33, 37], "without": [0, 23, 25, 28, 29, 30], "tabl": 0, "insid": [0, 29], "each": [0, 10, 14, 15, 17, 21, 23, 27, 30, 31, 33, 35, 37], "which": [0, 4, 5, 6, 7, 8, 10, 13, 14, 15, 18, 19, 20, 23, 24, 27, 29, 30, 31, 32, 35, 37], "both": [0, 20, 23], "disadvantag": 0, "allow": [0, 5, 6, 10, 18, 29, 30, 31, 33], "u": [0, 30], "understand": 0, "languag": 0, "compil": 0, "down": [0, 29], "featur": [0, 20], "librari": [0, 13, 14, 29], "websit": [0, 4], "wai": [0, 25, 28, 29, 37], "easiest": 0, "makefil": 0, "bat": 0, "provid": [0, 3, 4, 11, 13, 14, 29, 30, 31, 32, 33, 35, 36, 37], "directli": [0, 3, 5, 6, 13, 14, 25, 28, 29, 30, 35, 37], "necessari": [0, 37], "depend": [0, 23, 37], "command": [0, 3, 35, 37], "clean": 0, "view": [0, 25, 27, 28, 38], "go": [0, 5, 6, 17, 18], "browser": 0, "open": 0, "autobuild": 0, "extrem": 0, "made": 0, "tl": [0, 14, 27], "dr": 0, "demonstr": [2, 37], "train": [2, 4, 17, 23, 24, 33, 36], "variou": [2, 35], "task": [2, 4, 37], "more": [2, 4, 10, 13, 14, 17, 21, 29, 35, 36, 37], "detail": [2, 35, 36, 37], "inform": [2, 4, 5, 6, 7, 8, 13, 14, 29, 31, 32, 35, 36, 37], "detect": [2, 3, 4], "implement": [2, 5, 6, 7, 8, 15, 20, 23, 35, 37], "multi": [2, 5, 6, 10, 14, 30, 33], "document": [3, 4, 35, 37], "system": [3, 4, 14, 35], "framework": [3, 37], "veri": [3, 37], "similar": [3, 5, 6, 7, 8], "read": 3, "first": [3, 4, 5, 6, 11, 13, 14, 17, 33], "support": [3, 5, 6, 10, 17, 20, 29, 30, 33, 35, 37], "stabl": [3, 10, 20, 23], "baselines3": [3, 10], "doe": [3, 7, 21, 30], "sens": [3, 4, 23, 30, 37], "polici": [3, 5, 6, 8, 17, 23, 31], "cannot": [3, 25, 28, 31], "parallel": [3, 23, 24, 37], "howev": [3, 33], "achiev": 3, "esqu": 3, "effect": [3, 30], "trick": 3, "sb3": [3, 20, 33], "think": 3, "concaten": [3, 30], "observ": [3, 5, 6, 7, 10, 12, 13, 14, 20, 23, 33], "space": [3, 4, 5, 6, 8, 10, 13, 14, 18, 20, 33, 38], "common": [3, 17, 20, 37], "techniqu": 3, "known": [3, 30], "central": 3, "decentr": 3, "execut": [3, 17, 31], "downsid": 3, "approach": 3, "still": [3, 37], "valu": [3, 5, 6, 10, 21, 23, 25, 27, 29, 30, 31, 33, 35, 37], "truli": 3, "independ": [3, 13, 14, 30], "reward": [3, 9, 10, 11, 21, 23], "adversari": 3, "like": [3, 25, 28, 29, 30, 32, 35], "maxim": [3, 6, 8], "while": [3, 4, 25, 27, 37], "minim": 3, "result": [3, 4, 17, 21, 27, 31], "alwai": [3, 10, 13, 14, 30, 37], "zero": [3, 11], "won": 3, "t": [3, 5, 6, 13, 14, 15, 18, 19, 23, 27, 30, 32, 33, 37], "been": [3, 10, 11], "bash": [3, 4, 37], "local": [3, 4, 6, 8, 17, 37], "sh": [3, 4, 37], "exp": [3, 4, 35, 37, 38], "detection_ma": 3, "itself": [3, 5, 6, 8, 30], "just": [3, 5, 6, 23, 29, 30, 33, 37, 38], "rather": [3, 6, 8, 30], "than": [3, 5, 6, 8, 11, 18, 23, 30], "_global_": [3, 6, 8], "defin": [3, 5, 6, 7, 8, 10, 13, 14, 15, 19, 21, 22, 25, 26, 29, 30, 31, 35], "second": [3, 14, 37], "point": [3, 6, 11, 30, 37], "agent1": 3, "pet": 3, "zoo": 3, "wrapper": [3, 10, 23, 24, 25, 28, 30, 31], "enabl": [3, 4, 11, 15, 35, 37], "baselin": [3, 20, 23], "overrid": [3, 5, 6, 8, 13, 14, 17, 23, 29, 30, 37], "current": [3, 10, 11, 23, 30], "single_agent_env_wrapp": 3, "wrappers1": 3, "trainer": [3, 22, 37], "wrapper1": 3, "petting_zoo_env_wrapp": 3, "repo": 4, "paper": [4, 23], "roadmap": 4, "design": [4, 31, 35], "kushagra": 4, "tiwari": 4, "tzofi": 4, "klinghoff": 4, "aaron": 4, "young": 4, "siddharth": 4, "somasundaram": 4, "nikhil": 4, "behari": 4, "akshat": 4, "dave": 4, "brian": 4, "cheung": 4, "dan": 4, "eric": 4, "nilsson": 4, "tomaso": 4, "poggio": 4, "ramesh": 4, "raskar": 4, "code": [4, 15, 17, 19, 23, 25, 27, 30, 31], "incred": 4, "divers": 4, "anim": 4, "kingdom": 4, "million": 4, "year": 4, "coevolut": 4, "between": [4, 5, 6, 8, 10, 20, 23, 33, 37], "brain": 4, "adapt": 4, "effici": 4, "introduc": 4, "genvi": 4, "leverag": [4, 30], "comput": 4, "explor": [4, 23], "vast": 4, "potenti": 4, "cognit": 4, "capabl": 4, "By": [4, 10, 23, 30, 37], "co": 4, "perceiv": 4, "interact": 4, "studi": 4, "evolutionari": [4, 19, 23, 24, 37], "progress": [4, 17, 23], "vision": 4, "natur": [4, 20], "develop": 4, "novel": 4, "anticip": 4, "power": [4, 37], "scientist": 4, "test": [4, 23, 24, 31], "hypothes": 4, "gain": 4, "insight": 4, "evolut": 4, "engin": 4, "unconvent": 4, "specif": [4, 5, 6, 15, 19, 23, 30, 33, 35, 37], "rival": 4, "biolog": 4, "counterpart": 4, "term": 4, "perform": [4, 24], "setup": [4, 14, 30], "3": [4, 5, 6, 8, 20, 23, 29, 31, 37], "11": 4, "clone": 4, "Then": [4, 18], "note": [4, 5, 6, 10, 21, 23, 24, 29, 30, 37], "wa": [4, 5, 6, 11], "contribut": 4, "simpli": [4, 5, 6, 7, 13, 14, 23, 30, 35, 37], "evalu": [4, 10, 17, 21, 24, 29, 30, 31, 37], "articl": 4, "tiwary2024roadmap": 4, "author": 4, "journal": 4, "mit": [4, 16], "ai": 4, "2024": 4, "month": 4, "sep": 4, "18": 4, "genai": 4, "pubpub": 4, "org": [4, 23, 29], "pub": 4, "bcfcb6lu": 4, "publish": 4, "mjcambrianagentconfig": [5, 6, 10], "none": [5, 6, 9, 10, 11, 12, 13, 14, 15, 17, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33], "instanti": [5, 6, 10, 13, 14, 15, 19, 24, 25, 28, 30], "fals": [5, 6, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32], "sourc": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33], "base": [5, 6, 7, 8, 10, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 37], "mjcambrianbaseconfig": [5, 6, 10, 13, 14, 15, 19, 24, 25, 28, 30], "type": [5, 6, 10, 13, 14, 15, 19, 24, 25, 27, 28, 29, 30, 31, 35], "hint": [5, 6, 13, 14, 15, 19, 24, 25, 28, 30], "variabl": [5, 6, 10, 13, 14, 15, 19, 24, 25, 28, 30, 31, 37], "instanc": [5, 6, 10, 13, 14, 15, 19, 23, 30, 35], "callabl": [5, 6, 10, 13, 14, 24, 30, 31], "self": [5, 6, 10, 13, 14, 29, 31], "str": [5, 6, 8, 10, 11, 13, 14, 15, 17, 19, 21, 23, 24, 25, 28, 29, 30, 31], "int": [5, 6, 10, 13, 14, 15, 18, 24, 25, 27, 28, 30, 31], "mjcambrianag": [5, 6, 10], "take": [5, 6, 7, 8, 10, 13, 14, 17, 21, 30], "argument": [5, 6, 8, 11, 13, 14, 18, 21, 23, 25, 27, 29, 30, 31, 33], "trainabl": [5, 6, 7, 8, 33], "bool": [5, 6, 10, 13, 14, 15, 21, 24, 25, 28, 29, 30, 31], "whether": [5, 6, 10, 13, 14, 18, 23, 24, 25, 28, 30, 31], "includ": [5, 6, 21, 23, 29, 30, 31, 35, 37], "output": [5, 6, 10, 23, 30, 32, 37, 38], "appli": [5, 6, 8, 10, 14, 15, 26, 29, 33, 35], "get_action_privileg": [5, 6, 7, 8], "use_privileged_act": [5, 6], "respect": [5, 6], "some": [5, 6, 13, 14, 17, 24, 29, 30, 37], "special": [5, 6], "logic": [5, 6, 7, 8, 15, 19, 30, 35, 37], "preced": [5, 6], "over": [5, 6, 11, 23, 30, 37, 38], "attribut": [5, 6, 14, 30, 31, 32], "ignor": [5, 6, 23, 24, 25, 28], "overlay_color": [5, 6], "tupl": [5, 6, 10, 13, 14, 15, 18, 21, 29, 31], "float": [5, 6, 7, 8, 10, 11, 13, 14, 15, 18, 21, 24, 31], "color": [5, 6, 27], "overlay_s": [5, 6], "size": [5, 6, 10, 13, 14, 15, 18, 20, 23, 26], "overlai": [5, 6, 10, 25, 37], "xml": [5, 6, 8, 10, 13, 14, 29, 30], "mjcambrianxmlconfig": [5, 6, 10, 29], "parent": [5, 6, 13, 14, 29, 30], "search": [5, 6, 13, 14, 18, 37], "upward": [5, 6], "yaml": [5, 6, 15, 19, 29, 30, 35, 37], "file": [5, 6, 10, 15, 16, 17, 19, 21, 29, 30, 31, 32, 35], "find": [5, 6, 29, 30, 37], "body_nam": [5, 6, 31], "bodi": [5, 6, 13, 14, 31], "geom_nam": [5, 6, 31], "geom": [5, 6, 13, 14], "placement": [5, 6, 13, 14, 37], "check_contact": [5, 6], "check": [5, 6, 11, 12, 18, 24, 30, 31], "contact": [5, 6, 9, 11], "true": [5, 6, 8, 10, 14, 15, 17, 21, 24, 25, 28, 29, 30, 31, 32], "init_po": [5, 6], "posit": [5, 6, 8, 10, 11, 12, 31], "indic": [5, 6, 11, 31, 33], "length": [5, 6, 13, 14, 18, 23, 30], "fill": [5, 6, 25, 27], "end": [5, 6, 11, 17, 29], "less": [5, 6, 18], "init_quat": [5, 6], "quaternion": [5, 6], "4": [5, 6, 8, 31, 37], "perturb_init_pos": [5, 6], "perturb": [5, 6], "pose": [5, 6], "randomli": [5, 6], "adjust": [5, 6], "distribut": [5, 6, 35], "use_action_ob": [5, 6], "mjcambrianconstantactionwrapp": [5, 6, 33], "vari": [5, 6], "use_contact_ob": [5, 6], "dict": [5, 6, 10, 14, 15, 19, 24, 25, 28, 29, 30, 31, 33], "mjcambrianeyeconfig": [5, 6, 13, 14, 15], "kei": [5, 6, 10, 29, 30, 33, 37], "specifi": [5, 6, 13, 14, 21, 23, 31, 32, 37], "coordin": [5, 6, 13, 14, 26], "physic": [5, 6], "object": [5, 6, 10, 13, 14, 30, 31, 32, 35], "serv": [5, 6], "uniqu": [5, 6, 29], "identifi": [5, 6], "our": [5, 6, 10, 35, 37], "context": [5, 6, 25, 28, 30], "number": [5, 6, 10, 14, 18, 21, 23, 24, 31, 33, 37], "abstract": [5, 6, 10, 31], "awai": [5, 6], "inner": [5, 6], "load": [5, 6, 10, 21, 23, 29, 30, 31, 37], "accumul": [5, 6, 30], "larg": [5, 6, 23, 37], "subclass": [5, 6, 15, 19, 23, 30], "model_path": [5, 6, 37], "num_joint": [5, 6], "paramet": [5, 6, 7, 8, 10, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33], "generate_xml": [5, 6, 10, 13, 14], "Will": [5, 6, 8, 10, 13, 14, 20, 27, 29, 30, 33], "apply_act": [5, 6, 8], "probabl": [5, 6, 15], "step": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 23, 24, 31, 33], "state": [5, 6, 8, 10, 17, 23, 30, 37], "assum": [5, 6, 10, 30, 31, 33], "deviat": [5, 6, 7, 8, 14, 15], "standard": [5, 6, 7, 8, 14, 15], "gym": [5, 6, 7, 8, 10, 23, 31, 33], "api": [5, 6, 7, 8, 10, 30], "privileg": [5, 6, 7, 8], "access": [5, 6, 7, 8, 31], "overridden": [5, 6, 7, 8, 10, 35], "about": [5, 6, 7, 8, 14, 31], "return": [5, 6, 7, 8, 10, 11, 13, 14, 18, 21, 23, 24, 25, 27, 29, 30, 31, 32, 33, 37], "list": [5, 6, 7, 8, 10, 11, 12, 14, 15, 17, 23, 25, 27, 28, 29, 30, 31, 35, 37], "reset": [5, 6, 8, 10, 13, 14, 23, 33, 38], "up": [5, 6, 10, 13, 14, 23, 29, 37], "dure": [5, 6, 8, 17, 29, 33, 37], "simul": [5, 6, 8, 10, 38], "debug": [5, 6, 10, 13, 14, 23, 27, 32, 38], "don": [5, 6, 13, 14, 18, 30], "know": [5, 6], "where": [5, 6, 8, 14, 15, 17, 19, 21, 23, 26, 30, 33], "simplic": [5, 6], "ll": [5, 6, 13, 14, 17, 18, 23, 29, 30, 33], "properti": [5, 6, 8, 10, 13, 14, 29, 30, 31, 33], "has_contact": [5, 6], "walk": [5, 6, 29], "involv": [5, 6], "observation_spac": [5, 6, 10, 13, 14, 20, 33], "gymnasium": [5, 6, 8, 10, 13, 14, 33], "basi": [5, 6], "combin": [5, 6, 9, 11, 12, 13, 14, 29, 30, 35], "stable_baselines3": [5, 6, 17, 20, 23], "pettingzoo": [5, 6, 10], "three": [5, 6, 8, 37], "last": [5, 6, 13, 14, 23, 37], "action_spac": [5, 6, 8, 10, 33], "control": [5, 6, 31], "actuat": [5, 6, 8, 31], "numpi": [5, 6, 13, 14, 21, 27], "ndarrai": [5, 6, 10, 11, 13, 14, 21, 25, 27, 31], "qpo": [5, 6, 12, 31], "joint": [5, 6, 8, 31], "mask": [5, 6, 15, 23], "arrai": [5, 6, 11, 13, 14, 15, 21, 27, 31], "entri": [5, 6, 30], "adr": [5, 6, 31], "associ": [5, 6, 35], "edit": [5, 6], "were": [5, 6], "full": [5, 6, 21, 38], "po": [5, 6, 13, 14, 26, 31], "doesn": [5, 6, 23, 30, 32, 33, 37], "impact": [5, 6], "setter": [5, 6], "quat": [5, 6, 13, 14], "wxyz": [5, 6], "fmt": [5, 6, 13, 14], "assumpt": [5, 6, 20, 33], "structur": [5, 6, 29, 30, 35], "fine": [5, 6], "tune": [5, 6], "behavior": [5, 6, 35], "last_act": [5, 6], "mjcambriangeometri": [5, 6, 13, 14, 31], "mjcambrianagent2d": [5, 6, 7, 8], "move": [5, 6, 8, 13, 14, 37], "2d": [5, 6, 15, 21], "plane": [5, 6, 14, 15], "yaw": [5, 6, 27], "hing": [5, 6], "orient": [5, 6, 30], "modul": [6, 10, 14, 22, 25, 30, 31], "mjcambrianagentobject": [6, 7], "non": [6, 7, 8, 10, 11, 29], "mjcambrianagentpoint": [6, 8], "hardcod": [6, 8], "forward": [6, 8], "veloc": [6, 8, 31], "rotat": [6, 8], "best": [6, 8], "my": [6, 8], "knowledg": [6, 8, 13, 14], "translat": [6, 8], "frame": [6, 8], "mean": [6, 8, 21, 23, 30], "along": [6, 8, 18, 21], "x": [6, 8, 13, 14, 37], "axi": [6, 8, 18], "global": [6, 8], "y": [6, 8, 13, 14], "perspect": [6, 8], "call": [6, 8, 10, 13, 14, 15, 17, 20, 23, 24, 25, 26, 28, 29, 30, 31], "calcul": [6, 8, 11, 13, 14, 15, 18, 20, 21, 23, 24], "issu": [6, 8, 15, 19, 23, 30], "possibl": [6, 8, 10, 23], "element": [6, 8, 14, 29, 31], "here": [6, 8, 13, 14, 18, 20, 25, 28, 29], "mjcambrianagentpointmazeoptim": [6, 8], "target": [6, 8], "speed": [6, 8], "75": [6, 8, 21], "distance_threshold": [6, 8, 9, 11, 12], "2": [6, 8, 13, 14, 18, 23, 31, 37], "use_optimal_trajectori": [6, 8], "act": [6, 8, 33], "optim": [6, 8, 18, 21, 23, 24], "maze": [6, 8, 10], "attempt": [6, 8], "reach": [6, 8], "goal": [6, 8], "map": [6, 8, 10, 14, 15, 31], "trajectori": [6, 8], "bf": [6, 8], "optimal_trajectori": [6, 8], "mjcambrianagentpointmazerandom": [6, 8], "825": [6, 8], "mjcambrianagentpointprei": [6, 8], "predat": [6, 8], "8": [6, 8], "prei": [6, 8], "avoid": [6, 8], "distanc": [6, 8, 11, 12], "keyword": [6, 8, 11, 12, 13, 14, 18, 21, 23, 25, 27, 29, 30, 31, 33], "determin": [6, 8, 13, 14, 21, 24, 32], "queri": [6, 8], "constant": [6, 8, 33], "movement": [6, 8, 13, 14], "its": [6, 8, 10, 17, 25, 28], "fn": [9, 10, 11, 12, 18], "either": [9, 37], "termin": [9, 10, 11, 17], "truncat": [9, 10, 11], "done_nev": 9, "info": [9, 10, 11, 12, 17, 23, 32, 37], "never": [9, 10], "done_if_exceeds_max_episode_step": 9, "episod": [9, 10, 11, 23, 24], "exce": 9, "max": [9, 10, 31], "done_if_low_reward": 9, "threshold": [9, 11, 18], "low": [9, 31], "done_if_has_contact": 9, "done_if_close_to_ag": 9, "to_ag": [9, 11, 12], "for_ag": [9, 11, 12], "close": [9, 10, 11, 38], "done_combin": 9, "done_fn": 10, "reward_fn": 10, "step_fn": 10, "parallelenv": 10, "off": [10, 23], "version": [10, 23], "mujocoenv": 10, "own": [10, 25, 28], "temporari": 10, "had": 10, "copi": [10, 23, 30, 37], "aforement": 10, "major": 10, "chang": [10, 11, 33, 37], "mjcambrianenvconfig": [10, 35], "option": [10, 11, 13, 14, 15, 19, 21, 23, 24, 25, 28, 29, 30, 37, 38], "seed": [10, 23, 30, 33], "underli": [10, 13, 14, 30], "compon": 10, "date": [10, 37], "dynam": [10, 20, 35], "_step_mujoco_simul": 10, "np": [10, 11, 13, 14, 21, 25, 27, 31], "mode": [10, 17, 25, 28, 38], "correspond": [10, 21, 23, 25, 27, 28, 30], "cursor": [10, 26], "stuff": 10, "clearer": 10, "cambrian_xml": [10, 31], "mjcambrianxml": [10, 13, 14, 29], "mjcambrianrender": [10, 25, 28], "mjmodel": [10, 25, 27], "mjdata": 10, "episode_step": 10, "num_timestep": 10, "timestep": [10, 11, 21, 24], "max_episode_step": [10, 24], "cumulative_reward": 10, "cumul": [10, 21], "stashed_cumulative_reward": 10, "num_ag": 10, "part": [10, 35], "possible_ag": 10, "_all_": 10, "But": [10, 37], "nest": [10, 30, 33], "wrap": [10, 13, 14, 29, 30], "mjcambriansingleagentenvwrapp": [10, 33], "given": [10, 12, 24, 30], "set_random_se": 10, "record": [10, 31, 32, 38], "save": [10, 17, 23, 25, 28, 30, 31, 37, 38], "path": [10, 13, 14, 17, 21, 23, 29, 30, 31, 35, 37], "save_pkl": 10, "kwarg": [10, 17, 23, 29, 30, 32, 33], "scene": [10, 25, 26, 28], "mjcambrianstepfn": 10, "termination_fn": 10, "mjcambrianterminationfn": 10, "truncation_fn": 10, "mjcambriantruncationfn": 10, "mjcambrianrewardfn": 10, "frame_skip": 10, "per": [10, 23, 24, 37], "maximum": [10, 23, 24, 32], "n_eval_episod": [10, 17], "add_overlai": 10, "clear_overlays_on_reset": 10, "clear": [10, 30], "consequ": 10, "draw": 10, "drawn": 10, "top": [10, 15, 21], "other": [10, 20, 25, 26, 28, 29, 30, 35], "desir": 10, "debug_overlays_s": 10, "percentag": 10, "total": [10, 18, 24, 37], "disabl": [10, 13, 14], "mjcambrianviewerconfig": 10, "viewer": [10, 13, 14, 25, 26, 28], "unset": [10, 13, 14, 30], "amount": 10, "vram": 10, "consum": 10, "save_filenam": 10, "filenam": [10, 32], "placehold": [10, 20, 31], "extern": 10, "unless": [10, 33], "explicitli": [10, 31, 38], "mjcambrianmazeenv": 10, "mjcambrianmaz": 10, "maze_stor": 10, "mjcambrianmazestor": 10, "store": [10, 15, 17, 19, 25, 28, 30, 31, 35], "mjcambrianmazeenvconfig": [10, 35], "maze_selection_fn": 10, "mjcambrianmazeselectionfn": 10, "select": [10, 23, 30, 31], "reward_for_termin": 11, "scale_by_quick": 11, "earli": 11, "success": [11, 23], "termination_reward": 11, "els": [11, 29], "reward_for_trunc": 11, "failur": 11, "truncation_reward": 11, "euclidean_delta_from_init": 11, "factor": [11, 18, 23], "scale": [11, 23], "reward_euclidean_delta_to_ag": 11, "convent": 11, "closer": [11, 21], "reward_if_agents_respawn": 11, "respawn": [11, 12], "reward_if_close_to_ag": 11, "from_ag": [11, 12], "give": 11, "penalize_if_has_contact": 11, "penalti": 11, "penal": 11, "ground": 11, "reward_combin": 11, "exclusive_fn": 11, "As": [11, 30], "order": [11, 13, 14, 29], "calc_delta": 11, "delta": 11, "prev": 11, "check_if_larg": 11, "p1": 11, "p2": 11, "larger": 11, "calc_quick": 11, "quick": 11, "modifi": [12, 29, 32, 35], "dictionari": [12, 14, 29, 30, 31, 33], "respawn_ag": 12, "step_respawn_agents_if_close_to_ag": 12, "ob": [12, 13, 14], "arg": [12, 23, 25, 28, 29, 30, 31, 32, 33], "proxim": [12, 23], "step_add_agent_qpos_to_info": 12, "step_combin": 12, "mjcambrianey": [13, 14, 15], "fov": [13, 14, 21, 30], "fovi": [13, 14], "field": [13, 14, 27, 30, 35], "mjcf": [13, 14], "sensors": [13, 14, 18], "degre": [13, 14, 18, 27], "mutual": [13, 14], "exclus": [13, 14], "focal": [13, 14], "fovx": [13, 14], "focal_x": [13, 14], "focal_i": [13, 14], "sensor": [13, 14, 31], "width": [13, 14, 18, 25, 27, 28], "height": [13, 14, 15, 25, 27, 28], "resolut": [13, 14, 15, 18, 27, 30, 37], "coord": [13, 14], "attr": [13, 14, 31], "isn": [13, 14, 30, 37], "geometri": [13, 14, 31], "lat": [13, 14], "lon": [13, 14], "orthograph": [13, 14], "mjcambrianrendererconfig": [13, 14, 25, 28], "pad": [13, 14], "psf_filter_s": [13, 14], "disable_rend": [13, 14], "helper": [13, 14, 29, 31], "deriv": [13, 14], "intend": [13, 14, 30], "mechan": [13, 14], "parent_xml": [13, 14], "parent_body_nam": [13, 14], "replic": [13, 14], "worldbodi": [13, 14, 29], "torso": [13, 14], "kind": [13, 14], "difficult": [13, 14], "cambrianxml": [13, 14], "extract": [13, 14, 20], "rgb": [13, 14, 15], "box": [13, 14, 33], "construct": [13, 14, 29, 30], "shape": [13, 14, 23, 33], "prev_ob": [13, 14], "optic": 14, "mjcambrianmultiey": 14, "procedur": 14, "manag": [14, 30, 35], "inherit": [14, 15, 19, 20, 30, 35], "mjcambrianmultieyeconfig": 14, "collect": 14, "composit": [14, 27], "appear": [14, 27], "compound": [14, 27], "3x3": [14, 27], "grid": [14, 27, 37], "tr": [14, 27], "m": [14, 27, 37], "mr": [14, 27], "bl": [14, 27], "b": [14, 27, 30], "br": [14, 27], "red": [14, 27], "border": [14, 25, 27], "around": [14, 24, 25, 27, 28, 30, 31, 33, 38], "eye_inst": 14, "lat_rang": 14, "rang": [14, 18, 31, 35, 37], "latitudin": 14, "vertic": [14, 27], "evenli": 14, "bound": [14, 31], "sphere": [14, 31], "lon_rang": [14, 18, 37], "longitudin": 14, "horizont": [14, 18, 27], "num_ey": [14, 37], "num": [14, 31], "spheric": [14, 27], "sequenti": [14, 17], "start": [14, 17], "eye_0": 14, "eye_": 14, "_": [14, 18, 30, 31, 37], "latitud": 14, "longitud": [14, 18], "mjcambrianapproxmultiey": 14, "multi_ey": 14, "face": 14, "direct": 14, "stitch": 14, "mjcambrianapproxmultieyeconfig": 14, "mjcambrianapproxeyeconfig": 14, "approxim": [14, 15, 18], "mjcambrianopticsey": [14, 15], "depth": [14, 15, 25, 27], "invari": [14, 15], "psf": [14, 15], "mjcambrianopticsconfig": [14, 15], "overwrit": [14, 15, 17, 20, 23], "mjcambrianopticseyeconfig": [14, 15], "extend": [14, 15, 35], "pupil_resolut": [14, 15], "pupil": [14, 15], "noise_std": [14, 15], "gaussian": [14, 15], "nois": [14, 15, 23], "wavelength": [14, 15], "channel": [14, 15], "f_stop": [14, 15], "f": [14, 15], "stop": [14, 15, 31], "len": [14, 15], "refractive_index": [14, 15], "refract": [14, 15], "materi": [14, 15], "height_map": [14, 15], "phase": [14, 15, 29], "shift": [14, 15, 37], "light": [14, 15, 31], "pass": [14, 15, 17, 23, 25, 26, 28, 29, 30, 31, 35], "radial": [14, 15], "symmetr": [14, 15], "apertur": [14, 15], "mjcambrianapertureconfig": [14, 15], "circular": [14, 15], "empti": [14, 15, 21, 29], "precomput": [14, 15], "mjcambriandictconfig": [15, 19, 30], "dictconfig": [15, 19, 30], "hydra": [15, 17, 19, 29, 30, 37], "omegaconf": [15, 19, 29, 30], "to_object": [15, 19, 30], "aren": [15, 19, 30], "meant": [15, 19, 30], "valid": [15, 19, 24, 25, 28, 30, 35], "necessarili": [15, 19, 30], "mjcambriancircularapertureconfig": 15, "radiu": [15, 18, 31], "mjcambrianmaskapertureconfig": 15, "binari": [15, 31], "let": 15, "block": [15, 37], "random": [15, 23], "random_prob": 15, "being": 15, "5": [15, 17, 21], "init": [16, 30], "__author__": 16, "a2cc": 16, "media": 16, "edu": 16, "__license__": 16, "bsd3": 16, "mjcambrianplotmonitorcallback": 17, "logdir": [17, 37], "basecallback": [17, 24], "evalcallback": 17, "plot": 17, "monitor": [17, 21, 37], "csv": [17, 21], "produc": 17, "vecmonitor": 17, "callback_after_ev": 17, "directori": [17, 29, 30, 32, 35, 37], "npz": [17, 21], "expect": [17, 24], "png": 17, "mjcambrianplotevaluationscallback": 17, "mjcambrianevalcallback": 17, "eval_env": 17, "callback_on_new_best": 17, "eval_freq": 17, "10000": 17, "log_path": 17, "best_model_save_path": 17, "determinist": [17, 23], "verbos": [17, 23, 29, 30], "warn": [17, 32], "mjcambriangpuusagecallback": 17, "logfil": 17, "gpu_usag": 17, "log": [17, 23, 32, 35, 37], "gpu": [17, 23], "mjcambriansavepolicycallback": 17, "gif": 17, "mjcambrianprogressbarcallback": 17, "progressbarcallback": 17, "bar": 17, "flush": 17, "pbar": 17, "deconstruct": 17, "__del__": 17, "string": [17, 29, 30, 31], "restor": 17, "back": 17, "origin": [17, 20, 30, 33], "mjcambriancallbacklistwithsharedpar": 17, "callbacklist": 17, "chain": 17, "mjcambriansaveconfigcallback": 17, "experiment": 17, "resolv": [17, 29, 30], "on_run_start": 17, "job": [17, 35, 37], "applic": [17, 30, 35], "compos": [17, 30, 35], "runtim": [17, 35], "popul": 17, "yet": 17, "core": 17, "run_job": 17, "on_multirun_start": 17, "multirun": [17, 37], "launcher": [17, 30, 37], "sweeper": [17, 18, 24, 30, 37], "constraint": 18, "prune": [18, 24], "nevergrad_constraint_fn": 18, "parameter": 18, "nevergrad": [18, 24, 37], "constrain_total_pixel": 18, "num_eyes_to_gener": 18, "max_num_pixel": 18, "pixel": [18, 26], "certain": [18, 30, 31], "constrain_total_memory_throughput": 18, "stack_siz": 18, "max_pixels_in_memori": 18, "constrain_morphologically_feasible_ey": 18, "pixel_s": 18, "005": 18, "would": [18, 29], "morpholog": 18, "feasibl": 18, "case": [18, 20, 23, 29, 30, 37], "basic": [18, 37], "fit": [18, 21, 24], "primari": 18, "sure": 18, "overlap": 18, "circl": 18, "line": [18, 29, 35], "equal": [18, 29], "01": 18, "constrain_total_num_ey": 18, "max_num_ey": 18, "algorithm": [19, 23], "mjcambrianevoconfig": 19, "extractor": 20, "is_image_spac": 20, "check_channel": 20, "normalized_imag": 20, "regular": 20, "hxwxc": 20, "dimens": 20, "nxhxwxc": 20, "maybe_transpose_spac": 20, "3d": 20, "4d": 20, "maybe_transpose_ob": 20, "batch": 20, "5d": 20, "mjcambriancombinedextractor": 20, "image_extractor": 20, "share_image_extractor": 20, "torch_lay": 20, "basefeaturesextractor": 20, "permutedflattenextractor": 20, "flattenextractor": 20, "flatten": [20, 30, 33], "input": [20, 23, 31], "mjcambrianimagefeaturesextractor": 20, "features_dim": 20, "activ": 20, "queue": 20, "tempor": 20, "mjcambrianmlpextractor": 20, "architectur": 20, "mlp": 20, "small": 20, "naturecnn": 20, "mjcambriannaturecnnextractor": 20, "cnn": 20, "baseline3": 20, "stack": 20, "kernel": 20, "stride": 20, "restrict": 20, "36x36": 20, "bd": 20, "respons": 21, "parse_evaluations_npz": 21, "evaluations_npz": 21, "parse_monitor_csv": 21, "monitor_csv": 21, "top_n_perc": 21, "percent": 21, "use_outli": 21, "quartil": 21, "25": 21, "exclud": 21, "outlier": 21, "fitness_from_evalu": 21, "return_data": 21, "mjcambrianconfig": [21, 24, 30], "n": [21, 23], "row": 21, "repres": [21, 30], "column": 21, "neg": 21, "infin": 21, "fitness_from_monitor": 21, "3rd": 21, "fitness_from_txt": 21, "txt_file": 21, "fitness_num_ey": 21, "pattern": [21, 30, 37], "std": 21, "assume_on": [21, 30], "higher": 21, "fitness_num_eyes_and_fov": 21, "num_eyes_pattern": 21, "fov_pattern": 21, "optimal_fov": 21, "45": 21, "callback": [22, 24, 31], "constraint_fn": 22, "evo": [22, 37], "features_extractor": 22, "fitness_fn": [22, 24], "ppo": 23, "weight": 23, "rollout": 23, "predict": 23, "overwritten": [23, 33], "next": 23, "loop": [23, 24], "mjcambrianmodel": [23, 24, 31], "clip": 23, "arxiv": 23, "ab": [23, 30], "1707": 23, "06347": 23, "borrow": 23, "openai": 23, "spin": 23, "spinningup": 23, "ikostrikov": 23, "pytorch": 23, "a2c": 23, "acktr": 23, "gail": 23, "ppo2": 23, "hill": 23, "introduct": 23, "en": 23, "latest": 23, "mlppolici": 23, "cnnpolici": 23, "regist": 23, "learning_r": 23, "rate": 23, "remain": [23, 35], "n_step": 23, "buffer": 23, "n_env": [23, 24], "greater": 23, "29372": 23, "batch_siz": 23, "minibatch": 23, "n_epoch": 23, "epoch": 23, "surrog": 23, "loss": 23, "gamma": 23, "discount": 23, "gae_lambda": 23, "trade": 23, "bia": 23, "v": 23, "varianc": 23, "estim": 23, "clip_rang": 23, "clip_range_vf": 23, "import": [23, 32], "normalize_advantag": 23, "ent_coef": 23, "entropi": 23, "coeffici": 23, "vf_coef": 23, "max_grad_norm": 23, "gradient": 23, "use_sd": 23, "gsde": 23, "instead": [23, 30, 37], "sde_sample_freq": 23, "sampl": 23, "matrix": 23, "everi": 23, "begin": 23, "rollout_buffer_class": 23, "rollout_buffer_kwarg": 23, "creation": 23, "target_kl": 23, "limit": 23, "kl": 23, "diverg": 23, "enough": 23, "prevent": [23, 31], "213": 23, "cf": 23, "div": 23, "stats_window_s": 23, "window": [23, 25, 28, 38], "averag": [23, 31], "report": 23, "tensorboard_log": 23, "tensorboard": 23, "policy_kwarg": 23, "level": [23, 32], "messag": [23, 32], "devic": 23, "pseudo": 23, "cpu": [23, 37], "cuda": 23, "auto": 23, "_init_setup_model": 23, "build": [23, 29, 30], "network": 23, "save_polici": 23, "entir": [23, 35], "load_polici": 23, "four": 23, "layer": 23, "ident": 23, "present": [23, 32], "delet": [23, 30], "strict": 23, "load_state_dict": 23, "load_rollout": 23, "loader": [23, 37], "dumb": 23, "keep": [23, 30, 37], "track": [23, 35], "hidden": 23, "sugar": 23, "coat": 23, "handl": [23, 35, 37], "g": [23, 37], "recurr": 23, "episode_start": 23, "rnn": 23, "mjcambriantrainerconfig": 24, "total_timestep": 24, "vecenv": [24, 31], "prune_fn": 24, "prior": 24, "fact": 24, "invalid": 24, "wast": 24, "computation": [24, 25, 28], "inf": 24, "cheap_constraint": 24, "mjcambriantrain": 24, "consist": 24, "render_util": 25, "convert_depth_dist": [25, 27], "opengl": [25, 27, 37], "metric": [25, 27], "mj": [25, 27, 28], "deepmind": [25, 27], "blob": [25, 27], "resize_with_aspect_fil": [25, 27], "border_typ": [25, 27], "cv2": [25, 27], "border_const": [25, 27], "interp": [25, 27], "inter_nearest": [25, 27], "resiz": [25, 27, 28], "aspect": [25, 27], "ratio": [25, 27], "black": [25, 27], "interpol": [25, 27, 29, 37], "metadata": [25, 28], "offscreen": [25, 28], "rgb_arrai": [25, 28], "onscreen": [25, 28], "human": [25, 28, 30, 37, 38], "render_mod": [25, 28, 37, 38], "fullscreen": [25, 28], "mjvscene": [25, 28], "scene_opt": [25, 28], "mjvoption": [25, 28], "mjvcamera": [25, 28], "use_shared_context": [25, 28], "share": [25, 28, 37], "expens": [25, 28], "mani": [25, 28, 35], "save_mod": [25, 28], "mjcambrianrenderersavemod": [25, 28], "savemod": [25, 28], "kwd": [25, 28], "enum": [25, 28, 30], "flag": [25, 28, 30, 37], "mjcambriancursor": 26, "mjcambrianvieweroverlai": 26, "obj": [26, 31], "ones": 26, "affect": 26, "draw_before_rend": 26, "draw_after_rend": 26, "mjr_context": 26, "viewport": 26, "mjcambriantextvieweroverlai": 26, "text": 26, "mjcambrianimagevieweroverlai": 26, "mjcambriansitevieweroverlai": 26, "rgba": 26, "add_bord": 27, "border_s": 27, "white": 27, "generate_composit": 27, "max_r": 27, "project_images_to_spherical_panorama": 27, "yaw_angl": 27, "fov_x": 27, "fov_i": 27, "total_resolut": 27, "onto": 27, "surfac": 27, "panorama": 27, "angl": 27, "mjcambrianview": 28, "abc": 28, "mjcambrianoffscreenview": 28, "mjcambrianonscreenview": 28, "manipul": 29, "programmat": [29, 35], "mjspec": 29, "sinc": [29, 30, 37], "typealia": 29, "mjcambriancontainerconfig": [29, 30], "complain": [29, 37], "built": [29, 30, 31, 38], "parent_key1": 29, "child_key1": 29, "attr1": 29, "val1": 29, "attr2": 29, "val2": 29, "child_key2": 29, "child_key3": 29, "look": [29, 37], "represent": [29, 30], "complex": [29, 35], "parser": [29, 30], "base_xml_path": 29, "write": [29, 32, 37], "pretti": 29, "make_empti": 29, "from_str": 29, "xml_string": 29, "from_config": 29, "parent_kei": 29, "child_kei": 29, "attribute_kei": 29, "attribute_valu": 29, "subchild_kei": 29, "subsubchild_kei": 29, "though": 29, "xmlconfig": 29, "recurs": [29, 31], "tree": [29, 31], "et": 29, "subel": 29, "remov": 29, "_all": 29, "thei": [29, 37], "filter": [29, 32], "iterfind": 29, "predic": 29, "etre": 29, "elementtre": 29, "xpath": 29, "syntax": [29, 31, 35, 37], "found": 29, "findal": 29, "alia": 29, "get_path": 29, "unfortun": 29, "iter": [29, 30, 37], "root": 29, "_not_": 29, "prefer": 29, "oper": [29, 30, 31], "taken": 29, "stackoverflow": 29, "29896847": 29, "20125256": 29, "base_dir": 29, "pathlib": 29, "to_str": 29, "print": [29, 35], "toprettyxml": 29, "newlin": [29, 32], "convert_xml_to_yaml": 29, "listconfig": 30, "intern": [30, 31], "immut": 30, "program": 30, "_config": 30, "_content": 30, "uninstanti": 30, "strictli": 30, "export": 30, "readabl": 30, "format": [30, 31, 32], "classmethod": 30, "as_contain": 30, "throw_on_miss": 30, "is_struct": 30, "is_readonli": 30, "miss": 30, "rais": [30, 31], "instantiate_her": 30, "config_dir": 30, "config_nam": 30, "return_hydra_config": 30, "instantiate_kwarg": 30, "load_pickl": 30, "pickl": [30, 31, 37], "merge_with": 30, "merg": 30, "merge_with_dotlist": 30, "dotlist": 30, "set_struct": 30, "struct": 30, "set_readonli": 30, "readonli": 30, "set_struct_temporarili": 30, "temporarili": [30, 31], "set_readonly_temporarili": 30, "use_instanti": 30, "get_typ": 30, "get_typenam": 30, "isinst": 30, "type_": 30, "to_contain": 30, "to_yaml": 30, "header": 30, "hydra_config": 30, "glob": 30, "wildcard": 30, "subsequ": 30, "match": [30, 37], "slow": [30, 37], "sparingli": 30, "c": [30, 35], "d": 30, "leaf": 30, "globbed_ev": 30, "src": [30, 31], "item": 30, "mjcambriancontainrconfig": 30, "__contains__": 30, "__getattr__": 30, "__getitem__": 30, "__setattr__": 30, "__setitem__": 30, "__delattr__": 30, "__delitem__": 30, "__iter__": 30, "__len__": 30, "__getstate__": 30, "guarante": 30, "__setstate__": 30, "mjcambrianflagwrappermeta": 30, "enummeta": 30, "metaclass": 30, "put": [30, 35], "flag1": 30, "flag2": 30, "thereof": 30, "flag3": 30, "member": 30, "build_pattern": 30, "regex": 30, "dot": [30, 35], "training_config": 30, "env_config": 30, "agent_config": 30, "eye_config": 30, "config_wrapp": [30, 35], "cl": 30, "dataclass": [30, 35], "decor": [30, 35], "preprocess": 30, "subset": 30, "_sanitized_typ": 30, "hydra_zen": 30, "kw": 30, "repr": 30, "eq": [30, 37], "slot": 30, "kw_onli": 30, "instance_flag_wrapp": 30, "flag_typ": 30, "eval_flag": 30, "oppos": 30, "instance_wrapp": 30, "particularli": 30, "conjunct": 30, "super": 30, "ugli": 30, "obj_to_instanti": 30, "_target_": 30, "path_to": 30, "value1": 30, "value2": 30, "value3": 30, "partial": 30, "eval": [30, 37], "slice": 30, "safe": [30, 31, 35], "caution": 30, "constructor": 30, "postpon": 30, "until": [30, 37], "setattr": 30, "_args_": 30, "arg1": 30, "arg2": 30, "init_arg1": 30, "init_arg2": 30, "set_arg1": 30, "set_arg2": 30, "At": 30, "under": [30, 35, 38], "hood": 30, "partial_obj_to_instanti": 30, "_partial_": 30, "init_arg3": 30, "unknown": 30, "later": 30, "run_hydra": 30, "main_fn": 30, "lambda": [30, 31], "__": 30, "argpars": 30, "argumentpars": 30, "config_path": 30, "cwd": 30, "benefit": 30, "avail": 30, "sweep": 30, "def": [30, 31], "add_argu": 30, "absolut": 30, "logger": 31, "evaluate_polici": 31, "num_run": 31, "record_kwarg": 31, "step_callback": 31, "done_callback": 31, "save_data": 31, "outdir": 31, "pickle_fil": 31, "try_load_pickl": 31, "generate_sequence_from_rang": 31, "endpoint": 31, "sequenc": 31, "linspac": 31, "setattrs_temporari": 31, "make_odd": 31, "odd": 31, "even": 31, "cast": 31, "safe_index": 31, "arr": 31, "get_body_id": 31, "id": 31, "get_body_nam": 31, "bodyadr": 31, "get_geom_id": 31, "get_geom_nam": 31, "geomadr": 31, "get_site_id": 31, "site_nam": 31, "get_site_nam": 31, "siteadr": 31, "get_joint_id": 31, "joint_nam": 31, "get_joint_nam": 31, "jointadr": 31, "get_camera_id": 31, "camera_nam": 31, "get_camera_nam": 31, "cameraadr": 31, "get_light_id": 31, "light_nam": 31, "get_light_nam": 31, "lightadr": 31, "get_sensor_id": 31, "sensor_nam": 31, "get_sensor_nam": 31, "sensoradr": 31, "mjcambrianactu": 31, "actuator_": 31, "trnadr": 31, "transmiss": 31, "lower": 31, "high": 31, "upper": 31, "mjcambrianjoint": 31, "jnt_": 31, "qposadr": 31, "numqpo": 31, "qveladr": 31, "qvel": 31, "numqvel": 31, "jntadr": 31, "geom_": 31, "rbound": 31, "rel": 31, "agent_select": 31, "format_string_with_obj_attribut": 31, "replac": [31, 33, 37], "fetch": 31, "custompythonclass": 31, "literal_eval_with_cal": 31, "node_or_str": 31, "safe_cal": 31, "safe_method": 31, "_env": 31, "express": 31, "node": [31, 37], "liter": 31, "unari": 31, "arbitrari": 31, "ast": 31, "permit": 31, "union": 31, "method_nam": 31, "manual": 31, "valueerror": 31, "unsupport": 31, "malform": 31, "tri": 31, "sqrt": 31, "math": 31, "safe_ev": 31, "additional_var": 31, "manner": 31, "unauthor": 31, "16": 31, "get_logg": 32, "fatal": 32, "mjcambrianfilehandl": 32, "filehandl": 32, "handler": 32, "mjcambriantqdmstreamhandl": 32, "stream": 32, "streamhandl": 32, "tqdm": 32, "emit": 32, "formatt": 32, "trail": 32, "except": 32, "traceback": 32, "print_except": 32, "append": 32, "encod": 32, "mjcambrianloggermaxlevelfilt": 32, "max_level": 32, "deem": 32, "appropri": 32, "agent_nam": 33, "mjcambrianpettingzooenvwrapp": 33, "continu": 33, "constant_act": 33, "make_wrapped_env": 33, "simplifi": 35, "especi": 35, "scenario": 35, "streamlin": 35, "hierarch": 35, "plugin": 35, "rich": 35, "ecosystem": 35, "launch": [35, 37], "platform": 35, "organ": 35, "via": [35, 37], "configstor": 35, "thu": 35, "redund": 35, "maze_env": 35, "tell": 35, "anyth": 35, "throughout": 35, "definit": 35, "out": [35, 37, 38], "p": 35, "checkout": 35, "section": 36, "subpag": 36, "hyperparamet": 37, "entrypoint": 37, "invok": 37, "mujoco_gl": [37, 38], "egl": 37, "caus": 37, "headless": 37, "significantli": 37, "faster": 37, "video": 37, "h": 37, "supercloud": 37, "openmind": 37, "euler": 37, "coupl": 37, "slurm": 37, "daemon": 37, "complet": 37, "bin": 37, "sbatch": 37, "ntask": 37, "00": 37, "r": [37, 38], "j_": 37, "err": 37, "echo": 37, "cmd": 37, "tee": 37, "stderr": 37, "submit": 37, "partit": 37, "qo": 37, "aw": 37, "futur": 37, "best_model": 37, "zip": 37, "loaded_model": 37, "expdir": 37, "dai": 37, "ve": 37, "min": 37, "num_work": 37, "array_parallel": 37, "evolution_nevergrad": 37, "aid": 37, "And": 37, "few": [37, 38], "those": 37, "mutat": 37, "re": 37, "altern": 37, "group": 37, "numeyes1_res0_lon1": 37, "rerun": 37, "your": 37, "load_if_exist": 37, "mind": 37, "pkl": 37, "old": 37, "expnam": 37, "correct": 37, "sweep_param": 37, "simplest": 37, "param": 37, "comma": 37, "param1": 37, "param2": 37, "six": 37, "permut": 37, "prefix": 37, "differenti": 37, "advanc": 37, "runner": 38, "world": 38, "bird": 38, "pan": 38, "mous": 38, "run_render": 38, "glfw": 38, "properli": 38, "optional_total_timestep": 38, "scroll": 38, "run_mj_view": 38, "switch": 38, "paus": 38, "exit": 38, "hover": 38, "left": 38, "side": 38, "right": 38, "click": 38, "show": 38, "q": 38, "frustum": 38}, "objects": {"": [[16, 0, 0, "-", "cambrian"]], "cambrian": [[16, 1, 1, "", "__author__"], [16, 1, 1, "", "__license__"], [6, 0, 0, "-", "agents"], [10, 0, 0, "-", "envs"], [14, 0, 0, "-", "eyes"], [22, 0, 0, "-", "ml"], [25, 0, 0, "-", "renderer"], [31, 0, 0, "-", "utils"]], "cambrian.agents": [[6, 2, 1, "", "MjCambrianAgent"], [6, 2, 1, "", "MjCambrianAgent2D"], [6, 2, 1, "", "MjCambrianAgentConfig"], [6, 2, 1, "", "MjCambrianAgentObject"], [6, 2, 1, "", "MjCambrianAgentPoint"], [6, 2, 1, "", "MjCambrianAgentPointMazeOptimal"], [6, 2, 1, "", "MjCambrianAgentPointMazeRandom"], [6, 2, 1, "", "MjCambrianAgentPointPrey"], [5, 0, 0, "-", "agent"], [7, 0, 0, "-", "object"], [8, 0, 0, "-", "point"]], "cambrian.agents.MjCambrianAgent": [[6, 3, 1, "", "action_space"], [6, 4, 1, "", "apply_action"], [6, 4, 1, "", "generate_xml"], [6, 3, 1, "", "geom"], [6, 4, 1, "", "get_action_privileged"], [6, 3, 1, "", "has_contacts"], [6, 3, 1, "", "init_pos"], [6, 3, 1, "", "init_quat"], [6, 3, 1, "", "last_action"], [6, 3, 1, "", "observation_space"], [6, 4, 1, "", "perturb_init_pose"], [6, 3, 1, "", "pos"], [6, 3, 1, "", "qpos"], [6, 3, 1, "", "quat"], [6, 4, 1, "", "render"], [6, 4, 1, "", "reset"], [6, 4, 1, "", "step"], [6, 3, 1, "", "trainable"]], "cambrian.agents.MjCambrianAgentObject": [[6, 4, 1, "", "get_action_privileged"]], "cambrian.agents.MjCambrianAgentPoint": [[6, 3, 1, "", "action_space"], [6, 4, 1, "", "apply_action"]], "cambrian.agents.MjCambrianAgentPointMazeOptimal": [[6, 4, 1, "", "get_action_privileged"], [6, 4, 1, "", "reset"]], "cambrian.agents.MjCambrianAgentPointMazeRandom": [[6, 4, 1, "", "get_action_privileged"], [6, 4, 1, "", "reset"]], "cambrian.agents.MjCambrianAgentPointPrey": [[6, 4, 1, "", "get_action_privileged"]], "cambrian.agents.agent": [[5, 2, 1, "", "MjCambrianAgent"], [5, 2, 1, "", "MjCambrianAgent2D"], [5, 2, 1, "", "MjCambrianAgentConfig"]], "cambrian.agents.agent.MjCambrianAgent": [[5, 3, 1, "", "action_space"], [5, 4, 1, "", "apply_action"], [5, 4, 1, "", "generate_xml"], [5, 3, 1, "", "geom"], [5, 4, 1, "", "get_action_privileged"], [5, 3, 1, "", "has_contacts"], [5, 3, 1, "", "init_pos"], [5, 3, 1, "", "init_quat"], [5, 3, 1, "", "last_action"], [5, 3, 1, "", "observation_space"], [5, 4, 1, "", "perturb_init_pose"], [5, 3, 1, "", "pos"], [5, 3, 1, "", "qpos"], [5, 3, 1, "", "quat"], [5, 4, 1, "", "render"], [5, 4, 1, "", "reset"], [5, 4, 1, "", "step"], [5, 3, 1, "", "trainable"]], "cambrian.agents.object": [[7, 2, 1, "", "MjCambrianAgentObject"]], "cambrian.agents.object.MjCambrianAgentObject": [[7, 4, 1, "", "get_action_privileged"]], "cambrian.agents.point": [[8, 2, 1, "", "MjCambrianAgentPoint"], [8, 2, 1, "", "MjCambrianAgentPointMazeOptimal"], [8, 2, 1, "", "MjCambrianAgentPointMazeRandom"], [8, 2, 1, "", "MjCambrianAgentPointPrey"]], "cambrian.agents.point.MjCambrianAgentPoint": [[8, 3, 1, "", "action_space"], [8, 4, 1, "", "apply_action"]], "cambrian.agents.point.MjCambrianAgentPointMazeOptimal": [[8, 4, 1, "", "get_action_privileged"], [8, 4, 1, "", "reset"]], "cambrian.agents.point.MjCambrianAgentPointMazeRandom": [[8, 4, 1, "", "get_action_privileged"], [8, 4, 1, "", "reset"]], "cambrian.agents.point.MjCambrianAgentPointPrey": [[8, 4, 1, "", "get_action_privileged"]], "cambrian.envs": [[10, 2, 1, "", "MjCambrianEnv"], [10, 2, 1, "", "MjCambrianEnvConfig"], [10, 2, 1, "", "MjCambrianMazeEnv"], [10, 2, 1, "", "MjCambrianMazeEnvConfig"], [9, 0, 0, "-", "done_fns"], [11, 0, 0, "-", "reward_fns"], [12, 0, 0, "-", "step_fns"]], "cambrian.envs.MjCambrianEnv": [[10, 4, 1, "", "action_space"], [10, 3, 1, "", "action_spaces"], [10, 3, 1, "", "agents"], [10, 4, 1, "", "close"], [10, 3, 1, "", "cumulative_reward"], [10, 3, 1, "", "data"], [10, 3, 1, "", "episode_step"], [10, 4, 1, "", "generate_xml"], [10, 3, 1, "", "max_episode_steps"], [10, 3, 1, "", "model"], [10, 3, 1, "", "name"], [10, 3, 1, "", "num_agents"], [10, 3, 1, "", "num_timesteps"], [10, 4, 1, "", "observation_space"], [10, 3, 1, "", "observation_spaces"], [10, 3, 1, "", "overlays"], [10, 3, 1, "", "possible_agents"], [10, 3, 1, "", "record"], [10, 4, 1, "", "render"], [10, 3, 1, "", "renderer"], [10, 4, 1, "", "reset"], [10, 4, 1, "", "save"], [10, 4, 1, "", "set_random_seed"], [10, 3, 1, "", "stashed_cumulative_reward"], [10, 4, 1, "", "state"], [10, 4, 1, "", "step"], [10, 3, 1, "", "xml"]], "cambrian.envs.MjCambrianMazeEnv": [[10, 4, 1, "", "generate_xml"], [10, 3, 1, "", "maze"], [10, 3, 1, "", "maze_store"], [10, 4, 1, "", "reset"]], "cambrian.envs.done_fns": [[9, 5, 1, "", "done_combined"], [9, 5, 1, "", "done_if_close_to_agents"], [9, 5, 1, "", "done_if_exceeds_max_episode_steps"], [9, 5, 1, "", "done_if_has_contacts"], [9, 5, 1, "", "done_if_low_reward"], [9, 5, 1, "", "done_never"]], "cambrian.envs.reward_fns": [[11, 5, 1, "", "calc_delta"], [11, 5, 1, "", "calc_quickness"], [11, 5, 1, "", "check_if_larger"], [11, 5, 1, "", "euclidean_delta_from_init"], [11, 5, 1, "", "penalize_if_has_contacts"], [11, 5, 1, "", "reward_combined"], [11, 5, 1, "", "reward_euclidean_delta_to_agents"], [11, 5, 1, "", "reward_for_termination"], [11, 5, 1, "", "reward_for_truncation"], [11, 5, 1, "", "reward_if_agents_respawned"], [11, 5, 1, "", "reward_if_close_to_agents"]], "cambrian.envs.step_fns": [[12, 5, 1, "", "respawn_agent"], [12, 5, 1, "", "step_add_agent_qpos_to_info"], [12, 5, 1, "", "step_combined"], [12, 5, 1, "", "step_respawn_agents_if_close_to_agents"]], "cambrian.eyes": [[14, 2, 1, "", "MjCambrianApproxMultiEye"], [14, 2, 1, "", "MjCambrianApproxMultiEyeConfig"], [14, 2, 1, "", "MjCambrianEye"], [14, 2, 1, "", "MjCambrianEyeConfig"], [14, 2, 1, "", "MjCambrianMultiEye"], [14, 2, 1, "", "MjCambrianMultiEyeConfig"], [14, 2, 1, "", "MjCambrianOpticsEye"], [14, 2, 1, "", "MjCambrianOpticsEyeConfig"], [13, 0, 0, "-", "eye"], [15, 0, 0, "-", "optics"]], "cambrian.eyes.MjCambrianApproxMultiEye": [[14, 4, 1, "", "generate_xml"], [14, 4, 1, "", "reset"], [14, 4, 1, "", "step"]], "cambrian.eyes.MjCambrianEye": [[14, 3, 1, "", "config"], [14, 4, 1, "", "generate_xml"], [14, 3, 1, "", "name"], [14, 3, 1, "", "observation_space"], [14, 3, 1, "", "prev_obs"], [14, 4, 1, "", "render"], [14, 4, 1, "", "reset"], [14, 4, 1, "", "step"]], "cambrian.eyes.MjCambrianMultiEye": [[14, 3, 1, "", "eyes"], [14, 4, 1, "", "generate_xml"], [14, 3, 1, "", "name"], [14, 3, 1, "", "observation_space"], [14, 3, 1, "", "prev_obs"], [14, 4, 1, "", "render"], [14, 4, 1, "", "reset"], [14, 4, 1, "", "step"]], "cambrian.eyes.MjCambrianOpticsEye": [[14, 4, 1, "", "step"]], "cambrian.eyes.eye": [[13, 2, 1, "", "MjCambrianEye"], [13, 2, 1, "", "MjCambrianEyeConfig"]], "cambrian.eyes.eye.MjCambrianEye": [[13, 3, 1, "", "config"], [13, 4, 1, "", "generate_xml"], [13, 3, 1, "", "name"], [13, 3, 1, "", "observation_space"], [13, 3, 1, "", "prev_obs"], [13, 4, 1, "", "render"], [13, 4, 1, "", "reset"], [13, 4, 1, "", "step"]], "cambrian.eyes.optics": [[15, 2, 1, "", "MjCambrianApertureConfig"], [15, 2, 1, "", "MjCambrianCircularApertureConfig"], [15, 2, 1, "", "MjCambrianMaskApertureConfig"], [15, 2, 1, "", "MjCambrianOpticsEye"], [15, 2, 1, "", "MjCambrianOpticsEyeConfig"]], "cambrian.eyes.optics.MjCambrianOpticsEye": [[15, 4, 1, "", "step"]], "cambrian.ml": [[17, 0, 0, "-", "callbacks"], [18, 0, 0, "-", "constraint_fns"], [19, 0, 0, "-", "evo"], [20, 0, 0, "-", "features_extractors"], [21, 0, 0, "-", "fitness_fns"], [23, 0, 0, "-", "model"], [24, 0, 0, "-", "trainer"]], "cambrian.ml.callbacks": [[17, 2, 1, "", "MjCambrianCallbackListWithSharedParent"], [17, 2, 1, "", "MjCambrianEvalCallback"], [17, 2, 1, "", "MjCambrianGPUUsageCallback"], [17, 2, 1, "", "MjCambrianPlotEvaluationsCallback"], [17, 2, 1, "", "MjCambrianPlotMonitorCallback"], [17, 2, 1, "", "MjCambrianProgressBarCallback"], [17, 2, 1, "", "MjCambrianSaveConfigCallback"], [17, 2, 1, "", "MjCambrianSavePolicyCallback"]], "cambrian.ml.callbacks.MjCambrianProgressBarCallback": [[17, 4, 1, "", "__del__"]], "cambrian.ml.callbacks.MjCambrianSaveConfigCallback": [[17, 4, 1, "", "on_multirun_start"], [17, 4, 1, "", "on_run_start"]], "cambrian.ml.constraint_fns": [[18, 5, 1, "", "constrain_morphologically_feasible_eyes"], [18, 5, 1, "", "constrain_total_memory_throughput"], [18, 5, 1, "", "constrain_total_num_eyes"], [18, 5, 1, "", "constrain_total_pixels"], [18, 5, 1, "", "nevergrad_constraint_fn"]], "cambrian.ml.evo": [[19, 2, 1, "", "MjCambrianEvoConfig"]], "cambrian.ml.features_extractors": [[20, 2, 1, "", "MjCambrianCombinedExtractor"], [20, 2, 1, "", "MjCambrianImageFeaturesExtractor"], [20, 2, 1, "", "MjCambrianMLPExtractor"], [20, 2, 1, "", "MjCambrianNatureCNNExtractor"], [20, 2, 1, "", "PermutedFlattenExtractor"], [20, 5, 1, "", "is_image_space"], [20, 5, 1, "", "maybe_transpose_obs"], [20, 5, 1, "", "maybe_transpose_space"]], "cambrian.ml.fitness_fns": [[21, 5, 1, "", "fitness_from_evaluations"], [21, 5, 1, "", "fitness_from_monitor"], [21, 5, 1, "", "fitness_from_txt"], [21, 5, 1, "", "fitness_num_eyes"], [21, 5, 1, "", "fitness_num_eyes_and_fov"], [21, 5, 1, "", "parse_evaluations_npz"], [21, 5, 1, "", "parse_monitor_csv"], [21, 5, 1, "", "top_n_percent"]], "cambrian.ml.model": [[23, 2, 1, "", "MjCambrianModel"]], "cambrian.ml.model.MjCambrianModel": [[23, 4, 1, "", "load_policy"], [23, 4, 1, "", "load_rollout"], [23, 4, 1, "", "predict"], [23, 4, 1, "", "save_policy"]], "cambrian.ml.trainer": [[24, 2, 1, "", "MjCambrianTrainer"], [24, 2, 1, "", "MjCambrianTrainerConfig"]], "cambrian.ml.trainer.MjCambrianTrainer": [[24, 4, 1, "", "test"], [24, 4, 1, "", "train"]], "cambrian.renderer": [[25, 2, 1, "", "MjCambrianRenderer"], [25, 2, 1, "", "MjCambrianRendererConfig"], [25, 2, 1, "", "MjCambrianRendererSaveMode"], [25, 5, 1, "", "convert_depth_distances"], [26, 0, 0, "-", "overlays"], [27, 0, 0, "-", "render_utils"], [28, 0, 0, "-", "renderer"], [25, 5, 1, "", "resize_with_aspect_fill"]], "cambrian.renderer.overlays": [[26, 2, 1, "", "MjCambrianCursor"], [26, 2, 1, "", "MjCambrianImageViewerOverlay"], [26, 2, 1, "", "MjCambrianSiteViewerOverlay"], [26, 2, 1, "", "MjCambrianTextViewerOverlay"], [26, 2, 1, "", "MjCambrianViewerOverlay"]], "cambrian.renderer.overlays.MjCambrianImageViewerOverlay": [[26, 4, 1, "", "draw_after_render"]], "cambrian.renderer.overlays.MjCambrianSiteViewerOverlay": [[26, 4, 1, "", "draw_before_render"]], "cambrian.renderer.overlays.MjCambrianTextViewerOverlay": [[26, 4, 1, "", "draw_after_render"]], "cambrian.renderer.overlays.MjCambrianViewerOverlay": [[26, 4, 1, "", "draw_after_render"], [26, 4, 1, "", "draw_before_render"]], "cambrian.renderer.render_utils": [[27, 5, 1, "", "add_border"], [27, 5, 1, "", "convert_depth_distances"], [27, 5, 1, "", "generate_composite"], [27, 5, 1, "", "project_images_to_spherical_panorama"], [27, 5, 1, "", "resize_with_aspect_fill"]], "cambrian.renderer.renderer": [[28, 2, 1, "", "MjCambrianOffscreenViewer"], [28, 2, 1, "", "MjCambrianOnscreenViewer"], [28, 2, 1, "", "MjCambrianRenderer"], [28, 2, 1, "", "MjCambrianRendererConfig"], [28, 2, 1, "", "MjCambrianRendererSaveMode"], [28, 2, 1, "", "MjCambrianViewer"]], "cambrian.utils": [[31, 2, 1, "", "MjCambrianActuator"], [31, 2, 1, "", "MjCambrianGeometry"], [31, 2, 1, "", "MjCambrianJoint"], [31, 5, 1, "", "agent_selected"], [29, 0, 0, "-", "cambrian_xml"], [30, 0, 0, "-", "config"], [31, 5, 1, "", "evaluate_policy"], [31, 5, 1, "", "format_string_with_obj_attributes"], [31, 5, 1, "", "generate_sequence_from_range"], [31, 5, 1, "", "get_body_id"], [31, 5, 1, "", "get_body_name"], [31, 5, 1, "", "get_camera_id"], [31, 5, 1, "", "get_camera_name"], [31, 5, 1, "", "get_geom_id"], [31, 5, 1, "", "get_geom_name"], [31, 5, 1, "", "get_joint_id"], [31, 5, 1, "", "get_joint_name"], [31, 5, 1, "", "get_light_id"], [31, 5, 1, "", "get_light_name"], [31, 5, 1, "", "get_sensor_id"], [31, 5, 1, "", "get_sensor_name"], [31, 5, 1, "", "get_site_id"], [31, 5, 1, "", "get_site_name"], [31, 5, 1, "", "literal_eval_with_callables"], [32, 0, 0, "-", "logger"], [31, 5, 1, "", "make_odd"], [31, 5, 1, "", "safe_eval"], [31, 5, 1, "", "safe_index"], [31, 5, 1, "", "save_data"], [31, 5, 1, "", "setattrs_temporary"], [31, 5, 1, "", "try_load_pickle"], [33, 0, 0, "-", "wrappers"]], "cambrian.utils.MjCambrianJoint": [[31, 4, 1, "", "create"], [31, 3, 1, "", "qposadrs"], [31, 3, 1, "", "qveladrs"]], "cambrian.utils.cambrian_xml": [[29, 2, 1, "", "MjCambrianXML"], [29, 1, 1, "", "MjCambrianXMLConfig"], [29, 5, 1, "", "convert_xml_to_yaml"]], "cambrian.utils.cambrian_xml.MjCambrianXML": [[29, 4, 1, "", "add"], [29, 3, 1, "", "base_dir"], [29, 4, 1, "", "combine"], [29, 4, 1, "", "find"], [29, 4, 1, "", "findall"], [29, 4, 1, "", "from_config"], [29, 4, 1, "", "from_string"], [29, 4, 1, "", "get_path"], [29, 4, 1, "", "load"], [29, 4, 1, "", "make_empty"], [29, 4, 1, "", "parse"], [29, 4, 1, "", "remove"], [29, 3, 1, "", "root"], [29, 4, 1, "", "to_string"], [29, 4, 1, "", "write"]], "cambrian.utils.config": [[30, 2, 1, "", "MjCambrianBaseConfig"], [30, 2, 1, "", "MjCambrianContainerConfig"], [30, 2, 1, "", "MjCambrianFlagWrapperMeta"], [30, 5, 1, "", "build_pattern"], [30, 5, 1, "", "config_wrapper"], [30, 5, 1, "", "instance_flag_wrapper"], [30, 5, 1, "", "instance_wrapper"], [30, 5, 1, "", "run_hydra"]], "cambrian.utils.config.MjCambrianContainerConfig": [[30, 4, 1, "", "__contains__"], [30, 4, 1, "", "__delattr__"], [30, 4, 1, "", "__delitem__"], [30, 4, 1, "", "__getattr__"], [30, 4, 1, "", "__getitem__"], [30, 4, 1, "", "__getstate__"], [30, 4, 1, "", "__iter__"], [30, 4, 1, "", "__len__"], [30, 4, 1, "", "__setattr__"], [30, 4, 1, "", "__setitem__"], [30, 4, 1, "", "__setstate__"], [30, 4, 1, "", "clear"], [30, 4, 1, "", "compose"], [30, 3, 1, "", "content"], [30, 4, 1, "", "copy"], [30, 4, 1, "", "create"], [30, 4, 1, "", "get_type"], [30, 4, 1, "", "get_typename"], [30, 4, 1, "", "glob"], [30, 4, 1, "", "globbed_eval"], [30, 4, 1, "", "instantiate"], [30, 4, 1, "", "instantiate_here"], [30, 4, 1, "", "isinstance"], [30, 4, 1, "", "items"], [30, 4, 1, "", "keys"], [30, 4, 1, "", "load"], [30, 4, 1, "", "load_pickle"], [30, 4, 1, "", "merge_with"], [30, 4, 1, "", "merge_with_dotlist"], [30, 4, 1, "", "pickle"], [30, 4, 1, "", "resolve"], [30, 4, 1, "", "save"], [30, 4, 1, "", "select"], [30, 4, 1, "", "set_readonly"], [30, 4, 1, "", "set_readonly_temporarily"], [30, 4, 1, "", "set_struct"], [30, 4, 1, "", "set_struct_temporarily"], [30, 4, 1, "", "to_container"], [30, 4, 1, "", "to_yaml"], [30, 4, 1, "", "update"], [30, 4, 1, "", "values"]], "cambrian.utils.config.MjCambrianFlagWrapperMeta": [[30, 4, 1, "", "__getitem__"]], "cambrian.utils.logger": [[32, 2, 1, "", "MjCambrianFileHandler"], [32, 2, 1, "", "MjCambrianLoggerMaxLevelFilter"], [32, 2, 1, "", "MjCambrianTqdmStreamHandler"]], "cambrian.utils.logger.MjCambrianLoggerMaxLevelFilter": [[32, 4, 1, "", "filter"]], "cambrian.utils.logger.MjCambrianTqdmStreamHandler": [[32, 4, 1, "", "emit"]], "cambrian.utils.wrappers": [[33, 2, 1, "", "MjCambrianConstantActionWrapper"], [33, 2, 1, "", "MjCambrianPettingZooEnvWrapper"], [33, 2, 1, "", "MjCambrianSingleAgentEnvWrapper"], [33, 5, 1, "", "make_wrapped_env"]], "cambrian.utils.wrappers.MjCambrianConstantActionWrapper": [[33, 4, 1, "", "step"]], "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper": [[33, 3, 1, "", "action_space"], [33, 3, 1, "", "observation_space"], [33, 4, 1, "", "reset"], [33, 4, 1, "", "step"]], "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper": [[33, 6, 1, "", "action_space"], [33, 6, 1, "", "observation_space"], [33, 4, 1, "", "reset"], [33, 4, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"contribut": 0, "setup": 0, "clone": 0, "repo": 0, "instal": [0, 4], "symbol": 0, "link": 0, "version": 0, "test": 0, "deploi": 0, "your": 0, "chang": 0, "guidelin": 0, "file": 0, "structur": 0, "edit": 0, "sourc": 0, "code": 0, "comment": 0, "document": 0, "build": 0, "detect": 1, "task": [1, 3], "exampl": [2, 3], "implement": 3, "multi": 3, "agent": [3, 5, 6, 7, 8, 37], "overview": 3, "train": [3, 37], "artifici": 4, "cambrian": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "intellig": 4, "aci": 4, "usag": [4, 35, 36], "citat": 4, "class": [5, 6, 7, 8, 10, 13, 14, 15, 17, 19, 20, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33], "modul": [5, 7, 8, 9, 11, 12, 13, 15, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 32, 33], "content": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "submodul": [6, 10, 14, 16, 22, 25, 31, 34], "packag": [6, 10, 14, 16, 25, 30, 31], "todo": [6, 8, 10, 26, 30, 37], "object": 7, "point": 8, "env": [9, 10, 11, 12, 38], "done_fn": 9, "function": [9, 11, 12, 18, 20, 21, 25, 27, 29, 30, 31, 33], "reward_fn": 11, "step_fn": 12, "ey": [13, 14, 15], "optic": 15, "attribut": [16, 29], "ml": [17, 18, 19, 20, 21, 22, 23, 24], "callback": 17, "constraint_fn": 18, "evo": 19, "features_extractor": 20, "fitness_fn": 21, "model": 23, "trainer": 24, "render": [25, 26, 27, 28], "overlai": 26, "render_util": 27, "util": [29, 30, 31, 32, 33, 34], "cambrian_xml": 29, "config": [30, 35], "logger": 32, "wrapper": 33, "api": 34, "refer": 34, "core": 34, "configur": 35, "an": [35, 37], "experi": 35, "hydra": 35, "featur": 35, "schema": 35, "composit": 35, "introspect": 35, "overrid": 35, "run": 37, "singl": 37, "loop": 37, "cluster": 37, "continu": 37, "from": 37, "checkpoint": 37, "evolut": 37, "ad": 37, "paramet": 37, "optim": 37, "resum": 37, "fail": 37, "sweep": 37, "visual": 38, "displai": 38, "method": 38, "interact": 38, "non": 38, "headless": 38, "viewer": 38, "shortcut": 38, "custom": 38, "mujoco": 38}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Contributing": [[0, "contributing"]], "Setup": [[0, "setup"]], "Cloning the Repo": [[0, "cloning-the-repo"]], "Installing a Symbolic Linked Version for Testing": [[0, "installing-a-symbolic-linked-version-for-testing"]], "Deploy your Changes": [[0, "deploy-your-changes"]], "Versioning": [[0, "versioning"]], "Guidelines": [[0, "guidelines"]], "File Structure": [[0, "file-structure"]], "Editing the Source Code": [[0, "editing-the-source-code"]], "Commenting": [[0, "commenting"]], "Editing the Documentation": [[0, "editing-the-documentation"]], "Building the Documentation": [[0, "building-the-documentation"]], "Detection Task": [[1, "detection-task"]], "Examples": [[2, "examples"]], "Implementing a Multi-Agent Task": [[3, "implementing-a-multi-agent-task"]], "Overview": [[3, "overview"]], "Training": [[3, "training"]], "Example": [[3, "example"]], "Artificial Cambrian Intelligence (ACI)": [[4, "artificial-cambrian-intelligence-aci"]], "Installation": [[4, "installation"]], "Usage": [[4, "usage"], [35, "usage"], [36, "usage"]], "Citation": [[4, "citation"]], "cambrian.agents.agent": [[5, "module-cambrian.agents.agent"]], "Classes": [[5, "classes"], [6, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [13, "classes"], [14, "classes"], [15, "classes"], [17, "classes"], [19, "classes"], [20, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"]], "Module Contents": [[5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [15, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [23, "module-contents"], [24, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [32, "module-contents"], [33, "module-contents"]], "cambrian.agents": [[6, "module-cambrian.agents"]], "Submodules": [[6, "submodules"], [10, "submodules"], [14, "submodules"], [16, "submodules"], [22, "submodules"], [25, "submodules"], [31, "submodules"]], "Package Contents": [[6, "package-contents"], [10, "package-contents"], [14, "package-contents"], [16, "package-contents"], [25, "package-contents"], [30, "package-contents"], [31, "package-contents"]], "Todo": [[6, "id1"], [6, "id2"], [8, "id1"], [8, "id2"], [10, "id1"], [26, "id1"], [30, "id1"], [37, "id1"]], "cambrian.agents.object": [[7, "module-cambrian.agents.object"]], "cambrian.agents.point": [[8, "module-cambrian.agents.point"]], "cambrian.envs.done_fns": [[9, "module-cambrian.envs.done_fns"]], "Functions": [[9, "functions"], [11, "functions"], [12, "functions"], [18, "functions"], [20, "functions"], [21, "functions"], [25, "functions"], [27, "functions"], [29, "functions"], [30, "functions"], [31, "functions"], [33, "functions"]], "cambrian.envs": [[10, "module-cambrian.envs"]], "cambrian.envs.reward_fns": [[11, "module-cambrian.envs.reward_fns"]], "cambrian.envs.step_fns": [[12, "module-cambrian.envs.step_fns"]], "cambrian.eyes.eye": [[13, "module-cambrian.eyes.eye"]], "cambrian.eyes": [[14, "module-cambrian.eyes"]], "cambrian.eyes.optics": [[15, "module-cambrian.eyes.optics"]], "cambrian": [[16, "module-cambrian"]], "Attributes": [[16, "attributes"], [29, "attributes"]], "cambrian.ml.callbacks": [[17, "module-cambrian.ml.callbacks"]], "cambrian.ml.constraint_fns": [[18, "module-cambrian.ml.constraint_fns"]], "cambrian.ml.evo": [[19, "module-cambrian.ml.evo"]], "cambrian.ml.features_extractors": [[20, "module-cambrian.ml.features_extractors"]], "cambrian.ml.fitness_fns": [[21, "module-cambrian.ml.fitness_fns"]], "cambrian.ml": [[22, "module-cambrian.ml"]], "cambrian.ml.model": [[23, "module-cambrian.ml.model"]], "cambrian.ml.trainer": [[24, "module-cambrian.ml.trainer"]], "cambrian.renderer": [[25, "module-cambrian.renderer"]], "cambrian.renderer.overlays": [[26, "module-cambrian.renderer.overlays"]], "cambrian.renderer.render_utils": [[27, "module-cambrian.renderer.render_utils"]], "cambrian.renderer.renderer": [[28, "module-cambrian.renderer.renderer"]], "cambrian.utils.cambrian_xml": [[29, "module-cambrian.utils.cambrian_xml"]], "cambrian.utils.config": [[30, "module-cambrian.utils.config"]], "cambrian.utils": [[31, "module-cambrian.utils"]], "cambrian.utils.logger": [[32, "module-cambrian.utils.logger"]], "cambrian.utils.wrappers": [[33, "module-cambrian.utils.wrappers"]], "API Reference": [[34, "api-reference"]], "Core Submodules": [[34, "core-submodules"]], "Utilities": [[34, "utilities"]], "Configuring an Experiment": [[35, "configuring-an-experiment"]], "Hydra": [[35, "hydra"]], "Features": [[35, "features"]], "Config Schema": [[35, "config-schema"]], "Config Composition": [[35, "config-composition"]], "Config Introspection": [[35, "config-introspection"]], "Config Overrides": [[35, "config-overrides"]], "Training an Agent": [[37, "training-an-agent"]], "Running a single training loop": [[37, "running-a-single-training-loop"]], "Running on a cluster": [[37, "running-on-a-cluster"]], "Continue training from a checkpoint": [[37, "continue-training-from-a-checkpoint"]], "Running evolution": [[37, "running-evolution"]], "Adding parameters to optimize": [[37, "adding-parameters-to-optimize"]], "Resuming a failed evolution": [[37, "resuming-a-failed-evolution"]], "Running a training sweep": [[37, "running-a-training-sweep"]], "Adding sweep parameters": [[37, "adding-sweep-parameters"]], "Visualizing the Env": [[38, "visualizing-the-env"]], "Display Methods": [[38, "display-methods"]], "Interactive + Display": [[38, "interactive-display"], [38, "id1"]], "Non-interactive + Headless": [[38, "non-interactive-headless"]], "Viewer Shortcuts": [[38, "viewer-shortcuts"]], "Custom Viewer": [[38, "custom-viewer"]], "Mujoco Viewer": [[38, "mujoco-viewer"]]}, "indexentries": {"mjcambrianagent (class in cambrian.agents.agent)": [[5, "cambrian.agents.agent.MjCambrianAgent"]], "mjcambrianagent2d (class in cambrian.agents.agent)": [[5, "cambrian.agents.agent.MjCambrianAgent2D"]], "mjcambrianagentconfig (class in cambrian.agents.agent)": [[5, "cambrian.agents.agent.MjCambrianAgentConfig"]], "action_space (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.action_space"], [6, "cambrian.agents.MjCambrianAgent.action_space"]], "apply_action() (mjcambrianagent method)": [[5, "cambrian.agents.agent.MjCambrianAgent.apply_action"], [6, "cambrian.agents.MjCambrianAgent.apply_action"]], "cambrian.agents.agent": [[5, "module-cambrian.agents.agent"]], "generate_xml() (mjcambrianagent method)": [[5, "cambrian.agents.agent.MjCambrianAgent.generate_xml"], [6, "cambrian.agents.MjCambrianAgent.generate_xml"]], "geom (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.geom"], [6, "cambrian.agents.MjCambrianAgent.geom"]], "get_action_privileged() (mjcambrianagent method)": [[5, "cambrian.agents.agent.MjCambrianAgent.get_action_privileged"], [6, "cambrian.agents.MjCambrianAgent.get_action_privileged"]], "has_contacts (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.has_contacts"], [6, "cambrian.agents.MjCambrianAgent.has_contacts"]], "init_pos (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.init_pos"], [6, "cambrian.agents.MjCambrianAgent.init_pos"]], "init_quat (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.init_quat"], [6, "cambrian.agents.MjCambrianAgent.init_quat"]], "last_action (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.last_action"], [6, "cambrian.agents.MjCambrianAgent.last_action"]], "module": [[5, "module-cambrian.agents.agent"], [6, "module-cambrian.agents"], [7, "module-cambrian.agents.object"], [8, "module-cambrian.agents.point"], [9, "module-cambrian.envs.done_fns"], [10, "module-cambrian.envs"], [11, "module-cambrian.envs.reward_fns"], [12, "module-cambrian.envs.step_fns"], [13, "module-cambrian.eyes.eye"], [14, "module-cambrian.eyes"], [15, "module-cambrian.eyes.optics"], [16, "module-cambrian"], [17, "module-cambrian.ml.callbacks"], [18, "module-cambrian.ml.constraint_fns"], [19, "module-cambrian.ml.evo"], [20, "module-cambrian.ml.features_extractors"], [21, "module-cambrian.ml.fitness_fns"], [22, "module-cambrian.ml"], [23, "module-cambrian.ml.model"], [24, "module-cambrian.ml.trainer"], [25, "module-cambrian.renderer"], [26, "module-cambrian.renderer.overlays"], [27, "module-cambrian.renderer.render_utils"], [28, "module-cambrian.renderer.renderer"], [29, "module-cambrian.utils.cambrian_xml"], [30, "module-cambrian.utils.config"], [31, "module-cambrian.utils"], [32, "module-cambrian.utils.logger"], [33, "module-cambrian.utils.wrappers"]], "observation_space (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.observation_space"], [6, "cambrian.agents.MjCambrianAgent.observation_space"]], "perturb_init_pose() (mjcambrianagent method)": [[5, "cambrian.agents.agent.MjCambrianAgent.perturb_init_pose"], [6, "cambrian.agents.MjCambrianAgent.perturb_init_pose"]], "pos (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.pos"], [6, "cambrian.agents.MjCambrianAgent.pos"]], "qpos (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.qpos"], [6, "cambrian.agents.MjCambrianAgent.qpos"]], "quat (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.quat"], [6, "cambrian.agents.MjCambrianAgent.quat"]], "render() (mjcambrianagent method)": [[5, "cambrian.agents.agent.MjCambrianAgent.render"], [6, "cambrian.agents.MjCambrianAgent.render"]], "reset() (mjcambrianagent method)": [[5, "cambrian.agents.agent.MjCambrianAgent.reset"], [6, "cambrian.agents.MjCambrianAgent.reset"]], "step() (mjcambrianagent method)": [[5, "cambrian.agents.agent.MjCambrianAgent.step"], [6, "cambrian.agents.MjCambrianAgent.step"]], "trainable (mjcambrianagent property)": [[5, "cambrian.agents.agent.MjCambrianAgent.trainable"], [6, "cambrian.agents.MjCambrianAgent.trainable"]], "mjcambrianagent (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgent"]], "mjcambrianagent2d (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgent2D"]], "mjcambrianagentconfig (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgentConfig"]], "mjcambrianagentobject (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgentObject"]], "mjcambrianagentpoint (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgentPoint"]], "mjcambrianagentpointmazeoptimal (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgentPointMazeOptimal"]], "mjcambrianagentpointmazerandom (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgentPointMazeRandom"]], "mjcambrianagentpointprey (class in cambrian.agents)": [[6, "cambrian.agents.MjCambrianAgentPointPrey"]], "action_space (mjcambrianagentpoint property)": [[6, "cambrian.agents.MjCambrianAgentPoint.action_space"], [8, "cambrian.agents.point.MjCambrianAgentPoint.action_space"]], "apply_action() (mjcambrianagentpoint method)": [[6, "cambrian.agents.MjCambrianAgentPoint.apply_action"], [8, "cambrian.agents.point.MjCambrianAgentPoint.apply_action"]], "cambrian.agents": [[6, "module-cambrian.agents"]], "get_action_privileged() (mjcambrianagentobject method)": [[6, "cambrian.agents.MjCambrianAgentObject.get_action_privileged"], [7, "cambrian.agents.object.MjCambrianAgentObject.get_action_privileged"]], "get_action_privileged() (mjcambrianagentpointmazeoptimal method)": [[6, "cambrian.agents.MjCambrianAgentPointMazeOptimal.get_action_privileged"], [8, "cambrian.agents.point.MjCambrianAgentPointMazeOptimal.get_action_privileged"]], "get_action_privileged() (mjcambrianagentpointmazerandom method)": [[6, "cambrian.agents.MjCambrianAgentPointMazeRandom.get_action_privileged"], [8, "cambrian.agents.point.MjCambrianAgentPointMazeRandom.get_action_privileged"]], "get_action_privileged() (mjcambrianagentpointprey method)": [[6, "cambrian.agents.MjCambrianAgentPointPrey.get_action_privileged"], [8, "cambrian.agents.point.MjCambrianAgentPointPrey.get_action_privileged"]], "reset() (mjcambrianagentpointmazeoptimal method)": [[6, "cambrian.agents.MjCambrianAgentPointMazeOptimal.reset"], [8, "cambrian.agents.point.MjCambrianAgentPointMazeOptimal.reset"]], "reset() (mjcambrianagentpointmazerandom method)": [[6, "cambrian.agents.MjCambrianAgentPointMazeRandom.reset"], [8, "cambrian.agents.point.MjCambrianAgentPointMazeRandom.reset"]], "mjcambrianagentobject (class in cambrian.agents.object)": [[7, "cambrian.agents.object.MjCambrianAgentObject"]], "cambrian.agents.object": [[7, "module-cambrian.agents.object"]], "mjcambrianagentpoint (class in cambrian.agents.point)": [[8, "cambrian.agents.point.MjCambrianAgentPoint"]], "mjcambrianagentpointmazeoptimal (class in cambrian.agents.point)": [[8, "cambrian.agents.point.MjCambrianAgentPointMazeOptimal"]], "mjcambrianagentpointmazerandom (class in cambrian.agents.point)": [[8, "cambrian.agents.point.MjCambrianAgentPointMazeRandom"]], "mjcambrianagentpointprey (class in cambrian.agents.point)": [[8, "cambrian.agents.point.MjCambrianAgentPointPrey"]], "cambrian.agents.point": [[8, "module-cambrian.agents.point"]], "cambrian.envs.done_fns": [[9, "module-cambrian.envs.done_fns"]], "done_combined() (in module cambrian.envs.done_fns)": [[9, "cambrian.envs.done_fns.done_combined"]], "done_if_close_to_agents() (in module cambrian.envs.done_fns)": [[9, "cambrian.envs.done_fns.done_if_close_to_agents"]], "done_if_exceeds_max_episode_steps() (in module cambrian.envs.done_fns)": [[9, "cambrian.envs.done_fns.done_if_exceeds_max_episode_steps"]], "done_if_has_contacts() (in module cambrian.envs.done_fns)": [[9, "cambrian.envs.done_fns.done_if_has_contacts"]], "done_if_low_reward() (in module cambrian.envs.done_fns)": [[9, "cambrian.envs.done_fns.done_if_low_reward"]], "done_never() (in module cambrian.envs.done_fns)": [[9, "cambrian.envs.done_fns.done_never"]], "mjcambrianenv (class in cambrian.envs)": [[10, "cambrian.envs.MjCambrianEnv"]], "mjcambrianenvconfig (class in cambrian.envs)": [[10, "cambrian.envs.MjCambrianEnvConfig"]], "mjcambrianmazeenv (class in cambrian.envs)": [[10, "cambrian.envs.MjCambrianMazeEnv"]], "mjcambrianmazeenvconfig (class in cambrian.envs)": [[10, "cambrian.envs.MjCambrianMazeEnvConfig"]], "action_space() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.action_space"]], "action_spaces (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.action_spaces"]], "agents (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.agents"]], "cambrian.envs": [[10, "module-cambrian.envs"]], "close() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.close"]], "cumulative_reward (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.cumulative_reward"]], "data (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.data"]], "episode_step (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.episode_step"]], "generate_xml() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.generate_xml"]], "generate_xml() (mjcambrianmazeenv method)": [[10, "cambrian.envs.MjCambrianMazeEnv.generate_xml"]], "max_episode_steps (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.max_episode_steps"]], "maze (mjcambrianmazeenv property)": [[10, "cambrian.envs.MjCambrianMazeEnv.maze"]], "maze_store (mjcambrianmazeenv property)": [[10, "cambrian.envs.MjCambrianMazeEnv.maze_store"]], "model (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.model"]], "name (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.name"]], "num_agents (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.num_agents"]], "num_timesteps (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.num_timesteps"]], "observation_space() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.observation_space"]], "observation_spaces (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.observation_spaces"]], "overlays (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.overlays"]], "possible_agents (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.possible_agents"]], "record (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.record"]], "render() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.render"]], "renderer (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.renderer"]], "reset() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.reset"]], "reset() (mjcambrianmazeenv method)": [[10, "cambrian.envs.MjCambrianMazeEnv.reset"]], "save() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.save"]], "set_random_seed() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.set_random_seed"]], "stashed_cumulative_reward (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.stashed_cumulative_reward"]], "state() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.state"]], "step() (mjcambrianenv method)": [[10, "cambrian.envs.MjCambrianEnv.step"]], "xml (mjcambrianenv property)": [[10, "cambrian.envs.MjCambrianEnv.xml"]], "calc_delta() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.calc_delta"]], "calc_quickness() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.calc_quickness"]], "cambrian.envs.reward_fns": [[11, "module-cambrian.envs.reward_fns"]], "check_if_larger() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.check_if_larger"]], "euclidean_delta_from_init() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.euclidean_delta_from_init"]], "penalize_if_has_contacts() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.penalize_if_has_contacts"]], "reward_combined() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.reward_combined"]], "reward_euclidean_delta_to_agents() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.reward_euclidean_delta_to_agents"]], "reward_for_termination() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.reward_for_termination"]], "reward_for_truncation() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.reward_for_truncation"]], "reward_if_agents_respawned() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.reward_if_agents_respawned"]], "reward_if_close_to_agents() (in module cambrian.envs.reward_fns)": [[11, "cambrian.envs.reward_fns.reward_if_close_to_agents"]], "cambrian.envs.step_fns": [[12, "module-cambrian.envs.step_fns"]], "respawn_agent() (in module cambrian.envs.step_fns)": [[12, "cambrian.envs.step_fns.respawn_agent"]], "step_add_agent_qpos_to_info() (in module cambrian.envs.step_fns)": [[12, "cambrian.envs.step_fns.step_add_agent_qpos_to_info"]], "step_combined() (in module cambrian.envs.step_fns)": [[12, "cambrian.envs.step_fns.step_combined"]], "step_respawn_agents_if_close_to_agents() (in module cambrian.envs.step_fns)": [[12, "cambrian.envs.step_fns.step_respawn_agents_if_close_to_agents"]], "mjcambrianeye (class in cambrian.eyes.eye)": [[13, "cambrian.eyes.eye.MjCambrianEye"]], "mjcambrianeyeconfig (class in cambrian.eyes.eye)": [[13, "cambrian.eyes.eye.MjCambrianEyeConfig"]], "cambrian.eyes.eye": [[13, "module-cambrian.eyes.eye"]], "config (mjcambrianeye property)": [[13, "cambrian.eyes.eye.MjCambrianEye.config"], [14, "cambrian.eyes.MjCambrianEye.config"]], "generate_xml() (mjcambrianeye method)": [[13, "cambrian.eyes.eye.MjCambrianEye.generate_xml"], [14, "cambrian.eyes.MjCambrianEye.generate_xml"]], "name (mjcambrianeye property)": [[13, "cambrian.eyes.eye.MjCambrianEye.name"], [14, "cambrian.eyes.MjCambrianEye.name"]], "observation_space (mjcambrianeye property)": [[13, "cambrian.eyes.eye.MjCambrianEye.observation_space"], [14, "cambrian.eyes.MjCambrianEye.observation_space"]], "prev_obs (mjcambrianeye property)": [[13, "cambrian.eyes.eye.MjCambrianEye.prev_obs"], [14, "cambrian.eyes.MjCambrianEye.prev_obs"]], "render() (mjcambrianeye method)": [[13, "cambrian.eyes.eye.MjCambrianEye.render"], [14, "cambrian.eyes.MjCambrianEye.render"]], "reset() (mjcambrianeye method)": [[13, "cambrian.eyes.eye.MjCambrianEye.reset"], [14, "cambrian.eyes.MjCambrianEye.reset"]], "step() (mjcambrianeye method)": [[13, "cambrian.eyes.eye.MjCambrianEye.step"], [14, "cambrian.eyes.MjCambrianEye.step"]], "mjcambrianapproxmultieye (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianApproxMultiEye"]], "mjcambrianapproxmultieyeconfig (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianApproxMultiEyeConfig"]], "mjcambrianeye (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianEye"]], "mjcambrianeyeconfig (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianEyeConfig"]], "mjcambrianmultieye (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianMultiEye"]], "mjcambrianmultieyeconfig (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianMultiEyeConfig"]], "mjcambrianopticseye (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianOpticsEye"]], "mjcambrianopticseyeconfig (class in cambrian.eyes)": [[14, "cambrian.eyes.MjCambrianOpticsEyeConfig"]], "cambrian.eyes": [[14, "module-cambrian.eyes"]], "eyes (mjcambrianmultieye property)": [[14, "cambrian.eyes.MjCambrianMultiEye.eyes"]], "generate_xml() (mjcambrianapproxmultieye method)": [[14, "cambrian.eyes.MjCambrianApproxMultiEye.generate_xml"]], "generate_xml() (mjcambrianmultieye method)": [[14, "cambrian.eyes.MjCambrianMultiEye.generate_xml"]], "name (mjcambrianmultieye property)": [[14, "cambrian.eyes.MjCambrianMultiEye.name"]], "observation_space (mjcambrianmultieye property)": [[14, "cambrian.eyes.MjCambrianMultiEye.observation_space"]], "prev_obs (mjcambrianmultieye property)": [[14, "cambrian.eyes.MjCambrianMultiEye.prev_obs"]], "render() (mjcambrianmultieye method)": [[14, "cambrian.eyes.MjCambrianMultiEye.render"]], "reset() (mjcambrianapproxmultieye method)": [[14, "cambrian.eyes.MjCambrianApproxMultiEye.reset"]], "reset() (mjcambrianmultieye method)": [[14, "cambrian.eyes.MjCambrianMultiEye.reset"]], "step() (mjcambrianapproxmultieye method)": [[14, "cambrian.eyes.MjCambrianApproxMultiEye.step"]], "step() (mjcambrianmultieye method)": [[14, "cambrian.eyes.MjCambrianMultiEye.step"]], "step() (mjcambrianopticseye method)": [[14, "cambrian.eyes.MjCambrianOpticsEye.step"], [15, "cambrian.eyes.optics.MjCambrianOpticsEye.step"]], "mjcambrianapertureconfig (class in cambrian.eyes.optics)": [[15, "cambrian.eyes.optics.MjCambrianApertureConfig"]], "mjcambriancircularapertureconfig (class in cambrian.eyes.optics)": [[15, "cambrian.eyes.optics.MjCambrianCircularApertureConfig"]], "mjcambrianmaskapertureconfig (class in cambrian.eyes.optics)": [[15, "cambrian.eyes.optics.MjCambrianMaskApertureConfig"]], "mjcambrianopticseye (class in cambrian.eyes.optics)": [[15, "cambrian.eyes.optics.MjCambrianOpticsEye"]], "mjcambrianopticseyeconfig (class in cambrian.eyes.optics)": [[15, "cambrian.eyes.optics.MjCambrianOpticsEyeConfig"]], "cambrian.eyes.optics": [[15, "module-cambrian.eyes.optics"]], "__author__ (in module cambrian)": [[16, "cambrian.__author__"]], "__license__ (in module cambrian)": [[16, "cambrian.__license__"]], "cambrian": [[16, "module-cambrian"]], "mjcambriancallbacklistwithsharedparent (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianCallbackListWithSharedParent"]], "mjcambrianevalcallback (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianEvalCallback"]], "mjcambriangpuusagecallback (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianGPUUsageCallback"]], "mjcambrianplotevaluationscallback (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianPlotEvaluationsCallback"]], "mjcambrianplotmonitorcallback (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianPlotMonitorCallback"]], "mjcambrianprogressbarcallback (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianProgressBarCallback"]], "mjcambriansaveconfigcallback (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianSaveConfigCallback"]], "mjcambriansavepolicycallback (class in cambrian.ml.callbacks)": [[17, "cambrian.ml.callbacks.MjCambrianSavePolicyCallback"]], "__del__() (mjcambrianprogressbarcallback method)": [[17, "cambrian.ml.callbacks.MjCambrianProgressBarCallback.__del__"]], "cambrian.ml.callbacks": [[17, "module-cambrian.ml.callbacks"]], "on_multirun_start() (mjcambriansaveconfigcallback method)": [[17, "cambrian.ml.callbacks.MjCambrianSaveConfigCallback.on_multirun_start"]], "on_run_start() (mjcambriansaveconfigcallback method)": [[17, "cambrian.ml.callbacks.MjCambrianSaveConfigCallback.on_run_start"]], "cambrian.ml.constraint_fns": [[18, "module-cambrian.ml.constraint_fns"]], "constrain_morphologically_feasible_eyes() (in module cambrian.ml.constraint_fns)": [[18, "cambrian.ml.constraint_fns.constrain_morphologically_feasible_eyes"]], "constrain_total_memory_throughput() (in module cambrian.ml.constraint_fns)": [[18, "cambrian.ml.constraint_fns.constrain_total_memory_throughput"]], "constrain_total_num_eyes() (in module cambrian.ml.constraint_fns)": [[18, "cambrian.ml.constraint_fns.constrain_total_num_eyes"]], "constrain_total_pixels() (in module cambrian.ml.constraint_fns)": [[18, "cambrian.ml.constraint_fns.constrain_total_pixels"]], "nevergrad_constraint_fn() (in module cambrian.ml.constraint_fns)": [[18, "cambrian.ml.constraint_fns.nevergrad_constraint_fn"]], "mjcambrianevoconfig (class in cambrian.ml.evo)": [[19, "cambrian.ml.evo.MjCambrianEvoConfig"]], "cambrian.ml.evo": [[19, "module-cambrian.ml.evo"]], "mjcambriancombinedextractor (class in cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.MjCambrianCombinedExtractor"]], "mjcambrianimagefeaturesextractor (class in cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.MjCambrianImageFeaturesExtractor"]], "mjcambrianmlpextractor (class in cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.MjCambrianMLPExtractor"]], "mjcambriannaturecnnextractor (class in cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.MjCambrianNatureCNNExtractor"]], "permutedflattenextractor (class in cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.PermutedFlattenExtractor"]], "cambrian.ml.features_extractors": [[20, "module-cambrian.ml.features_extractors"]], "is_image_space() (in module cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.is_image_space"]], "maybe_transpose_obs() (in module cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.maybe_transpose_obs"]], "maybe_transpose_space() (in module cambrian.ml.features_extractors)": [[20, "cambrian.ml.features_extractors.maybe_transpose_space"]], "cambrian.ml.fitness_fns": [[21, "module-cambrian.ml.fitness_fns"]], "fitness_from_evaluations() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.fitness_from_evaluations"]], "fitness_from_monitor() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.fitness_from_monitor"]], "fitness_from_txt() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.fitness_from_txt"]], "fitness_num_eyes() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.fitness_num_eyes"]], "fitness_num_eyes_and_fov() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.fitness_num_eyes_and_fov"]], "parse_evaluations_npz() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.parse_evaluations_npz"]], "parse_monitor_csv() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.parse_monitor_csv"]], "top_n_percent() (in module cambrian.ml.fitness_fns)": [[21, "cambrian.ml.fitness_fns.top_n_percent"]], "cambrian.ml": [[22, "module-cambrian.ml"]], "mjcambrianmodel (class in cambrian.ml.model)": [[23, "cambrian.ml.model.MjCambrianModel"]], "cambrian.ml.model": [[23, "module-cambrian.ml.model"]], "load_policy() (mjcambrianmodel method)": [[23, "cambrian.ml.model.MjCambrianModel.load_policy"]], "load_rollout() (mjcambrianmodel method)": [[23, "cambrian.ml.model.MjCambrianModel.load_rollout"]], "predict() (mjcambrianmodel method)": [[23, "cambrian.ml.model.MjCambrianModel.predict"]], "save_policy() (mjcambrianmodel method)": [[23, "cambrian.ml.model.MjCambrianModel.save_policy"]], "mjcambriantrainer (class in cambrian.ml.trainer)": [[24, "cambrian.ml.trainer.MjCambrianTrainer"]], "mjcambriantrainerconfig (class in cambrian.ml.trainer)": [[24, "cambrian.ml.trainer.MjCambrianTrainerConfig"]], "cambrian.ml.trainer": [[24, "module-cambrian.ml.trainer"]], "test() (mjcambriantrainer method)": [[24, "cambrian.ml.trainer.MjCambrianTrainer.test"]], "train() (mjcambriantrainer method)": [[24, "cambrian.ml.trainer.MjCambrianTrainer.train"]], "mjcambrianrenderer (class in cambrian.renderer)": [[25, "cambrian.renderer.MjCambrianRenderer"]], "mjcambrianrendererconfig (class in cambrian.renderer)": [[25, "cambrian.renderer.MjCambrianRendererConfig"]], "mjcambrianrenderersavemode (class in cambrian.renderer)": [[25, "cambrian.renderer.MjCambrianRendererSaveMode"]], "cambrian.renderer": [[25, "module-cambrian.renderer"]], "convert_depth_distances() (in module cambrian.renderer)": [[25, "cambrian.renderer.convert_depth_distances"]], "resize_with_aspect_fill() (in module cambrian.renderer)": [[25, "cambrian.renderer.resize_with_aspect_fill"]], "mjcambriancursor (class in cambrian.renderer.overlays)": [[26, "cambrian.renderer.overlays.MjCambrianCursor"]], "mjcambrianimagevieweroverlay (class in cambrian.renderer.overlays)": [[26, "cambrian.renderer.overlays.MjCambrianImageViewerOverlay"]], "mjcambriansitevieweroverlay (class in cambrian.renderer.overlays)": [[26, "cambrian.renderer.overlays.MjCambrianSiteViewerOverlay"]], "mjcambriantextvieweroverlay (class in cambrian.renderer.overlays)": [[26, "cambrian.renderer.overlays.MjCambrianTextViewerOverlay"]], "mjcambrianvieweroverlay (class in cambrian.renderer.overlays)": [[26, "cambrian.renderer.overlays.MjCambrianViewerOverlay"]], "cambrian.renderer.overlays": [[26, "module-cambrian.renderer.overlays"]], "draw_after_render() (mjcambrianimagevieweroverlay method)": [[26, "cambrian.renderer.overlays.MjCambrianImageViewerOverlay.draw_after_render"]], "draw_after_render() (mjcambriantextvieweroverlay method)": [[26, "cambrian.renderer.overlays.MjCambrianTextViewerOverlay.draw_after_render"]], "draw_after_render() (mjcambrianvieweroverlay method)": [[26, "cambrian.renderer.overlays.MjCambrianViewerOverlay.draw_after_render"]], "draw_before_render() (mjcambriansitevieweroverlay method)": [[26, "cambrian.renderer.overlays.MjCambrianSiteViewerOverlay.draw_before_render"]], "draw_before_render() (mjcambrianvieweroverlay method)": [[26, "cambrian.renderer.overlays.MjCambrianViewerOverlay.draw_before_render"]], "add_border() (in module cambrian.renderer.render_utils)": [[27, "cambrian.renderer.render_utils.add_border"]], "cambrian.renderer.render_utils": [[27, "module-cambrian.renderer.render_utils"]], "convert_depth_distances() (in module cambrian.renderer.render_utils)": [[27, "cambrian.renderer.render_utils.convert_depth_distances"]], "generate_composite() (in module cambrian.renderer.render_utils)": [[27, "cambrian.renderer.render_utils.generate_composite"]], "project_images_to_spherical_panorama() (in module cambrian.renderer.render_utils)": [[27, "cambrian.renderer.render_utils.project_images_to_spherical_panorama"]], "resize_with_aspect_fill() (in module cambrian.renderer.render_utils)": [[27, "cambrian.renderer.render_utils.resize_with_aspect_fill"]], "mjcambrianoffscreenviewer (class in cambrian.renderer.renderer)": [[28, "cambrian.renderer.renderer.MjCambrianOffscreenViewer"]], "mjcambrianonscreenviewer (class in cambrian.renderer.renderer)": [[28, "cambrian.renderer.renderer.MjCambrianOnscreenViewer"]], "mjcambrianrenderer (class in cambrian.renderer.renderer)": [[28, "cambrian.renderer.renderer.MjCambrianRenderer"]], "mjcambrianrendererconfig (class in cambrian.renderer.renderer)": [[28, "cambrian.renderer.renderer.MjCambrianRendererConfig"]], "mjcambrianrenderersavemode (class in cambrian.renderer.renderer)": [[28, "cambrian.renderer.renderer.MjCambrianRendererSaveMode"]], "mjcambrianviewer (class in cambrian.renderer.renderer)": [[28, "cambrian.renderer.renderer.MjCambrianViewer"]], "cambrian.renderer.renderer": [[28, "module-cambrian.renderer.renderer"]], "mjcambrianxml (class in cambrian.utils.cambrian_xml)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML"]], "mjcambrianxmlconfig (in module cambrian.utils.cambrian_xml)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXMLConfig"]], "add() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.add"]], "base_dir (mjcambrianxml property)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.base_dir"]], "cambrian.utils.cambrian_xml": [[29, "module-cambrian.utils.cambrian_xml"]], "combine() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.combine"]], "convert_xml_to_yaml() (in module cambrian.utils.cambrian_xml)": [[29, "cambrian.utils.cambrian_xml.convert_xml_to_yaml"]], "find() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.find"]], "findall() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.findall"]], "from_config() (mjcambrianxml static method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.from_config"]], "from_string() (mjcambrianxml static method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.from_string"]], "get_path() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.get_path"]], "load() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.load"]], "make_empty() (mjcambrianxml static method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.make_empty"]], "parse() (mjcambrianxml static method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.parse"]], "remove() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.remove"]], "root (mjcambrianxml property)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.root"]], "to_string() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.to_string"]], "write() (mjcambrianxml method)": [[29, "cambrian.utils.cambrian_xml.MjCambrianXML.write"]], "mjcambrianbaseconfig (class in cambrian.utils.config)": [[30, "cambrian.utils.config.MjCambrianBaseConfig"]], "mjcambriancontainerconfig (class in cambrian.utils.config)": [[30, "cambrian.utils.config.MjCambrianContainerConfig"]], "mjcambrianflagwrappermeta (class in cambrian.utils.config)": [[30, "cambrian.utils.config.MjCambrianFlagWrapperMeta"]], "__contains__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__contains__"]], "__delattr__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__delattr__"]], "__delitem__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__delitem__"]], "__getattr__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__getattr__"]], "__getitem__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__getitem__"]], "__getitem__() (mjcambrianflagwrappermeta method)": [[30, "cambrian.utils.config.MjCambrianFlagWrapperMeta.__getitem__"]], "__getstate__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__getstate__"]], "__iter__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__iter__"]], "__len__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__len__"]], "__setattr__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__setattr__"]], "__setitem__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__setitem__"]], "__setstate__() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.__setstate__"]], "build_pattern() (in module cambrian.utils.config)": [[30, "cambrian.utils.config.build_pattern"]], "cambrian.utils.config": [[30, "module-cambrian.utils.config"]], "clear() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.clear"]], "compose() (mjcambriancontainerconfig class method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.compose"]], "config_wrapper() (in module cambrian.utils.config)": [[30, "cambrian.utils.config.config_wrapper"]], "content (mjcambriancontainerconfig property)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.content"]], "copy() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.copy"]], "create() (mjcambriancontainerconfig class method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.create"]], "get_type() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.get_type"]], "get_typename() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.get_typename"]], "glob() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.glob"]], "globbed_eval() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.globbed_eval"]], "instance_flag_wrapper() (in module cambrian.utils.config)": [[30, "cambrian.utils.config.instance_flag_wrapper"]], "instance_wrapper() (in module cambrian.utils.config)": [[30, "cambrian.utils.config.instance_wrapper"]], "instantiate() (mjcambriancontainerconfig class method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.instantiate"]], "instantiate_here() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.instantiate_here"]], "isinstance() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.isinstance"]], "items() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.items"]], "keys() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.keys"]], "load() (mjcambriancontainerconfig class method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.load"]], "load_pickle() (mjcambriancontainerconfig class method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.load_pickle"]], "merge_with() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.merge_with"]], "merge_with_dotlist() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.merge_with_dotlist"]], "pickle() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.pickle"]], "resolve() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.resolve"]], "run_hydra() (in module cambrian.utils.config)": [[30, "cambrian.utils.config.run_hydra"]], "save() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.save"]], "select() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.select"]], "set_readonly() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.set_readonly"]], "set_readonly_temporarily() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.set_readonly_temporarily"]], "set_struct() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.set_struct"]], "set_struct_temporarily() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.set_struct_temporarily"]], "to_container() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.to_container"]], "to_yaml() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.to_yaml"]], "update() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.update"]], "values() (mjcambriancontainerconfig method)": [[30, "cambrian.utils.config.MjCambrianContainerConfig.values"]], "mjcambrianactuator (class in cambrian.utils)": [[31, "cambrian.utils.MjCambrianActuator"]], "mjcambriangeometry (class in cambrian.utils)": [[31, "cambrian.utils.MjCambrianGeometry"]], "mjcambrianjoint (class in cambrian.utils)": [[31, "cambrian.utils.MjCambrianJoint"]], "agent_selected() (in module cambrian.utils)": [[31, "cambrian.utils.agent_selected"]], "cambrian.utils": [[31, "module-cambrian.utils"]], "create() (mjcambrianjoint static method)": [[31, "cambrian.utils.MjCambrianJoint.create"]], "evaluate_policy() (in module cambrian.utils)": [[31, "cambrian.utils.evaluate_policy"]], "format_string_with_obj_attributes() (in module cambrian.utils)": [[31, "cambrian.utils.format_string_with_obj_attributes"]], "generate_sequence_from_range() (in module cambrian.utils)": [[31, "cambrian.utils.generate_sequence_from_range"]], "get_body_id() (in module cambrian.utils)": [[31, "cambrian.utils.get_body_id"]], "get_body_name() (in module cambrian.utils)": [[31, "cambrian.utils.get_body_name"]], "get_camera_id() (in module cambrian.utils)": [[31, "cambrian.utils.get_camera_id"]], "get_camera_name() (in module cambrian.utils)": [[31, "cambrian.utils.get_camera_name"]], "get_geom_id() (in module cambrian.utils)": [[31, "cambrian.utils.get_geom_id"]], "get_geom_name() (in module cambrian.utils)": [[31, "cambrian.utils.get_geom_name"]], "get_joint_id() (in module cambrian.utils)": [[31, "cambrian.utils.get_joint_id"]], "get_joint_name() (in module cambrian.utils)": [[31, "cambrian.utils.get_joint_name"]], "get_light_id() (in module cambrian.utils)": [[31, "cambrian.utils.get_light_id"]], "get_light_name() (in module cambrian.utils)": [[31, "cambrian.utils.get_light_name"]], "get_sensor_id() (in module cambrian.utils)": [[31, "cambrian.utils.get_sensor_id"]], "get_sensor_name() (in module cambrian.utils)": [[31, "cambrian.utils.get_sensor_name"]], "get_site_id() (in module cambrian.utils)": [[31, "cambrian.utils.get_site_id"]], "get_site_name() (in module cambrian.utils)": [[31, "cambrian.utils.get_site_name"]], "literal_eval_with_callables() (in module cambrian.utils)": [[31, "cambrian.utils.literal_eval_with_callables"]], "make_odd() (in module cambrian.utils)": [[31, "cambrian.utils.make_odd"]], "qposadrs (mjcambrianjoint property)": [[31, "cambrian.utils.MjCambrianJoint.qposadrs"]], "qveladrs (mjcambrianjoint property)": [[31, "cambrian.utils.MjCambrianJoint.qveladrs"]], "safe_eval() (in module cambrian.utils)": [[31, "cambrian.utils.safe_eval"]], "safe_index() (in module cambrian.utils)": [[31, "cambrian.utils.safe_index"]], "save_data() (in module cambrian.utils)": [[31, "cambrian.utils.save_data"]], "setattrs_temporary() (in module cambrian.utils)": [[31, "cambrian.utils.setattrs_temporary"]], "try_load_pickle() (in module cambrian.utils)": [[31, "cambrian.utils.try_load_pickle"]], "mjcambrianfilehandler (class in cambrian.utils.logger)": [[32, "cambrian.utils.logger.MjCambrianFileHandler"]], "mjcambrianloggermaxlevelfilter (class in cambrian.utils.logger)": [[32, "cambrian.utils.logger.MjCambrianLoggerMaxLevelFilter"]], "mjcambriantqdmstreamhandler (class in cambrian.utils.logger)": [[32, "cambrian.utils.logger.MjCambrianTqdmStreamHandler"]], "cambrian.utils.logger": [[32, "module-cambrian.utils.logger"]], "emit() (mjcambriantqdmstreamhandler method)": [[32, "cambrian.utils.logger.MjCambrianTqdmStreamHandler.emit"]], "filter() (mjcambrianloggermaxlevelfilter method)": [[32, "cambrian.utils.logger.MjCambrianLoggerMaxLevelFilter.filter"]], "mjcambrianconstantactionwrapper (class in cambrian.utils.wrappers)": [[33, "cambrian.utils.wrappers.MjCambrianConstantActionWrapper"]], "mjcambrianpettingzooenvwrapper (class in cambrian.utils.wrappers)": [[33, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper"]], "mjcambriansingleagentenvwrapper (class in cambrian.utils.wrappers)": [[33, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper"]], "action_space (mjcambrianpettingzooenvwrapper property)": [[33, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.action_space"]], "action_space (mjcambriansingleagentenvwrapper attribute)": [[33, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.action_space"]], "cambrian.utils.wrappers": [[33, "module-cambrian.utils.wrappers"]], "make_wrapped_env() (in module cambrian.utils.wrappers)": [[33, "cambrian.utils.wrappers.make_wrapped_env"]], "observation_space (mjcambrianpettingzooenvwrapper property)": [[33, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.observation_space"]], "observation_space (mjcambriansingleagentenvwrapper attribute)": [[33, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.observation_space"]], "reset() (mjcambrianpettingzooenvwrapper method)": [[33, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.reset"]], "reset() (mjcambriansingleagentenvwrapper method)": [[33, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.reset"]], "step() (mjcambrianconstantactionwrapper method)": [[33, "cambrian.utils.wrappers.MjCambrianConstantActionWrapper.step"]], "step() (mjcambrianpettingzooenvwrapper method)": [[33, "cambrian.utils.wrappers.MjCambrianPettingZooEnvWrapper.step"]], "step() (mjcambriansingleagentenvwrapper method)": [[33, "cambrian.utils.wrappers.MjCambrianSingleAgentEnvWrapper.step"]]}})